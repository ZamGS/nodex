!function(){"use strict";angular.module("app",["ngRoute","ngSanitize","angular-loading-bar","ngAnimate","ui.bootstrap","mgo-angular-wizard","textAngular","app.controllers","app.directives","app.localization","app.servicios","app.pagina","app.soporte","app.chat","app.ui.services","app.usuario","ModeloUsuario","app.producto","app.tienda","app.admin"]).config(["$routeProvider",function(e){return e.when("/",{redirectTo:"/dashboard"}).when("/dashboard",{templateUrl:"views/dashboard.html"}).when("/contacto",{templateUrl:"views/soporte/contacto.html"}).when("/usuario/perfil",{templateUrl:"views/usuario/perfil.html",controller:"UsuarioCtrl"}).when("/usuario/password",{templateUrl:"views/usuario/pass.html",controller:"UsuarioCtrl"}).when("/pagos",{templateUrl:"views/pagos/pagos.html"}).when("/upload",{templateUrl:"views/upload/test.html"}).when("/ui/typography",{templateUrl:"views/pages/lock-screen.html"}).when("/pages/profile",{templateUrl:"views/pages/profile.html"}).when("/404",{templateUrl:"views/pages/404.html"}).when("/pages/500",{templateUrl:"views/pages/500.html"}).when("/pages/suspendida",{templateUrl:"views/pages/suspendida.html"}).when("/pages/blank",{templateUrl:"views/pages/blank.html"}).when("/pages/invoice",{templateUrl:"views/pages/invoice.html"}).when("/tienda",{templateUrl:"views/tienda/inicio.html",controller:""}).when("/tienda/item/:producto_id",{templateUrl:"views/tienda/item.html",controller:"TiendaCtrl"}).when("/paginas",{templateUrl:"views/paginas/paginas.html",controller:"PaginasCtrl"}).when("/pagina/add",{templateUrl:"views/paginas/addPagina.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/textos",{templateUrl:"views/paginas/textos.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id",{templateUrl:"views/paginas/dash.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/config",{templateUrl:"views/paginas/pagina.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/seguidores",{templateUrl:"views/paginas/seguidores.html",controller:"SeguidoresCtrl"}).when("/pagina/:pagina_id/banners",{templateUrl:"scripts/paginas/banners.html",controller:"BannersCtrl"}).when("/pagina/:pagina_id/success",{templateUrl:"views/paginas/success.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/estilo",{templateUrl:"views/paginas/estilo.html",controller:"EstiloCtrl"}).when("/pagina/:pagina_id/publicaciones",{templateUrl:"views/paginas/publicaciones.html",controller:"PublicacionesCtrl"}).when("/pagina/:pagina_id/productos",{templateUrl:"views/paginas/productos.html",controller:"ProductoCtrl"}).when("/pagina/:pagina_id/producto/:producto_id",{templateUrl:"views/paginas/producto.html",controller:"ProductoDetalleCtrl"}).when("/pagina/producto/:producto_id",{templateUrl:"views/paginas/producto.html",controller:"ProductoCtrl"}).when("/pagina/:pagina_id/publicacion/:publicacion_id",{templateUrl:"views/paginas/publicacion.html",controller:"PublicacionesCtrl"}).when("/pagina/:pagina_id/cuentas",{templateUrl:"views/paginas/cuentas.html",controller:"PaginaCuentasCtrl"}).when("/pagina/:pagina_id/mensajes",{templateUrl:"views/paginas/mensajes.html",controller:"PaginaMensajesCtrl"}).when("/pagina/:pagina_id/mensaje/:mensaje_id",{templateUrl:"views/paginas/mensajes.html",controller:"PaginaMensajesCtrl"}).when("/pagina/:pagina_id/galerias",{templateUrl:"views/paginas/galerias.html",controller:"GaleriasCtrl"}).when("/pagina/:pagina_id/galeria/:galeria_id",{templateUrl:"views/paginas/galeria.html",controller:"GaleriasCtrl"}).when("/_=_",{templateUrl:"views/dashboard.html"}).when("/servicios",{templateUrl:"views/servicios/servicios.html",controller:"serviciosCtrl"}).when("/servicios/porPagar",{templateUrl:"views/servicios/pendientes.html"}).when("/servicios/facturas",{templateUrl:"views/servicios/facturas.html"}).when("/soporte/faqs",{templateUrl:"views/soporte/faqs.html"}).when("/soporte/chat",{templateUrl:"views/soporte/chat.html",controller:"ChatCtrl"}).when("/soporte/faqs/:faq_id",{templateUrl:"views/soporte/faqs.html"}).when("/test",{templateUrl:"views/pages/test.html",controller:""}).when("/admin",{templateUrl:"views/admin/dash.html",controller:"AdminDashCtrl"}).otherwise({redirectTo:"/404"})}])}(),angular.module("app.chart.ctrls",[]).controller("chartCtrl",["$scope",function(e){return e.easypiechart={percent:65,options:{animate:{duration:1e3,enabled:!0},barColor:"#1C7EBB",lineCap:"round",size:180,lineWidth:5}},e.easypiechart2={percent:35,options:{animate:{duration:1e3,enabled:!0},barColor:"#23AE89",lineCap:"round",size:180,lineWidth:10}},e.easypiechart3={percent:68,options:{animate:{duration:1e3,enabled:!0},barColor:"#2EC1CC",lineCap:"square",size:180,lineWidth:20,scaleLength:0}},e.gaugeChart1={data:{maxValue:3e3,animationSpeed:40,val:1375},options:{lines:12,angle:0,lineWidth:.47,pointer:{length:.6,strokeWidth:.03,color:"#000000"},limitMax:"false",colorStart:"#A3C86D",colorStop:"#A3C86D",strokeColor:"#E0E0E0",generateGradient:!0,percentColors:[[0,"#A3C86D"],[1,"#A3C86D"]]}},e.gaugeChart2={data:{maxValue:3e3,animationSpeed:45,val:1200},options:{lines:12,angle:0,lineWidth:.47,pointer:{length:.6,strokeWidth:.03,color:"#464646"},limitMax:"true",colorStart:"#7ACBEE",colorStop:"#7ACBEE",strokeColor:"#F1F1F1",generateGradient:!0,percentColors:[[0,"#7ACBEE"],[1,"#7ACBEE"]]}},e.gaugeChart3={data:{maxValue:3e3,animationSpeed:50,val:1100},options:{lines:12,angle:0,lineWidth:.47,pointer:{length:.6,strokeWidth:.03,color:"#464646"},limitMax:"true",colorStart:"#FF7857",colorStop:"#FF7857",strokeColor:"#F1F1F1",generateGradient:!0,percentColors:[[0,"#FF7857"],[1,"#FF7857"]]}}}]).controller("morrisChartCtrl",["$scope",function(e){return e.mainData=[{month:"2013-01",xbox:294e3,will:136e3,playstation:244e3},{month:"2013-02",xbox:228e3,will:335e3,playstation:127e3},{month:"2013-03",xbox:199e3,will:159e3,playstation:13e4},{month:"2013-04",xbox:174e3,will:16e4,playstation:82e3},{month:"2013-05",xbox:255e3,will:318e3,playstation:82e3},{month:"2013-06",xbox:298400,will:401800,playstation:98600},{month:"2013-07",xbox:37e4,will:225e3,playstation:159e3},{month:"2013-08",xbox:376700,will:303600,playstation:13e4},{month:"2013-09",xbox:527800,will:301e3,playstation:119400}],e.simpleData=[{year:"2008",value:20},{year:"2009",value:10},{year:"2010",value:5},{year:"2011",value:5},{year:"2012",value:20},{year:"2013",value:19}],e.comboData=[{year:"2008",a:20,b:16,c:12},{year:"2009",a:10,b:22,c:30},{year:"2010",a:5,b:14,c:20},{year:"2011",a:5,b:12,c:19},{year:"2012",a:20,b:19,c:13},{year:"2013",a:28,b:22,c:20}],e.donutData=[{label:"Download Sales",value:12},{label:"In-Store Sales",value:30},{label:"Mail-Order Sales",value:20},{label:"Online Sales",value:19}]}]).controller("flotChartCtrl",["$scope",function(e){var n,a;return n={},n.data1=[[2007,15],[2008,20],[2009,10],[2010,5],[2011,5],[2012,20],[2013,28]],n.data2=[[2007,15],[2008,16],[2009,22],[2010,14],[2011,12],[2012,19],[2013,22]],e.area={},e.area.data=[{data:n.data1,label:"Value A",lines:{fill:!0}},{data:n.data2,label:"Value B",points:{show:!0},yaxis:2}],e.area.options={series:{lines:{show:!0,fill:!1},points:{show:!0,lineWidth:2,fill:!0,fillColor:"#ffffff",symbol:"circle",radius:5},shadowSize:0},grid:{hoverable:!0,clickable:!0,tickColor:"#f9f9f9",borderWidth:1,borderColor:"#eeeeee"},colors:["#23AE89","#6A55C2"],tooltip:!0,tooltipOpts:{defaultTheme:!1},xaxis:{mode:"time"},yaxes:[{},{position:"right"}]},a={},a.data1=[[2008,20],[2009,10],[2010,5],[2011,5],[2012,20],[2013,28]],a.data2=[[2008,16],[2009,22],[2010,14],[2011,12],[2012,19],[2013,22]],a.data3=[[2008,12],[2009,30],[2010,20],[2011,19],[2012,13],[2013,20]],e.barChart={},e.barChart.data=[{label:"Value A",data:a.data1},{label:"Value B",data:a.data2},{label:"Value C",data:a.data3}],e.barChart.options={series:{stack:!0,bars:{show:!0,fill:1,barWidth:.3,align:"center",horizontal:!1,order:1}},grid:{hoverable:!0,borderWidth:1,borderColor:"#eeeeee"},tooltip:!0,tooltipOpts:{defaultTheme:!1},colors:["#23AE89","#2EC1CC","#FFB61C","#E94B3B"]},e.pieChart={},e.pieChart.data=[{label:"Download Sales",data:12},{label:"In-Store Sales",data:30},{label:"Mail-Order Sales",data:20},{label:"Online Sales",data:19}],e.pieChart.options={series:{pie:{show:!0}},legend:{show:!0},grid:{hoverable:!0,clickable:!0},colors:["#23AE89","#2EC1CC","#FFB61C","#E94B3B"],tooltip:!0,tooltipOpts:{content:"%p.0%, %s",defaultTheme:!1}},e.donutChart={},e.donutChart.data=[{label:"Download Sales",data:12},{label:"In-Store Sales",data:30},{label:"Mail-Order Sales",data:20},{label:"Online Sales",data:19}],e.donutChart.options={series:{pie:{show:!0,innerRadius:.5}},legend:{show:!0},grid:{hoverable:!0,clickable:!0},colors:["#23AE89","#2EC1CC","#FFB61C","#E94B3B"],tooltip:!0,tooltipOpts:{content:"%p.0%, %s",defaultTheme:!1}},e.donutChart2={},e.donutChart2.data=[{label:"Download Sales",data:12},{label:"In-Store Sales",data:30},{label:"Mail-Order Sales",data:20},{label:"Online Sales",data:19},{label:"Direct Sales",data:15}],e.donutChart2.options={series:{pie:{show:!0,innerRadius:.45}},legend:{show:!1},grid:{hoverable:!0,clickable:!0},colors:["#176799","#2F87B0","#42A4BB","#5BC0C4","#78D6C7"],tooltip:!0,tooltipOpts:{content:"%p.0%, %s",defaultTheme:!1}}}]).controller("flotChartCtrl.realtime",["$scope",function(e){}]).controller("sparklineCtrl",["$scope",function(e){return e.demoData1={data:[3,1,2,2,4,6,4,5,2,4,5,3,4,6,4,7],options:{type:"line",lineColor:"#fff",highlightLineColor:"#fff",fillColor:"#23AE89",spotColor:!1,minSpotColor:!1,maxSpotColor:!1,width:"100%",height:"150px"}},e.simpleChart1={data:[3,1,2,3,5,3,4,2],options:{type:"line",lineColor:"#1FB5AD",fillColor:"#bce0df",spotColor:!1,minSpotColor:!1,maxSpotColor:!1}},e.simpleChart2={data:[3,1,2,3,5,3,4,2],options:{type:"bar",barColor:"#1FB5AD"}},e.simpleChart3={data:[3,1,2,3,5,3,4,2],options:{type:"pie",sliceColors:["#1fb5ad","#95b75d","#57c8f1","#8175c7","#f3c022","#fa8564"]}},e.tristateChart1={data:[1,2,-3,-5,3,1,-4,2],options:{type:"tristate",posBarColor:"#95b75d",negBarColor:"#fa8564"}},e.largeChart1={data:[3,1,2,3,5,3,4,2],options:{type:"line",lineColor:"#674E9E",highlightLineColor:"#7ACBEE",fillColor:"#927ED1",spotColor:!1,minSpotColor:!1,maxSpotColor:!1,width:"100%",height:"150px"}},e.largeChart2={data:[3,1,2,3,5,3,4,2],options:{type:"bar",barColor:"#A3C86D",barWidth:10,width:"100%",height:"150px"}},e.largeChart3={data:[3,1,2,3,5],options:{type:"pie",sliceColors:["#A3C86D","#7ACBEE","#927ED1","#FDD761","#FF7857","#674E9E"],width:"150px",height:"150px"}}}]),angular.module("app.chart.directives",[]).directive("gaugeChart",[function(){return{restrict:"A",scope:{data:"=",options:"="},link:function(e,n,a){var o,t,i;return o=e.data,i=e.options,t=new Gauge(n[0]).setOptions(i),t.maxValue=o.maxValue,t.animationSpeed=o.animationSpeed,t.set(o.val)}}}]).directive("flotChart",[function(){return{restrict:"A",scope:{data:"=",options:"="},link:function(e,n,a){var o,t,i;return o=e.data,t=e.options,i=$.plot(n[0],o,t)}}}]).directive("flotChartRealtime",[function(){return{restrict:"A",link:function(e,n,a){var o,t,i,r,l,s;return o=[],r=300,t=function(){var e,n,a,t;for(o.length>0&&(o=o.slice(1));o.length<r;)n=o.length>0?o[o.length-1]:50,t=n+10*Math.random()-5,0>t?t=0:t>100&&(t=100),o.push(t);for(a=[],e=0;e<o.length;)a.push([e,o[e]]),++e;return a},l=function(){i.setData([t()]),i.draw(),setTimeout(l,s)},o=[],r=300,s=200,i=$.plot(n[0],[t()],{series:{lines:{show:!0,fill:!0},shadowSize:0},yaxis:{min:0,max:100},xaxis:{show:!1},grid:{hoverable:!0,borderWidth:1,borderColor:"#eeeeee"},colors:["#5BC0C4"]}),l()}}}]).directive("sparkline",[function(){return{restrict:"A",scope:{data:"=",options:"="},link:function(e,n,a){var o,t,i,r;return o=e.data,t=e.options,i=void 0,r=function(){return n.sparkline(o,t)},$(window).resize(function(e){return clearTimeout(i),i=setTimeout(r,200)}),r()}}}]).directive("morrisChart",[function(){return{restrict:"A",scope:{data:"="},link:function(e,n,a){var o,t,i,r;switch(t=e.data,a.type){case"line":return o=void 0===a.lineColors||""===a.lineColors?null:JSON.parse(a.lineColors),r={element:n[0],data:t,xkey:a.xkey,ykeys:JSON.parse(a.ykeys),labels:JSON.parse(a.labels),lineWidth:a.lineWidth||2,lineColors:o||["#0b62a4","#7a92a3","#4da74d","#afd8f8","#edc240","#cb4b4b","#9440ed"],resize:!0},new Morris.Line(r);case"area":return o=void 0===a.lineColors||""===a.lineColors?null:JSON.parse(a.lineColors),r={element:n[0],data:t,xkey:a.xkey,ykeys:JSON.parse(a.ykeys),labels:JSON.parse(a.labels),lineWidth:a.lineWidth||2,lineColors:o||["#0b62a4","#7a92a3","#4da74d","#afd8f8","#edc240","#cb4b4b","#9440ed"],behaveLikeLine:a.behaveLikeLine||!1,fillOpacity:a.fillOpacity||"auto",pointSize:a.pointSize||4,resize:!0},new Morris.Area(r);case"bar":return o=void 0===a.barColors||""===a.barColors?null:JSON.parse(a.barColors),r={element:n[0],data:t,xkey:a.xkey,ykeys:JSON.parse(a.ykeys),labels:JSON.parse(a.labels),barColors:o||["#0b62a4","#7a92a3","#4da74d","#afd8f8","#edc240","#cb4b4b","#9440ed"],stacked:a.stacked||null,resize:!0},new Morris.Bar(r);case"donut":return o=void 0===a.colors||""===a.colors?null:JSON.parse(a.colors),r={element:n[0],data:t,colors:o||["#0B62A4","#3980B5","#679DC6","#95BBD7","#B0CCE1","#095791","#095085","#083E67","#052C48","#042135"],resize:!0},a.formatter&&(i=new Function("y","data",a.formatter),r.formatter=i),new Morris.Donut(r)}}}}]),function(){"use strict";angular.module("app.ui.directives",[]).directive("uiTime",[function(){return{restrict:"A",link:function(e,n){var a,o;return o=function(){var e,t,i,r,l,s;return s=new Date,e=s.getHours(),t=s.getMinutes(),i=s.getSeconds(),t=a(t),i=a(i),l=e+":"+t+":"+i,n.html(l),r=setTimeout(o,500)},a=function(e){return 10>e&&(e="0"+e),e},o()}}}])}(),function(){"use strict";angular.module("app.ui.services",[]).factory("logger",[function(){var e;return toastr.options={closeButton:!0,positionClass:"toast-bottom-right",timeOut:"3000"},e=function(e,n){return toastr[n](e)},{log:function(n){e(n,"info")},logWarning:function(n){e(n,"warning")},logSuccess:function(n){e(n,"success")},logError:function(n){e(n,"error")}}}])}(),function(){"use strict";angular.module("app.admin",["app.admin.service"]).controller("AdminDashCtrl",["$scope","Admin","$routeParams","$route",function(e,n,a,o){function t(){n.websites(function(n,a){n?alert("Hubo un error"):(e.websites=a,e.listo=e.listo+1,e.notify("info","Ya cargaron los websites"))})}function i(){n.apps(function(n,a){n?alert("Hubo un error"):(e.apps=a,e.listo=e.listo+1,e.notify("info","Ya cargaron las apps"))})}e.paginas={},e.listo=0,i(),t(),$("#buscar").focus(),e.borrarApp=function(a){var o=confirm("Seguro que quieres borrar la aplicación: "+a);o&&n.deleteApp(a,function(n,a){n?(alert("ERROR"),console.log(n)):(e.notify("success","Aplicación borrada =S"),i())})},e.borrarWebsite=function(a){var o=confirm("Seguro que quieres borrar la aplicación: "+a);o&&n.deleteWebsite(a,function(n,a){n?(alert("ERROR"),console.log(n)):(e.notify("success","Aplicación borrada =S"),t())})}}])}(),function(){"use strict";angular.module("app.admin.service",["ngRoute"]).factory("Admin",["$http",function(e){return{dominios:function(n){e.get("/api/admin/dominios").success(function(e){n(null,e)}).error(function(){n(error,null)})},websites:function(n){e.get("/api/admin/websites").success(function(e){n(null,e)}).error(function(){n(error,null)})},apps:function(n){e.get("/api/admin/apps").success(function(e){n(null,e)}).error(function(){n(error,null)})},getOne:function(n,a){e.get("/api/paciente/"+n).success(function(e){a(null,e)})},deleteApp:function(n,a){e({method:"DELETE",url:"/api/admin/app/"+n}).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteWebsite:function(n,a){e({method:"DELETE",url:"/api/admin/website/"+n}).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteDomain:function(n,a){e({method:"DELETE",url:"/api/admin/domain/"+n}).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteSeccion:function(n,a,o){e({method:"DELETE",url:"/api/pagina/"+n+"/seccion/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})}}}])}(),function(){"use strict";angular.module("app.pagina.banners",[]).controller("BannersCtrl",["$scope","Pagina","$routeParams","$http",function(e,n,a,o){function t(){n.getBanners(i,function(n,a){n?e.notify("error",n):e.banners=a})}var i=a.pagina_id;e.uploadBanner=function(n){var a=new FormData;a.append("file",n[0]),o.post("/api/pagina/banners/pbanner/"+i,a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Se subió correctamente!"),t()}).error(function(){e.notify("warning","Error al subir la imagen")})},e.deleteBanner=function(a){var o=confirm("Realmente deseas eliminar este banner?");o&&n.deleteBanner(a,function(n,a){n?e.notify("warning",n):(e.notify("success",a),t())})},e.updateBanner=function(a){var o=prompt("Ingresa un texto para el banner"),r=prompt("Ingresa una URL para el banner"),l={banner_texto:o,banner_url:r,banner_pagina_id:i};n.updateBanner(l,a,function(n,a){n?e.notify("warning",n):(e.notify("success",a),t())})},t()}])}(),function(){"use strict";angular.module("app.pagina.cuentas",[]).controller("PaginaCuentasCtrl",["$scope","$modal","Pagina","$routeParams","$http",function(e,n,a,o,t){function i(){a.getCuentas(l,function(n,a){n?console.log(n):e.cuentas=a})}function r(){a.getOne(l,function(n,a){n?console.log("Error al cargar la página"):(e.disponibles=a.pagina_cuentas_disponibles,e.usadas=a.pagina_cuentas_usadas)})}var l=o.pagina_id;e.FormAddCuenta={},e.addCuenta=function(){var n=o.pagina_id;a.addCuenta(e.FormAddCuenta,n,function(n,a){n?e.notify("danger","Algo salió mal"):(i(),r(),e.notify("success","Cuenta agregada exitosamente"),e.FormAddCuenta={})})},i(),r()}])}(),function(){"use strict";angular.module("app.pagina.estilo",[]).controller("EstiloCtrl",["$scope","$routeParams","Pagina","$http","$route",function(e,n,a,o,t){function i(){a.getOne(r,function(n,a){n?(console.log(n),e.notify("dange","Error al cargar la página")):e.estilo=a})}var r=n.pagina_id;e.estilo={},i(),e.upImg=function(a,t){var r=new FormData;r.append("file",a[0]),r.append("tipo",t),o.post("/api/pagina/"+n.pagina_id+"/upload/"+t,r,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Listo"),i()}).error(function(n){e.notify("danger","Algo salió mal")})},e.vistaPrevia=function(e,n){e="http://"+e;var a;a="phone"==n?window.open(e,"MsgWindow","width=480, height=700"):window.open(e,"MsgWindow","width=1200, height=800")}}])}(),function(){"use strict";angular.module("app.pagina.galeria",[]).controller("GaleriasCtrl",["$scope","$window","Pagina","$routeParams","$route","$http",function(e,n,a,o,t,i){function r(){a.getGalerias(c,function(n,a){n?console.log(n):e.galerias=a})}function l(){a.getGaleria(c,u,function(n,a){n?console.log(n):e.FormEditGaleria=a})}function s(){a.getImagenes(c,u,function(n,a){n?console.log(n):e.imagenes=a})}var c=o.pagina_id,u=o.galeria_id;e.pagina_id=c,e.FormAddGaleria={},e.FormEditGaleria={},e.addGaleria=function(){var n=o.pagina_id;a.addGaleria(e.FormAddGaleria,n,function(n,a){n?e.notify("danger","Algo salió mal"):(r(),e.notify("success","Galería agregada exitosamente"),e.FormAddGaleria={})})},e.editGaleria=function(){var n=o.pagina_id;a.updateGaleria(n,u,e.FormEditGaleria,function(n,a){n?e.notify("danger","Algo salió mal"):(r(),e.notify("success","Galería editada exitosamente"),e.FormAddGaleria={})})},e.FormGaleria=function(){$("#vista1").hide("explode"),$("#vista2").show()},e.CancelarAddGaleria=function(){$("#vista1").show("explode"),$("#vista2").hide()},e.redirect=function(){alert("msg"),n.location.href="#/dashboard";$modal.$close()},u?(l(),s()):r(),e.uploadImage=function(n){var a=new FormData;a.append("file",n[0]),i.post("/api/pagina/"+c+"/galeria/"+u+"/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Se subió correctamente!"),s()}).error(function(){t.reload(),s(),e.notify("warning","Error al subir la imagen")})},e.editarImg=function(n){var o=prompt("Ingresa el título de la imágen"),i=prompt("Ingresa la descripción"),r={imagen_titulo:o,imagen_descripcion:i};a.updateImagen(r,n,function(n,a){n?e.notify("danger","Ocurrió un error"):(e.notify("success","Imágen editada"),t.reload())})},e.deleteImg=function(n){var o=confirm("¿Realmente deseas eliminar la imágen?");o&&a.deleteImg(n,function(n,a){n?e.notify("danger","Ocurrió un error"):(e.notify("success","Imágen eliminada"),t.reload())})}}])}(),function(){"use strict";angular.module("app.pagina.mensajes",[]).controller("PaginaMensajesCtrl",["$scope","Pagina","$routeParams",function(e,n,a){function o(){n.getMensajes(l,function(n,a){n?console.log(n):e.mensajes=a})}function t(){n.getMensajesAll(function(n,a){n?e.notify("danger","No se pudieron cargar tus notificaciones"):(e.notificacionesMensajes=a,e.notificacionesMensajesTotal=e.notificacionesMensajes.length)})}function i(){n.getMensajesStats(l,function(n,a){n?console.log(n):e.stats=a})}function r(){n.getMensaje(a.pagina_id,a.mensaje_id,function(n,a){n?console.log(n):(e.single=1,e.mensaje=a,t())})}var l=a.pagina_id;e.pagina_id=l,a.mensaje_id?r():(o(),i())}])}(),function(){"use strict";angular.module("app.pagina",["app.pagina.service","app.pagina.banners","app.pagina.galeria","app.pagina.estilo","app.pagina.publicacion","app.pagina.mensajes"]).controller("PaginasCtrl",function(e,n,a,o){o.all(function(n,a){n?e.notify("danger","Ocurrió un error al cargar las páginas"):e.paginas=a})}).controller("PaginaCtrl",["$scope","$modal","$window","Pagina","$routeParams","$http",function(e,n,a,o,t,i){var r=t.pagina_id;e.hoy=Date(),e.pagina={},e.facebook={},e.FormAddPagina={};var l=function(){for(var e="ÃÀÁÄÂÈÉËÊÌÍÏÎÒÓÖÔÙÚÜÛãàáäâèéëêìíïîòóöôùúüûÑñÇç",n="AAAAAEEEEIIIIOOOOUUUUaaaaaeeeeiiiioooouuuunncc",a={},o=0,t=e.length;t>o;o++)a[e.charAt(o)]=n.charAt(o);return function(e){for(var n=[],o=0,t=e.length;t>o;o++){var i=e.charAt(o);a.hasOwnProperty(e.charAt(o))?n.push(a[i]):n.push(i)}return n.join("").replace(/[^-A-Za-z0-9]+/g,"-").toLowerCase()}}();e.subdominio=function(n){e.FormAddPagina.pagina_subdominio=l(n)+"."+e.main.dominio},o.getPaquetes(function(n,a){n?console.log(n):e.tipos=a}),e.buscarFB=function(){var n=$("#facebookID").val(),a=n.split("facebook.com/");a[1]?(a=a[1],a=a.split("?"),a=a[0],a=a.split("/"),a=a[0],i.get("http://graph.facebook.com/"+a).success(function(a){e.facebook=a,e.FormAddPagina.pagina_logo="http://graph.facebook.com/"+n+"/picture",e.FormAddPagina.pagina_portada=a.cover.source,e.FormAddPagina.pagina_nombre=a.name,e.FormAddPagina.pagina_descripcion=a.about,e.FormAddPagina.pagina_telefono=a.phone,e.FormAddPagina.pagina_facebook=$("#facebookID").val(),e.subdominio(a.name)}).error(function(){console.log("error"),e.notify("danger","La URL ingresada no es válida")})):e.notify("danger","La URL ingresada no es válida")},r&&o.getOne(r,function(n,a){n?console.log("Error al cargar la página"):(e.FormEditPagina=a,a.pagina_portada&&a.pagina_portada.length<50&&(e.FormEditPagina.pagina_portada=e.main.base+a.pagina_portada),a.pagina_facebook&&o.getFacebook(a.pagina_facebook,function(n,a){n?console.log(n):e.facebook=a}))}),e.editPagina=function(){var n;n=e.FormEditPagina,o.update(r,n,function(n,a){n?alert(n):($("#result").html('<div class="alert alert-success">Editado correctamente</div>').delay(3e3).hide("explode"),e.notify("success","Editado correctamente"))})},e.crearPagina=function(){var n=e.FormAddPagina;n.pagina_dominio&&n.pagina_nombre&&o.create(n,function(n,o){n?console.log(alert):(e.notify("success","Página creada correctamente"),console.log(o),a.location.href="#/pagina/"+o)})},e.uploadFile=function(n){var a=new FormData;a.append("file",n[0]),i.post("/api/upload/"+t.pagina_id,a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Todo salió bien")}).error(function(){e.notify("danger","Todo salió mal")})},e.uploadLogo=function(n){var a=new FormData;a.append("file",n[0]),i.post("/api/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Todo salió bien")}).error(function(){e.notify("danger","Todo salió mal")})}}]).controller("SeguidoresCtrl",["$scope","Pagina","$routeParams",function(e,n,a){var o=a.pagina_id;n.seguidores(o,function(n,a){n?(console.log(n),e.notify("danger","Error al recuperar los registros")):e.seguidores=a})}])}(),function(){"use strict";angular.module("app.publicacion.service",["ngRoute"]).factory("Publicacion",["$http",function(e){return{getPublicaciones:function(n,a){e.get("/api/pagina/"+n+"/publicaciones").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})},getPublicacion:function(n,a,o){e.get("/api/pagina/"+n+"/publicacion/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},addPublicacion:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/publicaciones"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},deletePublicacion:function(n){return e["delete"]("/api/publicaciones/"+n)},updatePublicacion:function(n,a,o,t){e({data:o,method:"PUT",url:"/api/pagina/"+n+"/publicacion/"+a}).success(function(e){t(null,"Ok")}).error(function(e){t("Hubo un error",null)})},togglePublicacion:function(n,a){e.get("/api/pagina/publicacion/"+n+"/toggle").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})}}}])}(),function(){"use strict";angular.module("app.pagina.publicacion",["app.publicacion.service"]).controller("PublicacionesCtrl",["$scope","Publicacion","$routeParams","$http","$route","$window",function(e,n,a,o,t,i){function r(){n.getPublicaciones(c,function(n,a){n?console.log(n):e.publicaciones=a})}function l(){n.getPublicacion(a.pagina_id,a.publicacion_id,function(n,a){n?console.log(n):(e.FormEditPublicacion=a,$("#myCode").html('<iframe width="560" height="315" src="//www.youtube.com/embed/'+e.FormEditPublicacion.publicacion_video+'" frameborder="0" allowfullscreen></iframe>'))})}function s(e){var n=/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/,a=e.match(n);return a&&11==a[2].length?a[2]:"error"}var c=a.pagina_id;e.FormAddPublicacion={},e.FormEditPublicacion={},e.deletePublicacion=function(){var o=confirm("¿Realmente deseas eliminar esta publicación?");o&&n.deletePublicacion(a.publicacion_id).success(function(n){i.location="#/pagina/"+FormEditPublicacion.publicacion_pagina_id+"/publicaciones",e.notify("success",n)}).error(function(n){e.notify("danger",n)})},e.addPublicacion=function(){var o=a.pagina_id;n.addPublicacion(e.FormAddPublicacion,o,function(n,a){n?e.notify("danger","Algo salió mal"):(r(),e.notify("success","Publicación agregada exitosamente"),e.FormAddPublicacion={},$("#myCode").html("."))})},e.upImg=function(n){var i=new FormData;i.append("file",n[0]),o.post("/api/pagina/publicacion/"+a.publicacion_id+"/upload",i,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Listo"),t.reload()}).error(function(n){e.notify("danger","Algo salió mal")})},e.togglePublicacion=function(a){n.togglePublicacion(a,function(n,a){n?e.notify("danger","Ocurrió un error"):(e.notify("success","¡Listo!"),r())})},e.editPublicacion=function(){var o=a.pagina_id;n.updatePublicacion(o,a.publicacion_id,e.FormEditPublicacion,function(n,a){n?e.notify("danger",n):(r(),e.notify("success","Publicación editada exitosamente"),e.FormAddPublicacion={})})},a.publicacion_id?l():r();var u;e.buscarVideo=function(){var n=$("#myUrl").val();u=s(n),$("#myCode").html('<iframe width="560" height="315" src="//www.youtube.com/embed/'+u+'" frameborder="0" allowfullscreen></iframe>'),e.FormAddPublicacion.publicacion_video=u,e.FormEditPublicacion.publicacion_video=u}}])}(),angular.module("app.pagina.service",["ngRoute"]).factory("Pagina",["$http",function(e){return{all:function(n){e.get("/api/pagina/misPaginas").success(function(e){n(null,e)})},getPaquetes:function(n){e.get("/api/pagina/paquetes/").success(function(e){n(null,e)})},create:function(n,a){e({data:n,method:"POST",url:"/api/pagina"}).success(function(e){a(null,e)}).error(function(e){a("Hubo un error",null)})},update:function(n,a,o){e({data:a,method:"PUT",url:"/api/pagina/"+n}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})},getOne:function(n,a){e.get("/api/pagina/"+n).success(function(e){a(null,e)})},getFacebook:function(n,a){e.get("http://graph.facebook.com/"+n).success(function(e){a(null,e)})},expired:function(n){e.get("/api/pagina/vencidas").success(function(e){n(null,e)})},getSecciones:function(n,a){e.get("/api/pagina/"+n+"/secciones").success(function(e){a(null,e)}).error(function(){alert("Algo salió mal, intenta de nuevo más tarde")})},getSeccion:function(n,a){e.get("/api/seccion/"+n).success(function(e){a(null,e)}).error(function(){alert("Algo salió mal, intenta de nuevo más tarde")})},getCuentas:function(n,a){e.get("/api/pagina/"+n+"/cuentas").success(function(e){a(null,e)}).error(function(){alert("Algo salió mal, intenta de nuevo más tarde")})},addCuenta:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/cuentas"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},getPublicaciones:function(n,a){e.get("/api/pagina/"+n+"/publicaciones").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})},getPublicacion:function(n,a,o){e.get("/api/pagina/"+n+"/publicacion/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},addPublicacion:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/publicaciones"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},deletePublicacion:function(n){return e["delete"]("/api/publicaciones/"+n)},updatePublicacion:function(n,a,o,t){e({data:o,method:"PUT",url:"/api/pagina/"+n+"/publicacion/"+a}).success(function(e){t(null,"Ok")}).error(function(e){t("Hubo un error",null)})},togglePublicacion:function(n,a){e.get("/api/pagina/publicacion/"+n+"/toggle").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})},getMensajes:function(n,a){e.get("/api/pagina/"+n+"/mensajes").success(function(e){a(null,e)}).error(function(e){console.log(e)})},getMensajesAll:function(n){e.get("/api/pagina/mensajes/unread").success(function(e){n(null,e)}).error(function(e){n("Error",null)})},getMensajesLatest:function(n){e.get("/api/pagina/mensajes/latest").success(function(e){n(null,e)}).error(function(e){console.log(e)})},getMensaje:function(n,a,o){e.get("/api/pagina/"+n+"/mensaje/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},getMensajesStats:function(n,a){e.get("/api/pagina/"+n+"/mensajes/stats/").success(function(e){a(null,e)}).error(function(e){console.log(e)})},addGaleria:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/galerias"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},getGaleria:function(n,a,o){e.get("/api/pagina/"+n+"/galeria/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},updateGaleria:function(n,a,o,t){e({data:o,method:"PUT",url:"/api/pagina/"+n+"/galeria/"+a}).success(function(e){t(null,"Ok")}).error(function(e){t("Hubo un error",null)})},getGalerias:function(n,a){e.get("/api/pagina/"+n+"/galerias").success(function(e){a(null,e)}).error(function(e){console.log(e)})},updateImagen:function(n,a,o){e({data:n,method:"PUT",url:"/api/pagina/imagen/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error: "+e,null)})},deleteImg:function(n,a){e({method:"DELETE",url:"/api/pagina/imagen/"+n}).success(function(e){a(null,"Ok")}).error(function(e){a(e,null)})},deleteSeccion:function(n,a,o){e({method:"DELETE",url:"/api/pagina/"+n+"/seccion/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null);
})},getImagenes:function(n,a,o){e.get("/api/pagina/"+n+"/galeria/"+a+"/imagenes").success(function(e){o(null,e)}).error(function(e){console.log(e)})},seguidores:function(n,a){e.get("/api/pagina/"+n+"/seguidores").success(function(e){a(null,e)}).error(function(e){console.log(e)})},getBanners:function(n,a){e.get("/api/pagina/banners/"+n).success(function(e){a(null,e)}).error(function(e){console.log(e)})},deleteBanner:function(n,a){e["delete"]("/api/pagina/banners/"+n).success(function(e){a(null,e)}).error(function(e){console.log(e)})},updateBanner:function(n,a,o){e({data:n,method:"PUT",url:"/api/pagina/banners/"+a}).success(function(e){o(null,e)}).error(function(e){o(e,null)})}}}]),angular.module("app.pagos",[]).controller("PagoCtrl",["$scope","Pago","$routeParams","$route",function(e,n,a,o){e.pagos={},n.all(function(n,a){n?alert("Hubo un error"):e.pagos=a})}]),angular.module("ModeloPagos",["ngRoute"]).factory("Pago",["$http","$routeParams",function(e,n){return{test:function(e){alert("holaaa")},all:function(n){e.get("/api/pacientes").success(function(e){n(null,e)})},getOne:function(n,a){e.get("/api/paciente/"+n).success(function(e){a(null,e)})},deleteSeccion:function(n,a,o){e({method:"DELETE",url:"/api/pagina/"+n+"/seccion/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})}}}]),function(){"use strict";angular.module("app.producto",["app.producto.service"]).controller("ProductoCtrl",["$scope","$modal","Producto","$routeParams",function(e,n,a,o){e.FormAddProducto={},e.misProductos={},a.getCategorias(function(n,a){n?alert("Error al cargar las categorías"):e.categorias=a}),e.addProducto=function(){var n=e.FormAddProducto;a.create(n,o.pagina_id,function(n,a){n?alert(n):(e.notify("success","Producto agregado a tu tienda"),e.FormAddProducto={},t())})};var t=function(){var n=o.pagina_id;a.misProductos(n,function(n,a){n?(console.log(n),e.notify("danger","Algo salió mal")):null!==a?e.misProductos=a:e.notify("danger","Aún no hay productos")})};o.pagina_id&&t()}]).controller("ProductoDetalleCtrl",["$scope","$modal","Producto","$routeParams","$http","$window",function(e,n,a,o,t,i){function r(){a.fotos(o.producto_id,function(n,a){n?console.log(n):e.fotos=a})}e.FormEditarProducto={},a.detail(o.producto_id,function(n,a){n?(alert("Error al carcar el producto"),console.log(n)):e.FormEditarProducto=a}),e.deleteProducto=function(){var n=confirm("¿Realmente quieres eliminar este producto?");n&&a["delete"](o.producto_id).success(function(n){e.notify("success",n),i.location="#/pagina/"+e.FormEditarProducto.producto_pagina_id+"/productos"}).error(function(n){e.notify("danger",n)})},e.deleteImagen=function(n){var o=confirm("¿Estas seguro que deseas eliminar esta imagen?");o&&a.deleteImagen(n,function(n,a){n?alert(n):(e.notify("success","Listo"),r())})},e.uploadImage=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/producto/"+o.producto_id+"/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Se subió correctamente!"),r()}).error(function(){$route.reload(),r(),e.notify("danger","Se subió la imágen correctamente")})},e.editarProducto=function(){console.log("Editando producto"),a.update(e.FormEditarProducto,o.producto_id,function(n,a){n?alert("Error al intentar editar el producto"):e.notify("success","Producto editado correctamente")})},r()}])}(),function(){"use strict";angular.module("app.producto.service",["ngRoute"]).factory("Producto",["$http",function(e){return{test:function(e){alert("holaaa")},all:function(n){e.get("/api/pagina/misPaginas").success(function(e){n(null,e)})},"delete":function(n){return e["delete"]("/api/producto/"+n)},getCategorias:function(n){e.get("/api/producto/categorias").success(function(e){n(null,e)}).error(function(e){n("EROR",null)})},getImagenes:function(n,a){e.get("/api/producto/"+n+"/imagenes").success(function(e){a(null,e)}).error(function(e){console.log(e),a("EROR",null)})},fotos:function(n,a){e.get("/api/producto/"+n+"/imagenes").success(function(e){a(null,e)}).error(function(e){a("EROR",null)})},misProductos:function(n,a){e.get("/api/producto/pagina/"+n).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteImagen:function(n,a){e["delete"]("/api/producto/imagen/"+n).success(function(e){a(null,e)}).error(function(e){a(e,null)})},detail:function(n,a){e.get("/api/producto/"+n).success(function(e){a(null,e)}).error(function(e){a(e,null)})},create:function(n,a,o){e({data:n,method:"POST",url:"/api/producto/pagina/"+a+"/add"}).success(function(e){o(null,e)}).error(function(e){o("Hubo un error",null)})},update:function(n,a,o){e({data:n,method:"PUT",url:"/api/producto/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})}}}])}(),angular.module("app.servicios",[]).controller("serviciosCtrl",["$scope","$filter","$http",function(e,n,a){a.get("/api/pagos").success(function(n,a,o,t){e.servicios=n})}]),angular.module("app.paginas.ctrl",[]).controller("algo",["$scope","$routeParams","$http",function(e,n,a){var o=n.pagina_id;e.gato="hola",e.FormData={},e.FormPagina={},o&&(a.get("/api/pagina/"+o+"/secciones").success(function(n,a,o,t){e.secciones=n}),a.get("/api/pagina/"+o).success(function(n,a,o,t){e.FormPagina=n})),e.processForm=function(){var n=e.FormData;console.log(n),a({method:"POST",url:"/api/pagina",data:n}).success(function(e){}).error(function(e){alert("Algo salió mal"+e)})},e.editPagina=function(){var n;n=e.FormPagina,console.log(n),a({method:"PUT",url:"/api/pagina/"+o,data:n}).success(function(e){console.log(e),$("#result").html('<div class="alert alert-success">Editado correctamente</div>').delay(3e3).hide("explode")}).error(function(e){alert("Algo salió mal"+e)})}}]).controller("menu",["$scope","$routeParams","$http",function(e,n,a){e.prueba="hola",e.pages=""}]).controller("faqs",["$scope","$routeParams","$http",function(e,n,a){a.get("/api/faqs").success(function(n,a,o,t){e.categorias=n}),e.categoria_seleccionada="",e.faq_seleccionada="",e.categoria_titulo="Más leídas",e.getPreguntas=function(n,o){n?a.get("/api/faqs/"+n).success(function(a,t,i,r){e.faqs=a,e.categoria_titulo=o,e.categoria_seleccionada=n}):e.categoria_titulo="Más leídas"},e.getFaq=function(n){a.get("/api/faq/"+n).success(function(a,o,t,i){e.faq_seleccionada=n,e.faq=a}).error(function(){alert("Ocurrió un error al cargar la pregunta")})}}]),angular.module("app.directives",[]).directive("imgHolder",[function(){return{restrict:"A",link:function(e,n,a){return Holder.run({images:n[0]})}}}]).directive("customBackground",function(){return{restrict:"A",controller:["$scope","$element","$location",function(e,n,a){var o,t;return t=function(){return a.path()},o=function(e){switch(n.removeClass("body-home body-special body-tasks body-lock"),e){case"/":return n.addClass("body-home");case"/404":case"/pages/500":case"/pages/signin":case"/pages/signup":return n.addClass("body-special");case"/pages/lock-screen":return n.addClass("body-special body-lock");case"/tasks":return n.addClass("body-tasks")}},o(a.path()),e.$watch(t,function(e,n){return e!==n?o(a.path()):void 0})}]}}).directive("uiColorSwitch",[function(){return{restrict:"A",link:function(e,n,a){return n.find(".color-option").on("click",function(e){var n,a,o;if(n=$(this),a=void 0,o=n.data("style"),"loulou"===o)a="styles/main.css",$('link[href^="styles/main"]').attr("href",a);else{if(!o)return!1;o="-"+o,a="styles/main"+o+".css",$('link[href^="styles/main"]').attr("href",a)}return e.preventDefault()})}}}]).directive("toggleMinNav",["$rootScope",function(e){return{restrict:"A",link:function(n,a,o){var t,i,r,l;return r=$("#app"),t=$(window),a.on("click",function(n){return r.hasClass("nav-min")?r.removeClass("nav-min"):(r.addClass("nav-min"),e.$broadcast("minNav:enabled")),n.preventDefault()}),i=void 0,l=function(){var e;return e=t.width(),768>e?r.removeClass("nav-min"):void 0},t.resize(function(){var e;return clearTimeout(e),e=setTimeout(l,300)})}}}]).directive("collapseNav",[function(){return{restrict:"A",link:function(e,n,a){var o,t,i,r,l;return i=n.find("ul").parent("li"),i.append('<i class="fa fa-caret-right icon-has-ul"></i>'),o=i.children("a"),r=n.children("li").not(i),t=r.children("a"),l=$("#app"),o.on("click",function(e){var n,a;return l.hasClass("nav-min")?!1:(a=$(this),n=a.parent("li"),i.not(n).removeClass("open").find("ul").slideUp(),n.toggleClass("open").find("ul").slideToggle(),e.preventDefault())}),t.on("click",function(e){return i.removeClass("open").find("ul").slideUp()}),e.$on("minNav:enabled",function(e){return i.removeClass("open").find("ul").slideUp()})}}}]).directive("highlightActive",[function(){return{restrict:"A",controller:["$scope","$element","$attrs","$location",function(e,n,a,o){var t,i,r;return i=n.find("a"),r=function(){return o.path()},t=function(e,n){return n="#"+n,angular.forEach(e,function(e){var a,o,t;return o=angular.element(e),a=o.parent("li"),t=o.attr("href"),a.hasClass("active")&&a.removeClass("active"),0===n.indexOf(t)?a.addClass("active"):void 0})},t(i,o.path()),e.$watch(r,function(e,n){return e!==n?t(i,o.path()):void 0})}]}}]).directive("toggleOffCanvas",[function(){return{restrict:"A",link:function(e,n,a){return n.on("click",function(){return $("#app").toggleClass("on-canvas")})}}}]).directive("slimScroll",[function(){return{restrict:"A",link:function(e,n,a){return n.slimScroll({height:"100%"})}}}]).directive("goBack",[function(){return{restrict:"A",controller:["$scope","$element","$window",function(e,n,a){return n.on("click",function(){return a.history.back()})}]}}]),angular.module("app.localization",[]).factory("localize",["$http","$rootScope","$window",function(e,n,a){var o;return o={language:"",url:void 0,resourceFileLoaded:!1,successCallback:function(e){return o.dictionary=e,o.resourceFileLoaded=!0,n.$broadcast("localizeResourcesUpdated")},setLanguage:function(e){return o.language=e.toLowerCase().split("-")[0],o.initLocalizedResources()},setUrl:function(e){return o.url=e,o.initLocalizedResources()},buildUrl:function(){return o.language||(o.language=(a.navigator.userLanguage||a.navigator.language).toLowerCase(),o.language=o.language.split("-")[0]),"i18n/resources-locale_"+o.language+".js"},initLocalizedResources:function(){var a;return a=o.url||o.buildUrl(),e({method:"GET",url:a,cache:!1}).success(o.successCallback).error(function(){return n.$broadcast("localizeResourcesUpdated")})},getLocalizedString:function(e){var n,a;return n=void 0,o.dictionary&&e?(a=e.toLowerCase(),n=""===o.dictionary[a]?e:o.dictionary[a]):n=e,n}}}]).directive("i18n",["localize",function(e){var n;return n={restrict:"EA",updateText:function(n,a,o){var t;return t=void 0,"i18n-placeholder"===a?(t=e.getLocalizedString(o),n.attr("placeholder",t)):a.length>=1?(t=e.getLocalizedString(a),n.text(t)):void 0},link:function(e,a,o){return e.$on("localizeResourcesUpdated",function(){return n.updateText(a,o.i18n,o.placeholder)}),o.$observe("i18n",function(e){return n.updateText(a,e,o.placeholder)})}}}]).controller("LangCtrl",["$scope","localize",function(e,n){return n.setLanguage("ES-ES"),e.lang="Español",e.setLang=function(a){switch(a){case"English":n.setLanguage("EN-US");break;case"Español":n.setLanguage("ES-ES");break;case"日本語":n.setLanguage("JA-JP");break;case"中文":n.setLanguage("ZH-TW");break;case"Deutsch":n.setLanguage("DE-DE");break;case"français":n.setLanguage("FR-FR");break;case"Italiano":n.setLanguage("IT-IT");break;case"Portugal":n.setLanguage("PT-BR");break;case"Русский язык":n.setLanguage("RU-RU");break;case"한국어":n.setLanguage("KO-KR")}return e.lang=a}}]),function(){"use strict";angular.module("app.controllers",[]).controller("AppCtrl",["$scope","$location","$http","logger","$rootScope","$route",function(e,n,a,o,t,i){e.main={},localStorage.removeItem("alerted"),a.get("/config").success(function(n,a,o,t){e.config=n;var i=e.config[1].config_valor;e.main.brand="Nodex",e.main.base=i,e.main.dominio="nodex.mx"}).error(function(){alert("Ops! algo salió mal, lo mejor será intentar en unos minutos")}),e.isSpecificPage=function(){var e;return e=n.path(),_.contains(["/404","/pages/500","/pages/login","/pages/signin","/pages/signin1","/pages/signin2","/pages/signup","/pages/signup1","/pages/signup2","/pages/lock-screen"],e)},e.notify=function(e,n){switch(e){case"info":return o.log(n);case"success":return o.logSuccess(n);case"warning":return o.logWarning(n);case"error":return o.logError(n)}};var r=$("#app");$$(".page").swipeRight(function(){r.removeClass("nav-min"),$("#app").toggleClass("on-canvas")}),$$(".page").swipeLeft(function(){r.addClass("nav-min"),$("#app").toggleClass("on-canvas")}),a.get("/api/usuario/perfil").success(function(n,a,o,i){e.usuario=n,t.usuario=n,n.usuario_facebook?e.main.foto="http://graph.facebook.com/"+n.usuario_facebook+"/picture":e.main.foto="https://answers.atlassian.com/upfiles/user_icons/cached/Timothy_Chin_avatar_icon128.png"})}]).controller("NavCtrl",["$scope","filterFilter","Pagina",function(e,n,a){function o(){a.getMensajesAll(function(n,a){if(n){e.notify("danger","No se pudieron cargar tus notificaciones");var o=localStorage.getItem("alerted")||"";"yes"!=o&&(alert("Ocurrió un error dentro del sistema, lo estamos reparando en este momento. Por favor vuelve a iniciar sesión, lamentamos los inconvenientes"),localStorage.setItem("alerted","yes"))}else e.notificacionesMensajes=a,e.notificacionesMensajesTotal=e.notificacionesMensajes.length})}a.all(function(n,a){n?alert(n):e.misPaginas=a}),a.expired(function(n,a){n?notify("danger","Ocurrió un error"):(e.PaginasVencidas=a,e.TotalPaginasVencidas=a.length)});var t=io();t.on("notificacion",function(e){log(e.username+" left"),addParticipantsMessage(e),removeChatTyping(e)}),setInterval(function(){o()},2e4),o()}]).controller("DashboardCtrl",["$scope","Pagina",function(e,n){n.all(function(n,a){n?alert(n):e.misPaginas=a}),n.getMensajesLatest(function(n,a){n?e.notify("danger","Ocurrió un error al cargar los últimos mensajes, porfavor intenta más tarde"):e.PaginaMensajesLatest=a})}])}(),angular.module("app.chat",[]).controller("ChatCtrl",["$scope","$routeParams","$http","$rootScope","Usuario",function(e,n,a,o,t){function i(e){var n="";n+=1===e.numUsers?"Hay 1 participante":"Hay "+e.numUsers+" participantes"}function r(){var e=document.getElementById("mensajes");e.scrollTop=e.scrollHeight}function l(){b=g(k.val().trim()),v=g(_.val().trim()),b&&(F.fadeOut(),O.show(),F.off("click"),T=S.focus(),D.emit("add user",b,v),D.emit("online users"))}function s(){var n=S.val();n=g(n),n&&U&&(S.val(""),c({username:b,message:n,foto:"https://graph.facebook.com/draweb2.0/picture"}),D.emit("new message",n,e.usuario.usuario_foto))}function c(n,a){var o=m(n);a=a||{},0!==o.length&&(a.fade=!1,o.remove());$('<span class="username"/>').text(n.username).css("color",h(n.username));if(n.username==e.nick)var t=$('<span class="chat-right">').text(n.message);else var t=$('<span class="chat-left">').text(n.message).attr("style","background-image:url(http://graph.facebook.com/"+n.foto+"/picture);background-repeat:no-repeat;");var i=(n.typing?"typing chatlog":"",$('<div class=""/>').append(t));d(i,a),r()}function u(e){e.typing=!0,e.message="is typing"}function p(e){m(e).fadeOut(function(){$(this).remove()})}function d(e,n){var a=$(e);n||(n={}),"undefined"==typeof n.fade&&(n.fade=!0),"undefined"==typeof n.prepend&&(n.prepend=!1),n.fade&&a.hide().fadeIn(w),n.prepend?A.prepend(a):A.append(a),A[0].scrollTop=A[0].scrollHeight}function g(e){return $("<div/>").text(e).text()}function f(){U&&(x||(x=!0,D.emit("typing")),C=(new Date).getTime(),setTimeout(function(){var e=(new Date).getTime(),n=e-C;n>=y&&x&&(D.emit("stop typing"),x=!1)},y))}function m(e){return $(".typing.message").filter(function(n){return $(this).data("username")===e.username})}function h(e){for(var n=7,a=0;a<e.length;a++)n=e.charCodeAt(a)+(n<<5)-n;var o=Math.abs(n%P.length);return P[o]}t.perfil(function(n,a){n?alert(n):(e.nick=a.usuario_nombre,e.facebook=a.usuario_facebook,a.usuario_facebook?e.usuario.usuario_foto="http://graph.facebook.com/"+a.usuario_facebook+"/picture":e.usuario.usuario_foto="https://answers.atlassian.com/upfiles/user_icons/cached/Timothy_Chin_avatar_icon128.png")});var b,v,C,w=150,y=400,P=["#e21400","#91580f","#f8a700","#f78b00","#58dc00","#287b00","#a8f07a","#4ae8c4","#3b88eb","#3824aa","#a700ff","#d300e7"],E=$(window),k=$(".usernameInput"),_=$(".facebookInput"),A=$(".messages"),S=$(".inputMessage"),F=$(".login.page"),O=$(".chat.page"),U=!1,x=!1,T=S.focus(),D=io();l(),E.keydown(function(e){e.ctrlKey||e.metaKey||e.altKey||T.focus(),l(),13===e.which&&(b?(s(),D.emit("stop typing"),x=!1):l())}),S.on("input",function(){f()}),F.click(function(){T.focus()}),S.click(function(){S.focus()}),D.on("login",function(e){U=!0;i(e),D.emit("online users",function(e){console.log(e)})}),D.on("new message",function(e){c(e),D.on("prueba",function(e){console.log(e)})}),D.on("prueba",function(e){console.log(e.numUsers),alert(e)}),D.on("user joined",function(n){console.log(n.username+" se unió a la conversación "),e.con="http://graph.facebook.com/"+n.foto+"/picture",i(n)}),D.on("user left",function(e){console.log(e.username+" se ha desconectado"),i(e),p(e)}),D.on("typing",function(e){u(e)}),D.on("stop typing",function(e){p(e)}),l()}]),angular.module("app.soporte",[]).controller("faqs",["$scope","$routeParams","$http",function(e,n,a){a.get("/api/soporte/faqs").success(function(n,a,o,t){e.categorias=n}),e.categoria_seleccionada="",e.faq_seleccionada="",e.categoria_titulo="Más leídas",e.getPreguntas=function(n,o){n?a.get("/api/soporte/faqs/"+n).success(function(a,t,i,r){e.faqs=a,e.categoria_titulo=o,e.categoria_seleccionada=n}):e.categoria_titulo="Más leídas"},e.getFaq=function(n){a.get("/api/soporte/faq/"+n).success(function(a,o,t,i){e.faq_seleccionada=n,e.faq=a}).error(function(){alert("Ocurrió un error al cargar la pregunta")})}}]),angular.module("app.tienda",[]).controller("TiendaCtrl",function(e,n,a,o,t){e.FormAddProducto={},e.misProductos={},o.getCategorias(function(n,a){n?alert("Error al cargar las categorías"):e.categorias=a}),o.detail(t.producto_id,function(n,a){n?e.notify("danger","Error al cargar el producto"):(e.producto=a,console.log(a))})}),angular.module("ModeloUsuario",["ngRoute"]).factory("Usuario",["$http",function(e){return{create:function(n,a){e({data:n,method:"POST",url:"/api/usuario/add"}).success(function(e){a(null,"Ok")}).error(function(e){a("Error",null)})},perfil:function(n){e.get("/api/usuario/perfil").success(function(e){e?n(null,e):n(null,"")})},update:function(n,a){e({data:n,method:"POST",url:"/api/usuario/edit"}).success(function(e){a(null,"Ok")}).error(function(e){a("Error",null)})},updatePass:function(n,a){e({data:n,method:"POST",url:"/api/usuario/editPass"}).success(function(e){a(null,"Ok")}).error(function(e){a("Error",null)})},nick:function(n,a){e.get("/api/usuario/nick/"+n).success(function(e){""!=e&&a(null,e)})}}}]),angular.module("app.usuario",[]).controller("UsuarioCtrl",function(e,n,a,o,t,i,r){e.FormEditarPerfil={},e.FormChangePassword={};var l=function(){i.perfil(function(n,a){n?e.notify("danger","Ops! Something went wrong, please try again later"):e.FormEditarPerfil=a})};l(),e.editarPerfil=function(){alert("as");var n=e.FormEditarPerfil;i.update(n,function(n,a){n?(e.notify("danger","Ops! Something went wrong, please try again later"),alert("no")):(e.notify("success","Done!"),alert("si"))})},e.checkNick=function(e){i.nick(e,function(e,n){n&&$("#nickMsj").text(n)})},e.coinciden=function(){var e=document.getElementById("pass1").value,n=document.getElementById("pass2").value,a=!0;return e!=n?(document.getElementById("pass1").style.borderColor="#E34234",document.getElementById("pass2").style.borderColor="#E34234",a=!1,$("#passSubmit").attr("disabled",!0)):(document.getElementById("pass1").style.borderColor="#04B404",document.getElementById("pass2").style.borderColor="#04B404",$("#passSubmit").attr("disabled",!1)),a},e.changePass=function(){var n=e.FormChangePassword;i.updatePass(n,function(n,a){n?e.notify("danger","Ops! Something went wrong, please try again later"):e.notify("success","Done!")})},e.uploadFile=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){r.reload,e.notify("success","Todo salió bien"),l()}).error(function(){e.notify("danger","Todo salió mal")})},e.uploadLogo=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Todo salió bien")}).error(function(){e.notify("danger","Todo salió mal")})}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsIkNoYXJ0L0NoYXJ0Q3RybC5qcyIsIkNoYXJ0L0NoYXJ0RGlyZWN0aXZlLmpzIiwiVUkvVUlEaXJlY3RpdmUuanMiLCJVSS9VSVNlcnZpY2UuanMiLCJhZG1pbi9hZG1pbi5qcyIsImFkbWluL3NlcnZpY2UuanMiLCJwYWdpbmFzL2Jhbm5lcnMuY29udHJvbGxlci5qcyIsInBhZ2luYXMvY3VlbnRhcy5jb250cm9sbGVyLmpzIiwicGFnaW5hcy9lc3RpbG8uY29udHJvbGxlci5qcyIsInBhZ2luYXMvZ2FsZXJpYS5jb250cm9sbGVyLmpzIiwicGFnaW5hcy9tZW5zYWplcy5jb250cm9sbGVyLmpzIiwicGFnaW5hcy9wYWdpbmEuanMiLCJwYWdpbmFzL3B1YmxpY2FjaW9uLnNlcnZpY2UuanMiLCJwYWdpbmFzL3B1YmxpY2FjaW9uZXMuY29udHJvbGxlci5qcyIsInBhZ2luYXMvc2VydmljZS5qcyIsInBhZ29zL2NvbnRyb2xhZG9yLmpzIiwicGFnb3Mvc2VydmljZS5qcyIsInByb2R1Y3Rvcy9wcm9kdWN0b3MuanMiLCJwcm9kdWN0b3Mvc2VydmljZS5qcyIsInNlcnZpY2lvcy9TZXJ2aWNpb3NDdHJsLmpzIiwic2hhcmVkL2NvbnRyb2xhZG9yZXMuanMiLCJzaGFyZWQvZGlyZWN0aXZlcy5qcyIsInNoYXJlZC9sb2NhbGl6ZS5qcyIsInNoYXJlZC9tYWluLmpzIiwic29wb3J0ZS9jaGF0LmpzIiwic29wb3J0ZS9zb3BvcnRlLmpzIiwidGllbmRhL3RpZW5kYS5qcyIsInVzdWFyaW9zL3NlcnZpY2UuanMiLCJ1c3Vhcmlvcy91c3Vhcmlvcy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwicmVkaXJlY3RUbyIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIm90aGVyd2lzZSIsIiRzY29wZSIsImVhc3lwaWVjaGFydCIsInBlcmNlbnQiLCJvcHRpb25zIiwiYW5pbWF0ZSIsImR1cmF0aW9uIiwiZW5hYmxlZCIsImJhckNvbG9yIiwibGluZUNhcCIsInNpemUiLCJsaW5lV2lkdGgiLCJlYXN5cGllY2hhcnQyIiwiZWFzeXBpZWNoYXJ0MyIsInNjYWxlTGVuZ3RoIiwiZ2F1Z2VDaGFydDEiLCJkYXRhIiwibWF4VmFsdWUiLCJhbmltYXRpb25TcGVlZCIsInZhbCIsImxpbmVzIiwiYW5nbGUiLCJwb2ludGVyIiwibGVuZ3RoIiwic3Ryb2tlV2lkdGgiLCJjb2xvciIsImxpbWl0TWF4IiwiY29sb3JTdGFydCIsImNvbG9yU3RvcCIsInN0cm9rZUNvbG9yIiwiZ2VuZXJhdGVHcmFkaWVudCIsInBlcmNlbnRDb2xvcnMiLCJnYXVnZUNoYXJ0MiIsImdhdWdlQ2hhcnQzIiwibWFpbkRhdGEiLCJtb250aCIsInhib3giLCJ3aWxsIiwicGxheXN0YXRpb24iLCJzaW1wbGVEYXRhIiwieWVhciIsInZhbHVlIiwiY29tYm9EYXRhIiwiYSIsImIiLCJjIiwiZG9udXREYXRhIiwibGFiZWwiLCJhcmVhQ2hhcnQiLCJiYXJDaGFydCIsImRhdGExIiwiZGF0YTIiLCJhcmVhIiwiZmlsbCIsInBvaW50cyIsInNob3ciLCJ5YXhpcyIsInNlcmllcyIsImZpbGxDb2xvciIsInN5bWJvbCIsInJhZGl1cyIsInNoYWRvd1NpemUiLCJncmlkIiwiaG92ZXJhYmxlIiwiY2xpY2thYmxlIiwidGlja0NvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImNvbG9ycyIsInRvb2x0aXAiLCJ0b29sdGlwT3B0cyIsImRlZmF1bHRUaGVtZSIsInhheGlzIiwibW9kZSIsInlheGVzIiwicG9zaXRpb24iLCJkYXRhMyIsInN0YWNrIiwiYmFycyIsImJhcldpZHRoIiwiYWxpZ24iLCJob3Jpem9udGFsIiwib3JkZXIiLCJwaWVDaGFydCIsInBpZSIsImxlZ2VuZCIsImNvbnRlbnQiLCJkb251dENoYXJ0IiwiaW5uZXJSYWRpdXMiLCJkb251dENoYXJ0MiIsImRlbW9EYXRhMSIsInR5cGUiLCJsaW5lQ29sb3IiLCJoaWdobGlnaHRMaW5lQ29sb3IiLCJzcG90Q29sb3IiLCJtaW5TcG90Q29sb3IiLCJtYXhTcG90Q29sb3IiLCJ3aWR0aCIsImhlaWdodCIsInNpbXBsZUNoYXJ0MSIsInNpbXBsZUNoYXJ0MiIsInNpbXBsZUNoYXJ0MyIsInNsaWNlQ29sb3JzIiwidHJpc3RhdGVDaGFydDEiLCJwb3NCYXJDb2xvciIsIm5lZ0JhckNvbG9yIiwibGFyZ2VDaGFydDEiLCJsYXJnZUNoYXJ0MiIsImxhcmdlQ2hhcnQzIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJzY29wZSIsImxpbmsiLCJlbGUiLCJhdHRycyIsImdhdWdlIiwiR2F1Z2UiLCJzZXRPcHRpb25zIiwic2V0IiwicGxvdCIsIiQiLCJnZXRSYW5kb21EYXRhIiwidG90YWxQb2ludHMiLCJ1cGRhdGUiLCJ1cGRhdGVJbnRlcnZhbCIsImkiLCJwcmV2IiwicmVzIiwieSIsInNsaWNlIiwiTWF0aCIsInJhbmRvbSIsInB1c2giLCJzZXREYXRhIiwiZHJhdyIsInNldFRpbWVvdXQiLCJtaW4iLCJtYXgiLCJzcGFya1Jlc2l6ZSIsInNwYXJrbGluZURyYXciLCJzcGFya2xpbmUiLCJ3aW5kb3ciLCJyZXNpemUiLCJlIiwiY2xlYXJUaW1lb3V0IiwiZnVuYyIsImxpbmVDb2xvcnMiLCJKU09OIiwicGFyc2UiLCJlbGVtZW50IiwieGtleSIsInlrZXlzIiwibGFiZWxzIiwiTW9ycmlzIiwiTGluZSIsImJlaGF2ZUxpa2VMaW5lIiwiZmlsbE9wYWNpdHkiLCJwb2ludFNpemUiLCJBcmVhIiwiYmFyQ29sb3JzIiwic3RhY2tlZCIsIkJhciIsImZvcm1hdHRlciIsIkZ1bmN0aW9uIiwiRG9udXQiLCJjaGVja1RpbWUiLCJzdGFydFRpbWUiLCJoIiwibSIsInMiLCJ0IiwidGltZSIsInRvZGF5IiwiRGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJodG1sIiwiZmFjdG9yeSIsImxvZ0l0IiwidG9hc3RyIiwiY2xvc2VCdXR0b24iLCJwb3NpdGlvbkNsYXNzIiwidGltZU91dCIsIm1lc3NhZ2UiLCJsb2ciLCJsb2dXYXJuaW5nIiwibG9nU3VjY2VzcyIsImxvZ0Vycm9yIiwiQWRtaW4iLCIkcm91dGVQYXJhbXMiLCIkcm91dGUiLCJnZXRXZWJzaXRlcyIsIndlYnNpdGVzIiwiZXJyIiwiYWxlcnQiLCJsaXN0byIsIm5vdGlmeSIsImdldEFwcHMiLCJhcHBzIiwicGFnaW5hcyIsImZvY3VzIiwiYm9ycmFyQXBwIiwiaWQiLCJzaSIsImNvbmZpcm0iLCJkZWxldGVBcHAiLCJjb25zb2xlIiwiYm9ycmFyV2Vic2l0ZSIsImRlbGV0ZVdlYnNpdGUiLCIkaHR0cCIsImRvbWluaW9zIiwiY2FsbGJhY2siLCJnZXQiLCJzdWNjZXNzIiwiZXJyb3IiLCJnZXRPbmUiLCJuYW1lIiwibWV0aG9kIiwidXJsIiwiZGVsZXRlRG9tYWluIiwiZGVsZXRlU2VjY2lvbiIsIm1vbmdvIiwiUGFnaW5hIiwiZ2V0QmFubmVycyIsInBhZ2luYV9pZCIsImJhbm5lcnMiLCJ1cGxvYWRCYW5uZXIiLCJmaWxlcyIsImZkIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJwb3N0Iiwid2l0aENyZWRlbnRpYWxzIiwiaGVhZGVycyIsIkNvbnRlbnQtVHlwZSIsInVuZGVmaW5lZCIsInRyYW5zZm9ybVJlcXVlc3QiLCJpZGVudGl0eSIsImRlbGV0ZUJhbm5lciIsImJhbm5lcl9pZCIsInVwZGF0ZUJhbm5lciIsInRleHRvIiwicHJvbXB0IiwiZGF0b3MiLCJiYW5uZXJfdGV4dG8iLCJiYW5uZXJfdXJsIiwiYmFubmVyX3BhZ2luYV9pZCIsIiRtb2RhbCIsImdldEN1ZW50YXMiLCJjdWVudGFzIiwiZ2V0Q3VlbnRhc0Rpc3BvbmlibGVzIiwiZGlzcG9uaWJsZXMiLCJwYWdpbmFfY3VlbnRhc19kaXNwb25pYmxlcyIsInVzYWRhcyIsInBhZ2luYV9jdWVudGFzX3VzYWRhcyIsIkZvcm1BZGRDdWVudGEiLCJhZGRDdWVudGEiLCJnZXRFc3RpbG8iLCJlc3RpbG8iLCJ1cEltZyIsInRpcG8iLCJ2aXN0YVByZXZpYSIsImRvbWluaW8iLCJteVdpbmRvdyIsIm9wZW4iLCIkd2luZG93IiwiZ2V0R2FsZXJpYXMiLCJnYWxlcmlhcyIsImdldEdhbGVyaWEiLCJnYWxlcmlhX2lkIiwiRm9ybUVkaXRHYWxlcmlhIiwiZ2V0SW1hZ2VuZXMiLCJpbWFnZW5lcyIsIkZvcm1BZGRHYWxlcmlhIiwiYWRkR2FsZXJpYSIsImVkaXRHYWxlcmlhIiwidXBkYXRlR2FsZXJpYSIsIkZvcm1HYWxlcmlhIiwiaGlkZSIsIkNhbmNlbGFyQWRkR2FsZXJpYSIsInJlZGlyZWN0IiwibG9jYXRpb24iLCJocmVmIiwiJGNsb3NlIiwidXBsb2FkSW1hZ2UiLCJyZWxvYWQiLCJlZGl0YXJJbWciLCJ0aXR1bG8iLCJkZXNjcmlwY2lvbiIsImltYWdlbl90aXR1bG8iLCJpbWFnZW5fZGVzY3JpcGNpb24iLCJ1cGRhdGVJbWFnZW4iLCJkZWxldGVJbWciLCJnZXRNZW5zYWplcyIsIm1lbnNhamVzIiwiZ2V0Tm90aWZpY2FjaW9uZXNNZW5zYWplc1BhZ2luYSIsImdldE1lbnNhamVzQWxsIiwibm90aWZpY2FjaW9uZXNNZW5zYWplcyIsIm5vdGlmaWNhY2lvbmVzTWVuc2FqZXNUb3RhbCIsImdldE1lbnNhamVzU3RhdHMiLCJzdGF0cyIsImdldE1lbnNhamUiLCJtZW5zYWplX2lkIiwic2luZ2xlIiwibWVuc2FqZSIsIiRsb2ciLCJhbGwiLCJob3kiLCJwYWdpbmEiLCJmYWNlYm9vayIsIkZvcm1BZGRQYWdpbmEiLCJub3JtYWxpemUiLCJmcm9tIiwidG8iLCJtYXBwaW5nIiwiaiIsImNoYXJBdCIsInN0ciIsInJldCIsImhhc093blByb3BlcnR5Iiwiam9pbiIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsInN1YmRvbWluaW8iLCJub21icmUiLCJwYWdpbmFfc3ViZG9taW5pbyIsIm1haW4iLCJnZXRQYXF1ZXRlcyIsInRpcG9zIiwiYnVzY2FyRkIiLCJmYWNlYm9va0lEIiwicGFydGlyIiwic3BsaXQiLCJwYWdpbmFfbG9nbyIsInBhZ2luYV9wb3J0YWRhIiwiY292ZXIiLCJzb3VyY2UiLCJwYWdpbmFfbm9tYnJlIiwicGFnaW5hX2Rlc2NyaXBjaW9uIiwiYWJvdXQiLCJwYWdpbmFfdGVsZWZvbm8iLCJwaG9uZSIsInBhZ2luYV9mYWNlYm9vayIsIkZvcm1FZGl0UGFnaW5hIiwiYmFzZSIsImdldEZhY2Vib29rIiwiZWRpdFBhZ2luYSIsImRlbGF5IiwiY3JlYXJQYWdpbmEiLCJwYWdpbmFfZG9taW5pbyIsImNyZWF0ZSIsInVwbG9hZEZpbGUiLCJ1cGxvYWRMb2dvIiwic2VndWlkb3JlcyIsImdldFB1YmxpY2FjaW9uZXMiLCJnZXRQdWJsaWNhY2lvbiIsImFkZFB1YmxpY2FjaW9uIiwiZGVsZXRlUHVibGljYWNpb24iLCJ1cGRhdGVQdWJsaWNhY2lvbiIsInB1YmxpY2FjaW9uX2lkIiwidG9nZ2xlUHVibGljYWNpb24iLCJQdWJsaWNhY2lvbiIsInB1YmxpY2FjaW9uZXMiLCJGb3JtRWRpdFB1YmxpY2FjaW9uIiwicHVibGljYWNpb25fdmlkZW8iLCJnZXRJZCIsInJlZ0V4cCIsIm1hdGNoIiwiRm9ybUFkZFB1YmxpY2FjaW9uIiwiY29uZmlybWFyIiwicHVibGljYWNpb25fcGFnaW5hX2lkIiwiZWRpdFB1YmxpY2FjaW9uIiwibXlJZCIsImJ1c2NhclZpZGVvIiwibXlVcmwiLCJleHBpcmVkIiwiZ2V0U2VjY2lvbmVzIiwiZ2V0U2VjY2lvbiIsImdldE1lbnNhamVzTGF0ZXN0IiwiUGFjaWVudGUiLCJwYWdvcyIsInRlc3QiLCJuYWRhIiwiUHJvZHVjdG8iLCJGb3JtQWRkUHJvZHVjdG8iLCJtaXNQcm9kdWN0b3MiLCJnZXRDYXRlZ29yaWFzIiwiY2F0ZWdvcmlhcyIsImFkZFByb2R1Y3RvIiwiZ2V0UHJvZHVjdG9zIiwiZm90b3MiLCJwcm9kdWN0b19pZCIsIkZvcm1FZGl0YXJQcm9kdWN0byIsImRldGFpbCIsImRlbGV0ZVByb2R1Y3RvIiwicHJvZHVjdG9fcGFnaW5hX2lkIiwiZGVsZXRlSW1hZ2VuIiwiZWRpdGFyUHJvZHVjdG8iLCJkZWxldGUiLCIkZmlsdGVyIiwic3RhdHVzIiwic2VydmljaW9zIiwiZ2F0byIsIkZvcm1QYWdpbmEiLCJzZWNjaW9uZXMiLCJwcm9jZXNzRm9ybSIsInBydWViYSIsInBhZ2VzIiwiY2F0ZWdvcmlhX3NlbGVjY2lvbmFkYSIsImZhcV9zZWxlY2Npb25hZGEiLCJjYXRlZ29yaWFfdGl0dWxvIiwiZ2V0UHJlZ3VudGFzIiwiY2F0ZWdvcmlhX2lkIiwiY2F0ZWdvcmlhIiwiZmFxcyIsImdldEZhcSIsImZhcV9pZCIsImZhcSIsIkhvbGRlciIsInJ1biIsImltYWdlcyIsIiRlbGVtZW50IiwiJGxvY2F0aW9uIiwiYWRkQmciLCJwYXRoIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsIiR3YXRjaCIsIm5ld1ZhbCIsIm9sZFZhbCIsImZpbmQiLCJvbiIsImV2ZW50IiwiJHRoaXMiLCJocmVmVXJsIiwic3R5bGUiLCJ0aGlzIiwiYXR0ciIsInByZXZlbnREZWZhdWx0IiwiJHJvb3RTY29wZSIsIlRpbWVyIiwiYXBwIiwidXBkYXRlQ2xhc3MiLCJoYXNDbGFzcyIsIiRicm9hZGNhc3QiLCIkYSIsIiRhUmVzdCIsIiRsaXN0cyIsIiRsaXN0c1Jlc3QiLCJwYXJlbnQiLCJjaGlsZHJlbiIsIm5vdCIsIiRwYXJlbnQiLCJzbGlkZVVwIiwidG9nZ2xlQ2xhc3MiLCJzbGlkZVRvZ2dsZSIsIiRvbiIsIiRhdHRycyIsImhpZ2hsaWdodEFjdGl2ZSIsImxpbmtzIiwiZm9yRWFjaCIsIiRsaSIsIiRsaW5rIiwiaW5kZXhPZiIsInNsaW1TY3JvbGwiLCJoaXN0b3J5IiwiYmFjayIsImxvY2FsaXplIiwibGFuZ3VhZ2UiLCJyZXNvdXJjZUZpbGVMb2FkZWQiLCJzdWNjZXNzQ2FsbGJhY2siLCJkaWN0aW9uYXJ5Iiwic2V0TGFuZ3VhZ2UiLCJpbml0TG9jYWxpemVkUmVzb3VyY2VzIiwic2V0VXJsIiwiYnVpbGRVcmwiLCJuYXZpZ2F0b3IiLCJ1c2VyTGFuZ3VhZ2UiLCJjYWNoZSIsImdldExvY2FsaXplZFN0cmluZyIsInJlc3VsdCIsInZhbHVlTG93ZXJDYXNlIiwiaTE4bkRpcmVjdGl2ZSIsInVwZGF0ZVRleHQiLCJpbnB1dCIsInBsYWNlaG9sZGVyIiwidGV4dCIsImkxOG4iLCIkb2JzZXJ2ZSIsImxhbmciLCJzZXRMYW5nIiwibG9nZ2VyIiwibG9jYWxTdG9yYWdlIiwicmVtb3ZlSXRlbSIsImNvbmZpZ192YWxvciIsImJyYW5kIiwiaXNTcGVjaWZpY1BhZ2UiLCJfIiwiY29udGFpbnMiLCJtc2ciLCIkJCIsInN3aXBlUmlnaHQiLCJzd2lwZUxlZnQiLCJ1c3VhcmlvIiwidXN1YXJpb19mYWNlYm9vayIsImZvdG8iLCJmaWx0ZXJGaWx0ZXIiLCJhbGVydGVkIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJtaXNQYWdpbmFzIiwiUGFnaW5hc1ZlbmNpZGFzIiwiVG90YWxQYWdpbmFzVmVuY2lkYXMiLCJzb2NrZXQiLCJpbyIsInVzZXJuYW1lIiwiYWRkUGFydGljaXBhbnRzTWVzc2FnZSIsInJlbW92ZUNoYXRUeXBpbmciLCJzZXRJbnRlcnZhbCIsIlBhZ2luYU1lbnNhamVzTGF0ZXN0IiwiVXN1YXJpbyIsIm51bVVzZXJzIiwiZGl2MnRvcCIsIm9iakRpdiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzY3JvbGxUb3AiLCJzY3JvbGxIZWlnaHQiLCJzZXRVc2VybmFtZSIsImNsZWFuSW5wdXQiLCIkdXNlcm5hbWVJbnB1dCIsInRyaW0iLCIkZmFjZWJvb2tJbnB1dCIsIiRsb2dpblBhZ2UiLCJmYWRlT3V0IiwiJGNoYXRQYWdlIiwib2ZmIiwiJGN1cnJlbnRJbnB1dCIsIiRpbnB1dE1lc3NhZ2UiLCJlbWl0Iiwic2VuZE1lc3NhZ2UiLCJjb25uZWN0ZWQiLCJhZGRDaGF0TWVzc2FnZSIsInVzdWFyaW9fZm90byIsIiR0eXBpbmdNZXNzYWdlcyIsImdldFR5cGluZ01lc3NhZ2VzIiwiZmFkZSIsInJlbW92ZSIsImNzcyIsImdldFVzZXJuYW1lQ29sb3IiLCJuaWNrIiwiJG1lc3NhZ2VCb2R5RGl2IiwiJG1lc3NhZ2VEaXYiLCJ0eXBpbmciLCJhZGRNZXNzYWdlRWxlbWVudCIsImFkZENoYXRUeXBpbmciLCJlbCIsIiRlbCIsInByZXBlbmQiLCJmYWRlSW4iLCJGQURFX1RJTUUiLCIkbWVzc2FnZXMiLCJ1cGRhdGVUeXBpbmciLCJsYXN0VHlwaW5nVGltZSIsImdldFRpbWUiLCJ0eXBpbmdUaW1lciIsInRpbWVEaWZmIiwiVFlQSU5HX1RJTUVSX0xFTkdUSCIsImZpbHRlciIsImhhc2giLCJjaGFyQ29kZUF0IiwiaW5kZXgiLCJhYnMiLCJDT0xPUlMiLCJwZXJmaWwiLCJ1c3VhcmlvX25vbWJyZSIsImtleWRvd24iLCJjdHJsS2V5IiwibWV0YUtleSIsImFsdEtleSIsIndoaWNoIiwiY2xpY2siLCJjb24iLCJwcm9kdWN0byIsInVwZGF0ZVBhc3MiLCJGb3JtRWRpdGFyUGVyZmlsIiwiRm9ybUNoYW5nZVBhc3N3b3JkIiwiZ2V0UGVyZmlsIiwiZWRpdGFyUGVyZmlsIiwiY2hlY2tOaWNrIiwiY29pbmNpZGVuIiwicGFzczEiLCJwYXNzMiIsIm9rIiwiY2hhbmdlUGFzcyJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxZQUNBQSxTQUFBQyxPQUFBLE9BQ0EsVUFDQSxhQUNBLHNCQUNBLFlBQ0EsZUFDQSxxQkFDQSxjQUNBLGtCQUNBLGlCQUNBLG1CQUNBLGdCQUNBLGFBQ0EsY0FDQSxXQUNBLGtCQUNBLGNBQ0EsZ0JBQ0EsZUFDQSxhQUNBLGNBQ0FDLFFBQ0EsaUJBQUEsU0FBQUMsR0FDQSxNQUFBQSxHQUFBQyxLQUFBLEtBQ0FDLFdBQUEsZUFDQUQsS0FBQSxjQUNBRSxZQUFBLHlCQUNBRixLQUFBLGFBQ0FFLFlBQUEsZ0NBQ0FGLEtBQUEsbUJBQ0FFLFlBQUEsNEJBQ0FDLFdBQUEsZ0JBQ0FILEtBQUEscUJBQ0FFLFlBQUEsMEJBQ0FDLFdBQUEsZ0JBQ0FILEtBQUEsVUFDQUUsWUFBQSwyQkFDQUYsS0FBQSxXQUNBRSxZQUFBLDJCQUNBRixLQUFBLGtCQUNBRSxZQUFBLGlDQUNBRixLQUFBLGtC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LFFBQUFzUCxXQUNBeEIsUUFBQSxXQUNBdkIsRUFBQStGLE9BQ0E3UixFQUFBb00sT0FBQSxVQUFBLG1CQUNBdVksTUFDQXJYLE1BQUEsV0FDQXROLEVBQUFvTSxPQUFBLFNBQUEscUJBS0FwTSxFQUFBZ1csV0FBQSxTQUFBN0gsR0FDQSxHQUFBQyxHQUFBLEdBQUFDLFNBRUFELEdBQUFFLE9BQUEsT0FBQUgsRUFBQSxJQUdBbEIsRUFBQXNCLEtBQUEsY0FBQUgsR0FDQUksaUJBQUEsRUFDQUMsU0FBQUMsZUFBQUMsUUFDQUMsaUJBQUFyUCxRQUFBc1AsV0FDQXhCLFFBQUEsV0FDQXJOLEVBQUFvTSxPQUFBLFVBQUEscUJBQ0FrQixNQUFBLFdBQ0F0TixFQUFBb00sT0FBQSxTQUFBIiwiZmlsZSI6ImZpbmFsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAgICduZ1JvdXRlJyxcbiAgICAnbmdTYW5pdGl6ZScsXG4gICAgJ2FuZ3VsYXItbG9hZGluZy1iYXInLFxuICAgICduZ0FuaW1hdGUnLFxuICAgICd1aS5ib290c3RyYXAnLFxuICAgICdtZ28tYW5ndWxhci13aXphcmQnLFxuICAgICd0ZXh0QW5ndWxhcicsXG4gICAgJ2FwcC5jb250cm9sbGVycycsXG4gICAgJ2FwcC5kaXJlY3RpdmVzJyxcbiAgICAnYXBwLmxvY2FsaXphdGlvbicsXG4gICAgJ2FwcC5zZXJ2aWNpb3MnLFxuICAgICdhcHAucGFnaW5hJyxcbiAgICAnYXBwLnNvcG9ydGUnLFxuICAgICdhcHAuY2hhdCcsXG4gICAgJ2FwcC51aS5zZXJ2aWNlcycsXG4gICAgJ2FwcC51c3VhcmlvJyxcbiAgICAnTW9kZWxvVXN1YXJpbycsXG4gICAgJ2FwcC5wcm9kdWN0bycsXG4gICAgJ2FwcC50aWVuZGEnLFxuICAgICdhcHAuYWRtaW4nLFxuICAgIF0pLmNvbmZpZyhbXG4gICAgJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAgIHJldHVybiAkcm91dGVQcm92aWRlci53aGVuKCcvJywge1xuICAgICAgICByZWRpcmVjdFRvOiAnL2Rhc2hib2FyZCdcbiAgICAgIH0pLndoZW4oJy9kYXNoYm9hcmQnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvZGFzaGJvYXJkLmh0bWwnXG4gICAgICB9KS53aGVuKCcvY29udGFjdG8nLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3Mvc29wb3J0ZS9jb250YWN0by5odG1sJ1xuICAgICAgfSkud2hlbignL3VzdWFyaW8vcGVyZmlsJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3VzdWFyaW8vcGVyZmlsLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnVXN1YXJpb0N0cmwnXG4gICAgICB9KS53aGVuKCcvdXN1YXJpby9wYXNzd29yZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy91c3VhcmlvL3Bhc3MuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6J1VzdWFyaW9DdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ29zJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ29zL3BhZ29zLmh0bWwnXG4gICAgICB9KS53aGVuKCcvdXBsb2FkJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3VwbG9hZC90ZXN0Lmh0bWwnXG4gICAgICB9KS53aGVuKCcvdWkvdHlwb2dyYXBoeScsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdlcy9sb2NrLXNjcmVlbi5odG1sJ1xuICAgICAgfSkud2hlbignL3BhZ2VzL3Byb2ZpbGUnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnZXMvcHJvZmlsZS5odG1sJ1xuICAgICAgfSkud2hlbignLzQwNCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdlcy80MDQuaHRtbCdcbiAgICAgIH0pLndoZW4oJy9wYWdlcy81MDAnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnZXMvNTAwLmh0bWwnXG4gICAgICB9KS53aGVuKCcvcGFnZXMvc3VzcGVuZGlkYScsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdlcy9zdXNwZW5kaWRhLmh0bWwnXG4gICAgICB9KS53aGVuKCcvcGFnZXMvYmxhbmsnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnZXMvYmxhbmsuaHRtbCdcbiAgICAgIH0pLndoZW4oJy9wYWdlcy9pbnZvaWNlJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2VzL2ludm9pY2UuaHRtbCdcbiAgICAgIH0pLndoZW4oJy90aWVuZGEnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvdGllbmRhL2luaWNpby5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJydcbiAgICAgIH0pLndoZW4oJy90aWVuZGEvaXRlbS86cHJvZHVjdG9faWQnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvdGllbmRhL2l0ZW0uaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdUaWVuZGFDdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYXMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnaW5hcy9wYWdpbmFzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUGFnaW5hc0N0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hL2FkZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdpbmFzL2FkZFBhZ2luYS5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ1BhZ2luYUN0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hLzpwYWdpbmFfaWQvdGV4dG9zJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvdGV4dG9zLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOidQYWdpbmFDdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvZGFzaC5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjonUGFnaW5hQ3RybCdcbiAgICAgIH0pLndoZW4oJy9wYWdpbmEvOnBhZ2luYV9pZC9jb25maWcnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnaW5hcy9wYWdpbmEuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQYWdpbmFDdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkL3NlZ3VpZG9yZXMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnaW5hcy9zZWd1aWRvcmVzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnU2VndWlkb3Jlc0N0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hLzpwYWdpbmFfaWQvYmFubmVycycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICdzY3JpcHRzL3BhZ2luYXMvYmFubmVycy5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ0Jhbm5lcnNDdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkL3N1Y2Nlc3MnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnaW5hcy9zdWNjZXNzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUGFnaW5hQ3RybCdcbiAgICAgIH0pLndoZW4oJy9wYWdpbmEvOnBhZ2luYV9pZC9lc3RpbG8nLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnaW5hcy9lc3RpbG8uaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdFc3RpbG9DdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkL3B1YmxpY2FjaW9uZXMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcGFnaW5hcy9wdWJsaWNhY2lvbmVzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUHVibGljYWNpb25lc0N0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hLzpwYWdpbmFfaWQvcHJvZHVjdG9zJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvcHJvZHVjdG9zLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUHJvZHVjdG9DdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkL3Byb2R1Y3RvLzpwcm9kdWN0b19pZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdpbmFzL3Byb2R1Y3RvLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUHJvZHVjdG9EZXRhbGxlQ3RybCdcbiAgICAgIH0pLndoZW4oJy9wYWdpbmEvcHJvZHVjdG8vOnByb2R1Y3RvX2lkJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvcHJvZHVjdG8uaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQcm9kdWN0b0N0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hLzpwYWdpbmFfaWQvcHVibGljYWNpb24vOnB1YmxpY2FjaW9uX2lkJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvcHVibGljYWNpb24uaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQdWJsaWNhY2lvbmVzQ3RybCdcbiAgICAgIH0pLndoZW4oJy9wYWdpbmEvOnBhZ2luYV9pZC9jdWVudGFzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvY3VlbnRhcy5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ1BhZ2luYUN1ZW50YXNDdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkL21lbnNhamVzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvbWVuc2FqZXMuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQYWdpbmFNZW5zYWplc0N0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hLzpwYWdpbmFfaWQvbWVuc2FqZS86bWVuc2FqZV9pZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdpbmFzL21lbnNhamVzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUGFnaW5hTWVuc2FqZXNDdHJsJ1xuICAgICAgfSkud2hlbignL3BhZ2luYS86cGFnaW5hX2lkL2dhbGVyaWFzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2luYXMvZ2FsZXJpYXMuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdHYWxlcmlhc0N0cmwnXG4gICAgICB9KS53aGVuKCcvcGFnaW5hLzpwYWdpbmFfaWQvZ2FsZXJpYS86Z2FsZXJpYV9pZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wYWdpbmFzL2dhbGVyaWEuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdHYWxlcmlhc0N0cmwnXG4gICAgICB9KS53aGVuKCcvXz1fJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2Rhc2hib2FyZC5odG1sJ1xuICAgICAgfSkud2hlbignL3NlcnZpY2lvcycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9zZXJ2aWNpb3Mvc2VydmljaW9zLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnc2VydmljaW9zQ3RybCdcbiAgICAgIH0pLndoZW4oJy9zZXJ2aWNpb3MvcG9yUGFnYXInLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3Mvc2VydmljaW9zL3BlbmRpZW50ZXMuaHRtbCdcbiAgICAgIH0pLndoZW4oJy9zZXJ2aWNpb3MvZmFjdHVyYXMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3Mvc2VydmljaW9zL2ZhY3R1cmFzLmh0bWwnXG4gICAgICB9KS53aGVuKCcvc29wb3J0ZS9mYXFzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3NvcG9ydGUvZmFxcy5odG1sJ1xuICAgICAgfSkud2hlbignL3NvcG9ydGUvY2hhdCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9zb3BvcnRlL2NoYXQuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDaGF0Q3RybCdcbiAgICAgIH0pLndoZW4oJy9zb3BvcnRlL2ZhcXMvOmZhcV9pZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9zb3BvcnRlL2ZhcXMuaHRtbCdcbiAgICAgIH0pLndoZW4oJy90ZXN0Jywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3BhZ2VzL3Rlc3QuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICcnXG4gICAgICB9KS53aGVuKCcvYWRtaW4nLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvYWRtaW4vZGFzaC5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ0FkbWluRGFzaEN0cmwnXG4gICAgICB9KS5vdGhlcndpc2Uoe1xuICAgICAgICByZWRpcmVjdFRvOiAnLzQwNCdcbiAgICAgIH0pO1xuICAgIH1cbiAgXSk7XG5cbn0pKCk7XG4iLCIndXNlIHN0cmljdCc7XG5hbmd1bGFyLm1vZHVsZSgnYXBwLmNoYXJ0LmN0cmxzJywgW10pLmNvbnRyb2xsZXIoJ2NoYXJ0Q3RybCcsIFtcbiAgJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xuICAgICRzY29wZS5lYXN5cGllY2hhcnQgPSB7XG4gICAgICBwZXJjZW50OiA2NSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgYW5pbWF0ZToge1xuICAgICAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgICAgIGVuYWJsZWQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgYmFyQ29sb3I6ICcjMUM3RUJCJyxcbiAgICAgICAgbGluZUNhcDogJ3JvdW5kJyxcbiAgICAgICAgc2l6ZTogMTgwLFxuICAgICAgICBsaW5lV2lkdGg6IDVcbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5lYXN5cGllY2hhcnQyID0ge1xuICAgICAgcGVyY2VudDogMzUsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGFuaW1hdGU6IHtcbiAgICAgICAgICBkdXJhdGlvbjogMTAwMCxcbiAgICAgICAgICBlbmFibGVkOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGJhckNvbG9yOiAnIzIzQUU4OScsXG4gICAgICAgIGxpbmVDYXA6ICdyb3VuZCcsXG4gICAgICAgIHNpemU6IDE4MCxcbiAgICAgICAgbGluZVdpZHRoOiAxMFxuICAgICAgfVxuICAgIH07XG4gICAgJHNjb3BlLmVhc3lwaWVjaGFydDMgPSB7XG4gICAgICBwZXJjZW50OiA2OCxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgYW5pbWF0ZToge1xuICAgICAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgICAgIGVuYWJsZWQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgYmFyQ29sb3I6ICcjMkVDMUNDJyxcbiAgICAgICAgbGluZUNhcDogJ3NxdWFyZScsXG4gICAgICAgIHNpemU6IDE4MCxcbiAgICAgICAgbGluZVdpZHRoOiAyMCxcbiAgICAgICAgc2NhbGVMZW5ndGg6IDBcbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5nYXVnZUNoYXJ0MSA9IHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbWF4VmFsdWU6IDMwMDAsXG4gICAgICAgIGFuaW1hdGlvblNwZWVkOiA0MCxcbiAgICAgICAgdmFsOiAxMzc1XG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBsaW5lczogMTIsXG4gICAgICAgIGFuZ2xlOiAwLFxuICAgICAgICBsaW5lV2lkdGg6IDAuNDcsXG4gICAgICAgIHBvaW50ZXI6IHtcbiAgICAgICAgICBsZW5ndGg6IDAuNixcbiAgICAgICAgICBzdHJva2VXaWR0aDogMC4wMyxcbiAgICAgICAgICBjb2xvcjogJyMwMDAwMDAnXG4gICAgICAgIH0sXG4gICAgICAgIGxpbWl0TWF4OiAnZmFsc2UnLFxuICAgICAgICBjb2xvclN0YXJ0OiAnI0EzQzg2RCcsXG4gICAgICAgIGNvbG9yU3RvcDogJyNBM0M4NkQnLFxuICAgICAgICBzdHJva2VDb2xvcjogJyNFMEUwRTAnLFxuICAgICAgICBnZW5lcmF0ZUdyYWRpZW50OiB0cnVlLFxuICAgICAgICBwZXJjZW50Q29sb3JzOiBbWzAuMCwgJyNBM0M4NkQnXSwgWzEuMCwgJyNBM0M4NkQnXV1cbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5nYXVnZUNoYXJ0MiA9IHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbWF4VmFsdWU6IDMwMDAsXG4gICAgICAgIGFuaW1hdGlvblNwZWVkOiA0NSxcbiAgICAgICAgdmFsOiAxMjAwXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBsaW5lczogMTIsXG4gICAgICAgIGFuZ2xlOiAwLFxuICAgICAgICBsaW5lV2lkdGg6IDAuNDcsXG4gICAgICAgIHBvaW50ZXI6IHtcbiAgICAgICAgICBsZW5ndGg6IDAuNixcbiAgICAgICAgICBzdHJva2VXaWR0aDogMC4wMyxcbiAgICAgICAgICBjb2xvcjogJyM0NjQ2NDYnXG4gICAgICAgIH0sXG4gICAgICAgIGxpbWl0TWF4OiAndHJ1ZScsXG4gICAgICAgIGNvbG9yU3RhcnQ6ICcjN0FDQkVFJyxcbiAgICAgICAgY29sb3JTdG9wOiAnIzdBQ0JFRScsXG4gICAgICAgIHN0cm9rZUNvbG9yOiAnI0YxRjFGMScsXG4gICAgICAgIGdlbmVyYXRlR3JhZGllbnQ6IHRydWUsXG4gICAgICAgIHBlcmNlbnRDb2xvcnM6IFtbMC4wLCAnIzdBQ0JFRSddLCBbMS4wLCAnIzdBQ0JFRSddXVxuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuICRzY29wZS5nYXVnZUNoYXJ0MyA9IHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbWF4VmFsdWU6IDMwMDAsXG4gICAgICAgIGFuaW1hdGlvblNwZWVkOiA1MCxcbiAgICAgICAgdmFsOiAxMTAwXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBsaW5lczogMTIsXG4gICAgICAgIGFuZ2xlOiAwLFxuICAgICAgICBsaW5lV2lkdGg6IDAuNDcsXG4gICAgICAgIHBvaW50ZXI6IHtcbiAgICAgICAgICBsZW5ndGg6IDAuNixcbiAgICAgICAgICBzdHJva2VXaWR0aDogMC4wMyxcbiAgICAgICAgICBjb2xvcjogJyM0NjQ2NDYnXG4gICAgICAgIH0sXG4gICAgICAgIGxpbWl0TWF4OiAndHJ1ZScsXG4gICAgICAgIGNvbG9yU3RhcnQ6ICcjRkY3ODU3JyxcbiAgICAgICAgY29sb3JTdG9wOiAnI0ZGNzg1NycsXG4gICAgICAgIHN0cm9rZUNvbG9yOiAnI0YxRjFGMScsXG4gICAgICAgIGdlbmVyYXRlR3JhZGllbnQ6IHRydWUsXG4gICAgICAgIHBlcmNlbnRDb2xvcnM6IFtbMC4wLCAnI0ZGNzg1NyddLCBbMS4wLCAnI0ZGNzg1NyddXVxuICAgICAgfVxuICAgIH07XG4gIH1cbl0pLmNvbnRyb2xsZXIoJ21vcnJpc0NoYXJ0Q3RybCcsIFtcbiAgJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xuICAgICRzY29wZS5tYWluRGF0YSA9IFtcbiAgICAgIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTAxJyxcbiAgICAgICAgeGJveDogMjk0MDAwLFxuICAgICAgICB3aWxsOiAxMzYwMDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiAyNDQwMDBcbiAgICAgIH0sIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTAyJyxcbiAgICAgICAgeGJveDogMjI4MDAwLFxuICAgICAgICB3aWxsOiAzMzUwMDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiAxMjcwMDBcbiAgICAgIH0sIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTAzJyxcbiAgICAgICAgeGJveDogMTk5MDAwLFxuICAgICAgICB3aWxsOiAxNTkwMDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiAxMzAwMDBcbiAgICAgIH0sIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTA0JyxcbiAgICAgICAgeGJveDogMTc0MDAwLFxuICAgICAgICB3aWxsOiAxNjAwMDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiA4MjAwMFxuICAgICAgfSwge1xuICAgICAgICBtb250aDogJzIwMTMtMDUnLFxuICAgICAgICB4Ym94OiAyNTUwMDAsXG4gICAgICAgIHdpbGw6IDMxODAwMCxcbiAgICAgICAgcGxheXN0YXRpb246IDgyMDAwXG4gICAgICB9LCB7XG4gICAgICAgIG1vbnRoOiAnMjAxMy0wNicsXG4gICAgICAgIHhib3g6IDI5ODQwMCxcbiAgICAgICAgd2lsbDogNDAxODAwLFxuICAgICAgICBwbGF5c3RhdGlvbjogOTg2MDBcbiAgICAgIH0sIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTA3JyxcbiAgICAgICAgeGJveDogMzcwMDAwLFxuICAgICAgICB3aWxsOiAyMjUwMDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiAxNTkwMDBcbiAgICAgIH0sIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTA4JyxcbiAgICAgICAgeGJveDogMzc2NzAwLFxuICAgICAgICB3aWxsOiAzMDM2MDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiAxMzAwMDBcbiAgICAgIH0sIHtcbiAgICAgICAgbW9udGg6ICcyMDEzLTA5JyxcbiAgICAgICAgeGJveDogNTI3ODAwLFxuICAgICAgICB3aWxsOiAzMDEwMDAsXG4gICAgICAgIHBsYXlzdGF0aW9uOiAxMTk0MDBcbiAgICAgIH1cbiAgICBdO1xuICAgICRzY29wZS5zaW1wbGVEYXRhID0gW1xuICAgICAge1xuICAgICAgICB5ZWFyOiAnMjAwOCcsXG4gICAgICAgIHZhbHVlOiAyMFxuICAgICAgfSwge1xuICAgICAgICB5ZWFyOiAnMjAwOScsXG4gICAgICAgIHZhbHVlOiAxMFxuICAgICAgfSwge1xuICAgICAgICB5ZWFyOiAnMjAxMCcsXG4gICAgICAgIHZhbHVlOiA1XG4gICAgICB9LCB7XG4gICAgICAgIHllYXI6ICcyMDExJyxcbiAgICAgICAgdmFsdWU6IDVcbiAgICAgIH0sIHtcbiAgICAgICAgeWVhcjogJzIwMTInLFxuICAgICAgICB2YWx1ZTogMjBcbiAgICAgIH0sIHtcbiAgICAgICAgeWVhcjogJzIwMTMnLFxuICAgICAgICB2YWx1ZTogMTlcbiAgICAgIH1cbiAgICBdO1xuICAgICRzY29wZS5jb21ib0RhdGEgPSBbXG4gICAgICB7XG4gICAgICAgIHllYXI6ICcyMDA4JyxcbiAgICAgICAgYTogMjAsXG4gICAgICAgIGI6IDE2LFxuICAgICAgICBjOiAxMlxuICAgICAgfSwge1xuICAgICAgICB5ZWFyOiAnMjAwOScsXG4gICAgICAgIGE6IDEwLFxuICAgICAgICBiOiAyMixcbiAgICAgICAgYzogMzBcbiAgICAgIH0sIHtcbiAgICAgICAgeWVhcjogJzIwMTAnLFxuICAgICAgICBhOiA1LFxuICAgICAgICBiOiAxNCxcbiAgICAgICAgYzogMjBcbiAgICAgIH0sIHtcbiAgICAgICAgeWVhcjogJzIwMTEnLFxuICAgICAgICBhOiA1LFxuICAgICAgICBiOiAxMixcbiAgICAgICAgYzogMTlcbiAgICAgIH0sIHtcbiAgICAgICAgeWVhcjogJzIwMTInLFxuICAgICAgICBhOiAyMCxcbiAgICAgICAgYjogMTksXG4gICAgICAgIGM6IDEzXG4gICAgICB9LCB7XG4gICAgICAgIHllYXI6ICcyMDEzJyxcbiAgICAgICAgYTogMjgsXG4gICAgICAgIGI6IDIyLFxuICAgICAgICBjOiAyMFxuICAgICAgfVxuICAgIF07XG4gICAgcmV0dXJuICRzY29wZS5kb251dERhdGEgPSBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBcIkRvd25sb2FkIFNhbGVzXCIsXG4gICAgICAgIHZhbHVlOiAxMlxuICAgICAgfSwge1xuICAgICAgICBsYWJlbDogXCJJbi1TdG9yZSBTYWxlc1wiLFxuICAgICAgICB2YWx1ZTogMzBcbiAgICAgIH0sIHtcbiAgICAgICAgbGFiZWw6IFwiTWFpbC1PcmRlciBTYWxlc1wiLFxuICAgICAgICB2YWx1ZTogMjBcbiAgICAgIH0sIHtcbiAgICAgICAgbGFiZWw6IFwiT25saW5lIFNhbGVzXCIsXG4gICAgICAgIHZhbHVlOiAxOVxuICAgICAgfVxuICAgIF07XG4gIH1cbl0pLmNvbnRyb2xsZXIoJ2Zsb3RDaGFydEN0cmwnLCBbXG4gICckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHtcbiAgICB2YXIgYXJlYUNoYXJ0LCBiYXJDaGFydDtcbiAgICBhcmVhQ2hhcnQgPSB7fTtcbiAgICBhcmVhQ2hhcnQuZGF0YTEgPSBbWzIwMDcsIDE1XSwgWzIwMDgsIDIwXSwgWzIwMDksIDEwXSwgWzIwMTAsIDVdLCBbMjAxMSwgNV0sIFsyMDEyLCAyMF0sIFsyMDEzLCAyOF1dO1xuICAgIGFyZWFDaGFydC5kYXRhMiA9IFtbMjAwNywgMTVdLCBbMjAwOCwgMTZdLCBbMjAwOSwgMjJdLCBbMjAxMCwgMTRdLCBbMjAxMSwgMTJdLCBbMjAxMiwgMTldLCBbMjAxMywgMjJdXTtcbiAgICAkc2NvcGUuYXJlYSA9IHt9O1xuICAgICRzY29wZS5hcmVhLmRhdGEgPSBbXG4gICAgICB7XG4gICAgICAgIGRhdGE6IGFyZWFDaGFydC5kYXRhMSxcbiAgICAgICAgbGFiZWw6IFwiVmFsdWUgQVwiLFxuICAgICAgICBsaW5lczoge1xuICAgICAgICAgIGZpbGw6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICBkYXRhOiBhcmVhQ2hhcnQuZGF0YTIsXG4gICAgICAgIGxhYmVsOiBcIlZhbHVlIEJcIixcbiAgICAgICAgcG9pbnRzOiB7XG4gICAgICAgICAgc2hvdzogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB5YXhpczogMlxuICAgICAgfVxuICAgIF07XG4gICAgJHNjb3BlLmFyZWEub3B0aW9ucyA9IHtcbiAgICAgIHNlcmllczoge1xuICAgICAgICBsaW5lczoge1xuICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgZmlsbDogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgcG9pbnRzOiB7XG4gICAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgICBsaW5lV2lkdGg6IDIsXG4gICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICBmaWxsQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgIHN5bWJvbDogXCJjaXJjbGVcIixcbiAgICAgICAgICByYWRpdXM6IDVcbiAgICAgICAgfSxcbiAgICAgICAgc2hhZG93U2l6ZTogMFxuICAgICAgfSxcbiAgICAgIGdyaWQ6IHtcbiAgICAgICAgaG92ZXJhYmxlOiB0cnVlLFxuICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgIHRpY2tDb2xvcjogXCIjZjlmOWY5XCIsXG4gICAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgICBib3JkZXJDb2xvcjogXCIjZWVlZWVlXCJcbiAgICAgIH0sXG4gICAgICBjb2xvcnM6IFtcIiMyM0FFODlcIiwgXCIjNkE1NUMyXCJdLFxuICAgICAgdG9vbHRpcDogdHJ1ZSxcbiAgICAgIHRvb2x0aXBPcHRzOiB7XG4gICAgICAgIGRlZmF1bHRUaGVtZTogZmFsc2VcbiAgICAgIH0sXG4gICAgICB4YXhpczoge1xuICAgICAgICBtb2RlOiBcInRpbWVcIlxuICAgICAgfSxcbiAgICAgIHlheGVzOiBbXG4gICAgICAgIHt9LCB7XG4gICAgICAgICAgcG9zaXRpb246IFwicmlnaHRcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgICBiYXJDaGFydCA9IHt9O1xuICAgIGJhckNoYXJ0LmRhdGExID0gW1syMDA4LCAyMF0sIFsyMDA5LCAxMF0sIFsyMDEwLCA1XSwgWzIwMTEsIDVdLCBbMjAxMiwgMjBdLCBbMjAxMywgMjhdXTtcbiAgICBiYXJDaGFydC5kYXRhMiA9IFtbMjAwOCwgMTZdLCBbMjAwOSwgMjJdLCBbMjAxMCwgMTRdLCBbMjAxMSwgMTJdLCBbMjAxMiwgMTldLCBbMjAxMywgMjJdXTtcbiAgICBiYXJDaGFydC5kYXRhMyA9IFtbMjAwOCwgMTJdLCBbMjAwOSwgMzBdLCBbMjAxMCwgMjBdLCBbMjAxMSwgMTldLCBbMjAxMiwgMTNdLCBbMjAxMywgMjBdXTtcbiAgICAkc2NvcGUuYmFyQ2hhcnQgPSB7fTtcbiAgICAkc2NvcGUuYmFyQ2hhcnQuZGF0YSA9IFtcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6IFwiVmFsdWUgQVwiLFxuICAgICAgICBkYXRhOiBiYXJDaGFydC5kYXRhMVxuICAgICAgfSwge1xuICAgICAgICBsYWJlbDogXCJWYWx1ZSBCXCIsXG4gICAgICAgIGRhdGE6IGJhckNoYXJ0LmRhdGEyXG4gICAgICB9LCB7XG4gICAgICAgIGxhYmVsOiBcIlZhbHVlIENcIixcbiAgICAgICAgZGF0YTogYmFyQ2hhcnQuZGF0YTNcbiAgICAgIH1cbiAgICBdO1xuICAgICRzY29wZS5iYXJDaGFydC5vcHRpb25zID0ge1xuICAgICAgc2VyaWVzOiB7XG4gICAgICAgIHN0YWNrOiB0cnVlLFxuICAgICAgICBiYXJzOiB7XG4gICAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgICBmaWxsOiAxLFxuICAgICAgICAgIGJhcldpZHRoOiAwLjMsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgaG9yaXpvbnRhbDogZmFsc2UsXG4gICAgICAgICAgb3JkZXI6IDFcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGdyaWQ6IHtcbiAgICAgICAgaG92ZXJhYmxlOiB0cnVlLFxuICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgICAgYm9yZGVyQ29sb3I6IFwiI2VlZWVlZVwiXG4gICAgICB9LFxuICAgICAgdG9vbHRpcDogdHJ1ZSxcbiAgICAgIHRvb2x0aXBPcHRzOiB7XG4gICAgICAgIGRlZmF1bHRUaGVtZTogZmFsc2VcbiAgICAgIH0sXG4gICAgICBjb2xvcnM6IFtcIiMyM0FFODlcIiwgXCIjMkVDMUNDXCIsIFwiI0ZGQjYxQ1wiLCBcIiNFOTRCM0JcIl1cbiAgICB9O1xuICAgICRzY29wZS5waWVDaGFydCA9IHt9O1xuICAgICRzY29wZS5waWVDaGFydC5kYXRhID0gW1xuICAgICAge1xuICAgICAgICBsYWJlbDogXCJEb3dubG9hZCBTYWxlc1wiLFxuICAgICAgICBkYXRhOiAxMlxuICAgICAgfSwge1xuICAgICAgICBsYWJlbDogXCJJbi1TdG9yZSBTYWxlc1wiLFxuICAgICAgICBkYXRhOiAzMFxuICAgICAgfSwge1xuICAgICAgICBsYWJlbDogXCJNYWlsLU9yZGVyIFNhbGVzXCIsXG4gICAgICAgIGRhdGE6IDIwXG4gICAgICB9LCB7XG4gICAgICAgIGxhYmVsOiBcIk9ubGluZSBTYWxlc1wiLFxuICAgICAgICBkYXRhOiAxOVxuICAgICAgfVxuICAgIF07XG4gICAgJHNjb3BlLnBpZUNoYXJ0Lm9wdGlvbnMgPSB7XG4gICAgICBzZXJpZXM6IHtcbiAgICAgICAgcGllOiB7XG4gICAgICAgICAgc2hvdzogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIHNob3c6IHRydWVcbiAgICAgIH0sXG4gICAgICBncmlkOiB7XG4gICAgICAgIGhvdmVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgY29sb3JzOiBbXCIjMjNBRTg5XCIsIFwiIzJFQzFDQ1wiLCBcIiNGRkI2MUNcIiwgXCIjRTk0QjNCXCJdLFxuICAgICAgdG9vbHRpcDogdHJ1ZSxcbiAgICAgIHRvb2x0aXBPcHRzOiB7XG4gICAgICAgIGNvbnRlbnQ6IFwiJXAuMCUsICVzXCIsXG4gICAgICAgIGRlZmF1bHRUaGVtZTogZmFsc2VcbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5kb251dENoYXJ0ID0ge307XG4gICAgJHNjb3BlLmRvbnV0Q2hhcnQuZGF0YSA9IFtcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6IFwiRG93bmxvYWQgU2FsZXNcIixcbiAgICAgICAgZGF0YTogMTJcbiAgICAgIH0sIHtcbiAgICAgICAgbGFiZWw6IFwiSW4tU3RvcmUgU2FsZXNcIixcbiAgICAgICAgZGF0YTogMzBcbiAgICAgIH0sIHtcbiAgICAgICAgbGFiZWw6IFwiTWFpbC1PcmRlciBTYWxlc1wiLFxuICAgICAgICBkYXRhOiAyMFxuICAgICAgfSwge1xuICAgICAgICBsYWJlbDogXCJPbmxpbmUgU2FsZXNcIixcbiAgICAgICAgZGF0YTogMTlcbiAgICAgIH1cbiAgICBdO1xuICAgICRzY29wZS5kb251dENoYXJ0Lm9wdGlvbnMgPSB7XG4gICAgICBzZXJpZXM6IHtcbiAgICAgICAgcGllOiB7XG4gICAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgICBpbm5lclJhZGl1czogMC41XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgc2hvdzogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGdyaWQ6IHtcbiAgICAgICAgaG92ZXJhYmxlOiB0cnVlLFxuICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBjb2xvcnM6IFtcIiMyM0FFODlcIiwgXCIjMkVDMUNDXCIsIFwiI0ZGQjYxQ1wiLCBcIiNFOTRCM0JcIl0sXG4gICAgICB0b29sdGlwOiB0cnVlLFxuICAgICAgdG9vbHRpcE9wdHM6IHtcbiAgICAgICAgY29udGVudDogXCIlcC4wJSwgJXNcIixcbiAgICAgICAgZGVmYXVsdFRoZW1lOiBmYWxzZVxuICAgICAgfVxuICAgIH07XG4gICAgJHNjb3BlLmRvbnV0Q2hhcnQyID0ge307XG4gICAgJHNjb3BlLmRvbnV0Q2hhcnQyLmRhdGEgPSBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBcIkRvd25sb2FkIFNhbGVzXCIsXG4gICAgICAgIGRhdGE6IDEyXG4gICAgICB9LCB7XG4gICAgICAgIGxhYmVsOiBcIkluLVN0b3JlIFNhbGVzXCIsXG4gICAgICAgIGRhdGE6IDMwXG4gICAgICB9LCB7XG4gICAgICAgIGxhYmVsOiBcIk1haWwtT3JkZXIgU2FsZXNcIixcbiAgICAgICAgZGF0YTogMjBcbiAgICAgIH0sIHtcbiAgICAgICAgbGFiZWw6IFwiT25saW5lIFNhbGVzXCIsXG4gICAgICAgIGRhdGE6IDE5XG4gICAgICB9LCB7XG4gICAgICAgIGxhYmVsOiBcIkRpcmVjdCBTYWxlc1wiLFxuICAgICAgICBkYXRhOiAxNVxuICAgICAgfVxuICAgIF07XG4gICAgcmV0dXJuICRzY29wZS5kb251dENoYXJ0Mi5vcHRpb25zID0ge1xuICAgICAgc2VyaWVzOiB7XG4gICAgICAgIHBpZToge1xuICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgaW5uZXJSYWRpdXM6IDAuNDVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGxlZ2VuZDoge1xuICAgICAgICBzaG93OiBmYWxzZVxuICAgICAgfSxcbiAgICAgIGdyaWQ6IHtcbiAgICAgICAgaG92ZXJhYmxlOiB0cnVlLFxuICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBjb2xvcnM6IFtcIiMxNzY3OTlcIiwgXCIjMkY4N0IwXCIsIFwiIzQyQTRCQlwiLCBcIiM1QkMwQzRcIiwgXCIjNzhENkM3XCJdLFxuICAgICAgdG9vbHRpcDogdHJ1ZSxcbiAgICAgIHRvb2x0aXBPcHRzOiB7XG4gICAgICAgIGNvbnRlbnQ6IFwiJXAuMCUsICVzXCIsXG4gICAgICAgIGRlZmF1bHRUaGVtZTogZmFsc2VcbiAgICAgIH1cbiAgICB9O1xuICB9XG5dKS5jb250cm9sbGVyKCdmbG90Q2hhcnRDdHJsLnJlYWx0aW1lJywgWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHt9XSkuY29udHJvbGxlcignc3BhcmtsaW5lQ3RybCcsIFtcbiAgJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xuICAgICRzY29wZS5kZW1vRGF0YTEgPSB7XG4gICAgICBkYXRhOiBbMywgMSwgMiwgMiwgNCwgNiwgNCwgNSwgMiwgNCwgNSwgMywgNCwgNiwgNCwgN10sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHR5cGU6ICdsaW5lJyxcbiAgICAgICAgbGluZUNvbG9yOiAnI2ZmZicsXG4gICAgICAgIGhpZ2hsaWdodExpbmVDb2xvcjogJyNmZmYnLFxuICAgICAgICBmaWxsQ29sb3I6ICcjMjNBRTg5JyxcbiAgICAgICAgc3BvdENvbG9yOiBmYWxzZSxcbiAgICAgICAgbWluU3BvdENvbG9yOiBmYWxzZSxcbiAgICAgICAgbWF4U3BvdENvbG9yOiBmYWxzZSxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnMTUwcHgnXG4gICAgICB9XG4gICAgfTtcbiAgICAkc2NvcGUuc2ltcGxlQ2hhcnQxID0ge1xuICAgICAgZGF0YTogWzMsIDEsIDIsIDMsIDUsIDMsIDQsIDJdLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICB0eXBlOiAnbGluZScsXG4gICAgICAgIGxpbmVDb2xvcjogJyMxRkI1QUQnLFxuICAgICAgICBmaWxsQ29sb3I6ICcjYmNlMGRmJyxcbiAgICAgICAgc3BvdENvbG9yOiBmYWxzZSxcbiAgICAgICAgbWluU3BvdENvbG9yOiBmYWxzZSxcbiAgICAgICAgbWF4U3BvdENvbG9yOiBmYWxzZVxuICAgICAgfVxuICAgIH07XG4gICAgJHNjb3BlLnNpbXBsZUNoYXJ0MiA9IHtcbiAgICAgIGRhdGE6IFszLCAxLCAyLCAzLCA1LCAzLCA0LCAyXSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgdHlwZTogJ2JhcicsXG4gICAgICAgIGJhckNvbG9yOiAnIzFGQjVBRCdcbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5zaW1wbGVDaGFydDMgPSB7XG4gICAgICBkYXRhOiBbMywgMSwgMiwgMywgNSwgMywgNCwgMl0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHR5cGU6ICdwaWUnLFxuICAgICAgICBzbGljZUNvbG9yczogWycjMWZiNWFkJywgJyM5NWI3NWQnLCAnIzU3YzhmMScsICcjODE3NWM3JywgJyNmM2MwMjInLCAnI2ZhODU2NCddXG4gICAgICB9XG4gICAgfTtcbiAgICAkc2NvcGUudHJpc3RhdGVDaGFydDEgPSB7XG4gICAgICBkYXRhOiBbMSwgMiwgLTMsIC01LCAzLCAxLCAtNCwgMl0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHR5cGU6ICd0cmlzdGF0ZScsXG4gICAgICAgIHBvc0JhckNvbG9yOiAnIzk1Yjc1ZCcsXG4gICAgICAgIG5lZ0JhckNvbG9yOiAnI2ZhODU2NCdcbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5sYXJnZUNoYXJ0MSA9IHtcbiAgICAgIGRhdGE6IFszLCAxLCAyLCAzLCA1LCAzLCA0LCAyXSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgdHlwZTogJ2xpbmUnLFxuICAgICAgICBsaW5lQ29sb3I6ICcjNjc0RTlFJyxcbiAgICAgICAgaGlnaGxpZ2h0TGluZUNvbG9yOiAnIzdBQ0JFRScsXG4gICAgICAgIGZpbGxDb2xvcjogJyM5MjdFRDEnLFxuICAgICAgICBzcG90Q29sb3I6IGZhbHNlLFxuICAgICAgICBtaW5TcG90Q29sb3I6IGZhbHNlLFxuICAgICAgICBtYXhTcG90Q29sb3I6IGZhbHNlLFxuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICcxNTBweCdcbiAgICAgIH1cbiAgICB9O1xuICAgICRzY29wZS5sYXJnZUNoYXJ0MiA9IHtcbiAgICAgIGRhdGE6IFszLCAxLCAyLCAzLCA1LCAzLCA0LCAyXSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgdHlwZTogJ2JhcicsXG4gICAgICAgIGJhckNvbG9yOiAnI0EzQzg2RCcsXG4gICAgICAgIGJhcldpZHRoOiAxMCxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnMTUwcHgnXG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gJHNjb3BlLmxhcmdlQ2hhcnQzID0ge1xuICAgICAgZGF0YTogWzMsIDEsIDIsIDMsIDVdLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICB0eXBlOiAncGllJyxcbiAgICAgICAgc2xpY2VDb2xvcnM6IFsnI0EzQzg2RCcsICcjN0FDQkVFJywgJyM5MjdFRDEnLCAnI0ZERDc2MScsICcjRkY3ODU3JywgJyM2NzRFOUUnXSxcbiAgICAgICAgd2lkdGg6ICcxNTBweCcsXG4gICAgICAgIGhlaWdodDogJzE1MHB4J1xuICAgICAgfVxuICAgIH07XG4gIH1cbl0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuYW5ndWxhci5tb2R1bGUoJ2FwcC5jaGFydC5kaXJlY3RpdmVzJywgW10pLmRpcmVjdGl2ZSgnZ2F1Z2VDaGFydCcsIFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICBzY29wZToge1xuICAgICAgICBkYXRhOiAnPScsXG4gICAgICAgIG9wdGlvbnM6ICc9J1xuICAgICAgfSxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGUsIGF0dHJzKSB7XG4gICAgICAgIHZhciBkYXRhLCBnYXVnZSwgb3B0aW9ucztcbiAgICAgICAgZGF0YSA9IHNjb3BlLmRhdGE7XG4gICAgICAgIG9wdGlvbnMgPSBzY29wZS5vcHRpb25zO1xuICAgICAgICBnYXVnZSA9IG5ldyBHYXVnZShlbGVbMF0pLnNldE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgIGdhdWdlLm1heFZhbHVlID0gZGF0YS5tYXhWYWx1ZTtcbiAgICAgICAgZ2F1Z2UuYW5pbWF0aW9uU3BlZWQgPSBkYXRhLmFuaW1hdGlvblNwZWVkO1xuICAgICAgICByZXR1cm4gZ2F1Z2Uuc2V0KGRhdGEudmFsKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5dKS5kaXJlY3RpdmUoJ2Zsb3RDaGFydCcsIFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICBzY29wZToge1xuICAgICAgICBkYXRhOiAnPScsXG4gICAgICAgIG9wdGlvbnM6ICc9J1xuICAgICAgfSxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGUsIGF0dHJzKSB7XG4gICAgICAgIHZhciBkYXRhLCBvcHRpb25zLCBwbG90O1xuICAgICAgICBkYXRhID0gc2NvcGUuZGF0YTtcbiAgICAgICAgb3B0aW9ucyA9IHNjb3BlLm9wdGlvbnM7XG4gICAgICAgIHJldHVybiBwbG90ID0gJC5wbG90KGVsZVswXSwgZGF0YSwgb3B0aW9ucyk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXSkuZGlyZWN0aXZlKCdmbG90Q2hhcnRSZWFsdGltZScsIFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlLCBhdHRycykge1xuICAgICAgICB2YXIgZGF0YSwgZ2V0UmFuZG9tRGF0YSwgcGxvdCwgdG90YWxQb2ludHMsIHVwZGF0ZSwgdXBkYXRlSW50ZXJ2YWw7XG4gICAgICAgIGRhdGEgPSBbXTtcbiAgICAgICAgdG90YWxQb2ludHMgPSAzMDA7XG4gICAgICAgIGdldFJhbmRvbURhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgaSwgcHJldiwgcmVzLCB5O1xuICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGRhdGEgPSBkYXRhLnNsaWNlKDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB3aGlsZSAoZGF0YS5sZW5ndGggPCB0b3RhbFBvaW50cykge1xuICAgICAgICAgICAgcHJldiA9IChkYXRhLmxlbmd0aCA+IDAgPyBkYXRhW2RhdGEubGVuZ3RoIC0gMV0gOiA1MCk7XG4gICAgICAgICAgICB5ID0gcHJldiArIE1hdGgucmFuZG9tKCkgKiAxMCAtIDU7XG4gICAgICAgICAgICBpZiAoeSA8IDApIHtcbiAgICAgICAgICAgICAgeSA9IDA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBpZiAoeSA+IDEwMCkge1xuICAgICAgICAgICAgICAgIHkgPSAxMDA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGEucHVzaCh5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmVzID0gW107XG4gICAgICAgICAgaSA9IDA7XG4gICAgICAgICAgd2hpbGUgKGkgPCBkYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgcmVzLnB1c2goW2ksIGRhdGFbaV1dKTtcbiAgICAgICAgICAgICsraTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfTtcbiAgICAgICAgdXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcGxvdC5zZXREYXRhKFtnZXRSYW5kb21EYXRhKCldKTtcbiAgICAgICAgICBwbG90LmRyYXcoKTtcbiAgICAgICAgICBzZXRUaW1lb3V0KHVwZGF0ZSwgdXBkYXRlSW50ZXJ2YWwpO1xuICAgICAgICB9O1xuICAgICAgICBkYXRhID0gW107XG4gICAgICAgIHRvdGFsUG9pbnRzID0gMzAwO1xuICAgICAgICB1cGRhdGVJbnRlcnZhbCA9IDIwMDtcbiAgICAgICAgcGxvdCA9ICQucGxvdChlbGVbMF0sIFtnZXRSYW5kb21EYXRhKCldLCB7XG4gICAgICAgICAgc2VyaWVzOiB7XG4gICAgICAgICAgICBsaW5lczoge1xuICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICBmaWxsOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hhZG93U2l6ZTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgeWF4aXM6IHtcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIG1heDogMTAwXG4gICAgICAgICAgfSxcbiAgICAgICAgICB4YXhpczoge1xuICAgICAgICAgICAgc2hvdzogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICAgIGhvdmVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjZWVlZWVlJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY29sb3JzOiBbXCIjNUJDMEM0XCJdXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdXBkYXRlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXSkuZGlyZWN0aXZlKCdzcGFya2xpbmUnLCBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgZGF0YTogJz0nLFxuICAgICAgICBvcHRpb25zOiAnPSdcbiAgICAgIH0sXG4gICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlLCBhdHRycykge1xuICAgICAgICB2YXIgZGF0YSwgb3B0aW9ucywgc3BhcmtSZXNpemUsIHNwYXJrbGluZURyYXc7XG4gICAgICAgIGRhdGEgPSBzY29wZS5kYXRhO1xuICAgICAgICBvcHRpb25zID0gc2NvcGUub3B0aW9ucztcbiAgICAgICAgc3BhcmtSZXNpemUgPSB2b2lkIDA7XG4gICAgICAgIHNwYXJrbGluZURyYXcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gZWxlLnNwYXJrbGluZShkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgfTtcbiAgICAgICAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbihlKSB7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHNwYXJrUmVzaXplKTtcbiAgICAgICAgICByZXR1cm4gc3BhcmtSZXNpemUgPSBzZXRUaW1lb3V0KHNwYXJrbGluZURyYXcsIDIwMCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gc3BhcmtsaW5lRHJhdygpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbl0pLmRpcmVjdGl2ZSgnbW9ycmlzQ2hhcnQnLCBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgZGF0YTogJz0nXG4gICAgICB9LFxuICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZSwgYXR0cnMpIHtcbiAgICAgICAgdmFyIGNvbG9ycywgZGF0YSwgZnVuYywgb3B0aW9ucztcbiAgICAgICAgZGF0YSA9IHNjb3BlLmRhdGE7XG4gICAgICAgIHN3aXRjaCAoYXR0cnMudHlwZSkge1xuICAgICAgICAgIGNhc2UgJ2xpbmUnOlxuICAgICAgICAgICAgaWYgKGF0dHJzLmxpbmVDb2xvcnMgPT09IHZvaWQgMCB8fCBhdHRycy5saW5lQ29sb3JzID09PSAnJykge1xuICAgICAgICAgICAgICBjb2xvcnMgPSBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29sb3JzID0gSlNPTi5wYXJzZShhdHRycy5saW5lQ29sb3JzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQ6IGVsZVswXSxcbiAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgeGtleTogYXR0cnMueGtleSxcbiAgICAgICAgICAgICAgeWtleXM6IEpTT04ucGFyc2UoYXR0cnMueWtleXMpLFxuICAgICAgICAgICAgICBsYWJlbHM6IEpTT04ucGFyc2UoYXR0cnMubGFiZWxzKSxcbiAgICAgICAgICAgICAgbGluZVdpZHRoOiBhdHRycy5saW5lV2lkdGggfHwgMixcbiAgICAgICAgICAgICAgbGluZUNvbG9yczogY29sb3JzIHx8IFsnIzBiNjJhNCcsICcjN2E5MmEzJywgJyM0ZGE3NGQnLCAnI2FmZDhmOCcsICcjZWRjMjQwJywgJyNjYjRiNGInLCAnIzk0NDBlZCddLFxuICAgICAgICAgICAgICByZXNpemU6IHRydWVcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vcnJpcy5MaW5lKG9wdGlvbnMpO1xuICAgICAgICAgIGNhc2UgJ2FyZWEnOlxuICAgICAgICAgICAgaWYgKGF0dHJzLmxpbmVDb2xvcnMgPT09IHZvaWQgMCB8fCBhdHRycy5saW5lQ29sb3JzID09PSAnJykge1xuICAgICAgICAgICAgICBjb2xvcnMgPSBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29sb3JzID0gSlNPTi5wYXJzZShhdHRycy5saW5lQ29sb3JzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQ6IGVsZVswXSxcbiAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgeGtleTogYXR0cnMueGtleSxcbiAgICAgICAgICAgICAgeWtleXM6IEpTT04ucGFyc2UoYXR0cnMueWtleXMpLFxuICAgICAgICAgICAgICBsYWJlbHM6IEpTT04ucGFyc2UoYXR0cnMubGFiZWxzKSxcbiAgICAgICAgICAgICAgbGluZVdpZHRoOiBhdHRycy5saW5lV2lkdGggfHwgMixcbiAgICAgICAgICAgICAgbGluZUNvbG9yczogY29sb3JzIHx8IFsnIzBiNjJhNCcsICcjN2E5MmEzJywgJyM0ZGE3NGQnLCAnI2FmZDhmOCcsICcjZWRjMjQwJywgJyNjYjRiNGInLCAnIzk0NDBlZCddLFxuICAgICAgICAgICAgICBiZWhhdmVMaWtlTGluZTogYXR0cnMuYmVoYXZlTGlrZUxpbmUgfHwgZmFsc2UsXG4gICAgICAgICAgICAgIGZpbGxPcGFjaXR5OiBhdHRycy5maWxsT3BhY2l0eSB8fCAnYXV0bycsXG4gICAgICAgICAgICAgIHBvaW50U2l6ZTogYXR0cnMucG9pbnRTaXplIHx8IDQsXG4gICAgICAgICAgICAgIHJlc2l6ZTogdHJ1ZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTW9ycmlzLkFyZWEob3B0aW9ucyk7XG4gICAgICAgICAgY2FzZSAnYmFyJzpcbiAgICAgICAgICAgIGlmIChhdHRycy5iYXJDb2xvcnMgPT09IHZvaWQgMCB8fCBhdHRycy5iYXJDb2xvcnMgPT09ICcnKSB7XG4gICAgICAgICAgICAgIGNvbG9ycyA9IG51bGw7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb2xvcnMgPSBKU09OLnBhcnNlKGF0dHJzLmJhckNvbG9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICBlbGVtZW50OiBlbGVbMF0sXG4gICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgIHhrZXk6IGF0dHJzLnhrZXksXG4gICAgICAgICAgICAgIHlrZXlzOiBKU09OLnBhcnNlKGF0dHJzLnlrZXlzKSxcbiAgICAgICAgICAgICAgbGFiZWxzOiBKU09OLnBhcnNlKGF0dHJzLmxhYmVscyksXG4gICAgICAgICAgICAgIGJhckNvbG9yczogY29sb3JzIHx8IFsnIzBiNjJhNCcsICcjN2E5MmEzJywgJyM0ZGE3NGQnLCAnI2FmZDhmOCcsICcjZWRjMjQwJywgJyNjYjRiNGInLCAnIzk0NDBlZCddLFxuICAgICAgICAgICAgICBzdGFja2VkOiBhdHRycy5zdGFja2VkIHx8IG51bGwsXG4gICAgICAgICAgICAgIHJlc2l6ZTogdHJ1ZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTW9ycmlzLkJhcihvcHRpb25zKTtcbiAgICAgICAgICBjYXNlICdkb251dCc6XG4gICAgICAgICAgICBpZiAoYXR0cnMuY29sb3JzID09PSB2b2lkIDAgfHwgYXR0cnMuY29sb3JzID09PSAnJykge1xuICAgICAgICAgICAgICBjb2xvcnMgPSBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29sb3JzID0gSlNPTi5wYXJzZShhdHRycy5jb2xvcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgZWxlbWVudDogZWxlWzBdLFxuICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICBjb2xvcnM6IGNvbG9ycyB8fCBbJyMwQjYyQTQnLCAnIzM5ODBCNScsICcjNjc5REM2JywgJyM5NUJCRDcnLCAnI0IwQ0NFMScsICcjMDk1NzkxJywgJyMwOTUwODUnLCAnIzA4M0U2NycsICcjMDUyQzQ4JywgJyMwNDIxMzUnXSxcbiAgICAgICAgICAgICAgcmVzaXplOiB0cnVlXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGF0dHJzLmZvcm1hdHRlcikge1xuICAgICAgICAgICAgICBmdW5jID0gbmV3IEZ1bmN0aW9uKCd5JywgJ2RhdGEnLCBhdHRycy5mb3JtYXR0ZXIpO1xuICAgICAgICAgICAgICBvcHRpb25zLmZvcm1hdHRlciA9IGZ1bmM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vcnJpcy5Eb251dChvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cbl0pO1xuIiwiKGZ1bmN0aW9uICgpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBhbmd1bGFyLm1vZHVsZSgnYXBwLnVpLmRpcmVjdGl2ZXMnLCBbXSkuZGlyZWN0aXZlKCd1aVRpbWUnLCBbXG4gICAgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlKSB7XG4gICAgICAgICAgdmFyIGNoZWNrVGltZSwgc3RhcnRUaW1lO1xuICAgICAgICAgIHN0YXJ0VGltZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGgsIG0sIHMsIHQsIHRpbWUsIHRvZGF5O1xuICAgICAgICAgICAgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgaCA9IHRvZGF5LmdldEhvdXJzKCk7XG4gICAgICAgICAgICBtID0gdG9kYXkuZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgcyA9IHRvZGF5LmdldFNlY29uZHMoKTtcbiAgICAgICAgICAgIG0gPSBjaGVja1RpbWUobSk7XG4gICAgICAgICAgICBzID0gY2hlY2tUaW1lKHMpO1xuICAgICAgICAgICAgdGltZSA9IGggKyBcIjpcIiArIG0gKyBcIjpcIiArIHM7XG4gICAgICAgICAgICBlbGUuaHRtbCh0aW1lKTtcbiAgICAgICAgICAgIHJldHVybiB0ID0gc2V0VGltZW91dChzdGFydFRpbWUsIDUwMCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgICBjaGVja1RpbWUgPSBmdW5jdGlvbihpKSB7XG4gICAgICAgICAgICBpZiAoaSA8IDEwKSB7XG4gICAgICAgICAgICAgIGkgPSBcIjBcIiArIGk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiBzdGFydFRpbWUoKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIF0pO1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uICgpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLnVpLnNlcnZpY2VzJywgW10pLmZhY3RvcnkoJ2xvZ2dlcicsIFtcbiAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbG9nSXQ7XG4gICAgICAgIHRvYXN0ci5vcHRpb25zID0ge1xuICAgICAgICAgIFwiY2xvc2VCdXR0b25cIjogdHJ1ZSxcbiAgICAgICAgICBcInBvc2l0aW9uQ2xhc3NcIjogXCJ0b2FzdC1ib3R0b20tcmlnaHRcIixcbiAgICAgICAgICBcInRpbWVPdXRcIjogXCIzMDAwXCJcbiAgICAgICAgfTtcbiAgICAgICAgbG9nSXQgPSBmdW5jdGlvbihtZXNzYWdlLCB0eXBlKSB7XG4gICAgICAgICAgcmV0dXJuIHRvYXN0clt0eXBlXShtZXNzYWdlKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBsb2c6IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgICAgICAgIGxvZ0l0KG1lc3NhZ2UsICdpbmZvJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBsb2dXYXJuaW5nOiBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgICAgICAgICBsb2dJdChtZXNzYWdlLCAnd2FybmluZycpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbG9nU3VjY2VzczogZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgICAgICAgbG9nSXQobWVzc2FnZSwgJ3N1Y2Nlc3MnKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxvZ0Vycm9yOiBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgICAgICAgICBsb2dJdChtZXNzYWdlLCAnZXJyb3InKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgXSk7XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAuYWRtaW4nLCBbJ2FwcC5hZG1pbi5zZXJ2aWNlJ10pLlxuICBjb250cm9sbGVyKCdBZG1pbkRhc2hDdHJsJyxbJyRzY29wZScsJ0FkbWluJywnJHJvdXRlUGFyYW1zJywnJHJvdXRlJyxmdW5jdGlvbiAoJHNjb3BlLEFkbWluLCRyb3V0ZVBhcmFtcywkcm91dGUpIHtcblxuXG4gICAgICAkc2NvcGUucGFnaW5hcyA9IHt9O1xuICAgICAgJHNjb3BlLmxpc3RvID0gMDtcblxuICAgICAgLy8gQWRtaW4uZG9taW5pb3MoZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICAvLyAgICAgaWYgKGVycikge2FsZXJ0KCdIdWJvIHVuIGVycm9yJyk7fVxuICAgICAgLy8gICAgIGVsc2V7XG4gICAgICAvLyAgICAgICAgICRzY29wZS5hcHBzID0gZGF0YTtcblxuICAgICAgLy8gICAgIH1cbiAgICAgIC8vIH0pO1xuICAgICAgZnVuY3Rpb24gZ2V0V2Vic2l0ZXMoKXtcbiAgICAgICAgICBBZG1pbi53ZWJzaXRlcyhmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgICAgICAgICAgICAgaWYgKGVycikge2FsZXJ0KCdIdWJvIHVuIGVycm9yJyk7fVxuICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLndlYnNpdGVzID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICRzY29wZS5saXN0byA9ICRzY29wZS5saXN0bysxO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnaW5mbycsXCJZYSBjYXJnYXJvbiBsb3Mgd2Vic2l0ZXNcIik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgIH1cblxuXG4gICAgICBmdW5jdGlvbiBnZXRBcHBzICgpIHtcbiAgICAgIFx0QWRtaW4uYXBwcyhmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgXHQgICAgICAgIGlmIChlcnIpIHthbGVydCgnSHVibyB1biBlcnJvcicpO31cbiAgXHQgICAgICAgIGVsc2V7XG4gIFx0ICAgICAgICAgICAgJHNjb3BlLmFwcHMgPSBkYXRhO1xuICBcdCAgICAgICAgICAgICRzY29wZS5saXN0byA9ICRzY29wZS5saXN0bysxO1xuICBcdCAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2luZm8nLFwiWWEgY2FyZ2Fyb24gbGFzIGFwcHNcIik7XG4gIFx0ICAgICAgICB9XG4gIFx0ICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvL1x0VHJhZXIgYXBwcyBhbCBjYXJnYXIgbGEgcMOhZ2luYVxuICAgICAgZ2V0QXBwcygpO1xuICAgICAgZ2V0V2Vic2l0ZXMoKTtcblxuICAgICAgLy8gIFBvbmVtb3MgZWwgZm9jbyBlbiBsYSBjYWphIGRlIGLDunNxdWVkYS4uLiBwb3JxdWUgc29tb3MgZmxvam9zIVxuICAgICAgJCgnI2J1c2NhcicpLmZvY3VzKCk7XG5cblxuICAgICAgJHNjb3BlLmJvcnJhckFwcCA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgXHR2YXIgc2kgPSBjb25maXJtKFwiU2VndXJvIHF1ZSBxdWllcmVzIGJvcnJhciBsYSBhcGxpY2FjacOzbjogXCIraWQpO1xuICAgICAgXHRpZiAoc2kpIHtcbiAgICAgIFx0XHRBZG1pbi5kZWxldGVBcHAoaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgXHRcdFx0aWYgKGVycikge2FsZXJ0KFwiRVJST1JcIik7Y29uc29sZS5sb2coZXJyKTt9XG4gICAgICBcdFx0XHRlbHNle1xuICAgICAgXHRcdFx0XHQkc2NvcGUubm90aWZ5KCdzdWNjZXNzJyxcIkFwbGljYWNpw7NuIGJvcnJhZGEgPVNcIik7XG4gICAgICBcdFx0XHRcdGdldEFwcHMoKTtcbiAgICAgIFx0XHRcdH1cbiAgICAgIFx0XHR9KTtcbiAgICAgIFx0fVxuXG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUuYm9ycmFyV2Vic2l0ZSA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICAgIHZhciBzaSA9IGNvbmZpcm0oXCJTZWd1cm8gcXVlIHF1aWVyZXMgYm9ycmFyIGxhIGFwbGljYWNpw7NuOiBcIitpZCk7XG4gICAgICAgICAgaWYgKHNpKSB7XG4gICAgICAgICAgICAgIEFkbWluLmRlbGV0ZVdlYnNpdGUoaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgICAgICAgICAgaWYgKGVycikge2FsZXJ0KFwiRVJST1JcIik7Y29uc29sZS5sb2coZXJyKTt9XG4gICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLFwiQXBsaWNhY2nDs24gYm9ycmFkYSA9U1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICBnZXRXZWJzaXRlcygpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgIH07XG5cblxuXG4gIH1dKTtcblxufSkoKTtcbiIsIihmdW5jdGlvbiAoKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLmFkbWluLnNlcnZpY2UnLCAgWyduZ1JvdXRlJ10pXG5cbiAgICAgICAgICAuZmFjdG9yeSAoJ0FkbWluJywgWyckaHR0cCcsZnVuY3Rpb24gKCRodHRwKSB7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICAgICAgICAgICAgZG9taW5pb3M6ZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9hZG1pbi9kb21pbmlvcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcblxuICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnJvcixudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgd2Vic2l0ZXM6ZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9hZG1pbi93ZWJzaXRlcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcblxuICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnJvcixudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgYXBwczpmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL2FkbWluL2FwcHMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyb3IsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgICAgZ2V0T25lOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFjaWVudGUvJytpZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBkZWxldGVBcHA6ZnVuY3Rpb24gKG5hbWUsY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdERUxFVEUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS9hZG1pbi9hcHAvJytuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBkZWxldGVXZWJzaXRlOmZ1bmN0aW9uIChuYW1lLGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgJGh0dHAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnREVMRVRFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvYWRtaW4vd2Vic2l0ZS8nK25hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGRlbGV0ZURvbWFpbjpmdW5jdGlvbiAobmFtZSxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ0RFTEVURScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL2FkbWluL2RvbWFpbi8nK25hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGRlbGV0ZVNlY2Npb246ZnVuY3Rpb24gKG1vbmdvLCBpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdERUxFVEUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS9wYWdpbmEvJyttb25nbysnL3NlY2Npb24vJytpZFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnT2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCdIdWJvIHVuIGVycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH07XG4gIH1dKTtcblxufSkoKTtcbiIsIihmdW5jdGlvbiAoKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5wYWdpbmEuYmFubmVycycsW10pXG4gICAgLmNvbnRyb2xsZXIoJ0Jhbm5lcnNDdHJsJyxbJyRzY29wZScsJ1BhZ2luYScsJyRyb3V0ZVBhcmFtcycsJyRodHRwJyxmdW5jdGlvbigkc2NvcGUsUGFnaW5hLCRyb3V0ZVBhcmFtcywkaHR0cCl7XG5cbiAgICAgIHZhciBwYWdpbmFfaWQgPSAkcm91dGVQYXJhbXMucGFnaW5hX2lkO1xuXG4gICAgICAkc2NvcGUudXBsb2FkQmFubmVyID0gZnVuY3Rpb24oZmlsZXMpIHtcbiAgICAgICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICAgICAgZmQuYXBwZW5kKFwiZmlsZVwiLCBmaWxlc1swXSk7XG5cbiAgICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvcGFnaW5hL2Jhbm5lcnMvcGJhbm5lci8nK3BhZ2luYV9pZCwgZmQsIHtcbiAgICAgICAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5XG4gICAgICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ1NlIHN1YmnDsyBjb3JyZWN0YW1lbnRlIScpO1xuICAgICAgICAgICAgICBnZXRCYW5uZXJzKCk7XG4gICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3dhcm5pbmcnLCdFcnJvciBhbCBzdWJpciBsYSBpbWFnZW4nKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLmRlbGV0ZUJhbm5lciA9IGZ1bmN0aW9uIChiYW5uZXJfaWQpIHtcbiAgICAgICAgICB2YXIgc2kgPSBjb25maXJtKCdSZWFsbWVudGUgZGVzZWFzIGVsaW1pbmFyIGVzdGUgYmFubmVyPycpO1xuICAgICAgICAgIGlmIChzaSkge1xuICAgICAgICAgICAgUGFnaW5hLmRlbGV0ZUJhbm5lcihiYW5uZXJfaWQsZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCd3YXJuaW5nJyxlcnIpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoXCJzdWNjZXNzXCIsZGF0YSk7XG4gICAgICAgICAgICAgICAgZ2V0QmFubmVycygpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLnVwZGF0ZUJhbm5lciA9IGZ1bmN0aW9uIChiYW5uZXJfaWQpIHtcbiAgICAgICAgICAgIHZhciB0ZXh0byA9IHByb21wdChcIkluZ3Jlc2EgdW4gdGV4dG8gcGFyYSBlbCBiYW5uZXJcIik7XG4gICAgICAgICAgICB2YXIgdXJsICAgPSBwcm9tcHQoXCJJbmdyZXNhIHVuYSBVUkwgcGFyYSBlbCBiYW5uZXJcIik7XG4gICAgICAgICAgICB2YXIgZGF0b3MgPSB7XG4gICAgICAgICAgICAgIGJhbm5lcl90ZXh0bzp0ZXh0byxcbiAgICAgICAgICAgICAgYmFubmVyX3VybDp1cmwsXG4gICAgICAgICAgICAgIGJhbm5lcl9wYWdpbmFfaWQ6cGFnaW5hX2lkXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBQYWdpbmEudXBkYXRlQmFubmVyKGRhdG9zLGJhbm5lcl9pZCxmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3dhcm5pbmcnLGVycik7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeShcInN1Y2Nlc3NcIixkYXRhKTtcbiAgICAgICAgICAgICAgICBnZXRCYW5uZXJzKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH07XG5cblxuICAgICAgICBmdW5jdGlvbiBnZXRCYW5uZXJzKCkge1xuICAgICAgICAgIFBhZ2luYS5nZXRCYW5uZXJzKHBhZ2luYV9pZCxmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeShcImVycm9yXCIsZXJyKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICRzY29wZS5iYW5uZXJzID0gZGF0YTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBnZXRCYW5uZXJzKCk7XG5cblxuICAgIH1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAucGFnaW5hLmN1ZW50YXMnLFtdKVxuICAgIC5jb250cm9sbGVyKCdQYWdpbmFDdWVudGFzQ3RybCcsWyckc2NvcGUnLCckbW9kYWwnLCdQYWdpbmEnLCckcm91dGVQYXJhbXMnLCckaHR0cCcsZnVuY3Rpb24oJHNjb3BlLCRtb2RhbCxQYWdpbmEsJHJvdXRlUGFyYW1zLCRodHRwKXtcblxuICAgICAgdmFyIHBhZ2luYV9pZCA9ICRyb3V0ZVBhcmFtcy5wYWdpbmFfaWQ7XG4gICAgICAkc2NvcGUuRm9ybUFkZEN1ZW50YSA9IHt9O1xuXG4gICAgICBmdW5jdGlvbiBnZXRDdWVudGFzICgpIHtcbiAgICAgICAgUGFnaW5hLmdldEN1ZW50YXMocGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7Y29uc29sZS5sb2coZXJyKTt9XG4gICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5jdWVudGFzID0gZGF0YTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBnZXRDdWVudGFzRGlzcG9uaWJsZXMoKXtcbiAgICAgICAgUGFnaW5hLmdldE9uZShwYWdpbmFfaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKFwiRXJyb3IgYWwgY2FyZ2FyIGxhIHDDoWdpbmFcIik7fVxuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgJHNjb3BlLmRpc3BvbmlibGVzID0gZGF0YS5wYWdpbmFfY3VlbnRhc19kaXNwb25pYmxlcztcbiAgICAgICAgICAgICAgJHNjb3BlLnVzYWRhcyA9IGRhdGEucGFnaW5hX2N1ZW50YXNfdXNhZGFzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgJHNjb3BlLmFkZEN1ZW50YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBhZ2luYV9pZCA9ICRyb3V0ZVBhcmFtcy5wYWdpbmFfaWQ7XG4gICAgICAgIFBhZ2luYS5hZGRDdWVudGEoJHNjb3BlLkZvcm1BZGRDdWVudGEscGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdBbGdvIHNhbGnDsyBtYWwnKTtcbiAgICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICBnZXRDdWVudGFzKCk7XG4gICAgICAgICAgICBnZXRDdWVudGFzRGlzcG9uaWJsZXMoKTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdDdWVudGEgYWdyZWdhZGEgZXhpdG9zYW1lbnRlJyk7XG4gICAgICAgICAgICAkc2NvcGUuRm9ybUFkZEN1ZW50YSA9IHt9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgIH07XG5cbiAgICAgIGdldEN1ZW50YXMoKTtcbiAgICAgIGdldEN1ZW50YXNEaXNwb25pYmxlcygpO1xuXG4gICAgfV0pO1xufSkoKTtcbiIsIihmdW5jdGlvbiAoKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5wYWdpbmEuZXN0aWxvJyxbXSlcbiAgICAuY29udHJvbGxlcignRXN0aWxvQ3RybCcsWyckc2NvcGUnLCckcm91dGVQYXJhbXMnLCdQYWdpbmEnLCckaHR0cCcsJyRyb3V0ZScsZnVuY3Rpb24oJHNjb3BlLCRyb3V0ZVBhcmFtcyxQYWdpbmEsJGh0dHAsJHJvdXRlKXtcbiAgICAgICAgdmFyIHBhZ2luYV9pZCA9ICRyb3V0ZVBhcmFtcy5wYWdpbmFfaWQ7XG4gICAgICAgICRzY29wZS5lc3RpbG8gPSB7fTtcblxuICAgICAgICBmdW5jdGlvbiBnZXRFc3RpbG8gKCkge1xuICAgICAgICAgIFBhZ2luYS5nZXRPbmUocGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2UnLCdFcnJvciBhbCBjYXJnYXIgbGEgcMOhZ2luYScpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmVzdGlsbyA9IGRhdGE7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZ2V0RXN0aWxvKCk7XG5cbiAgICAgICAgICAkc2NvcGUudXBJbWcgPSBmdW5jdGlvbihmaWxlcywgdGlwbykge1xuICAgICAgICAgICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgICAgICAgZmQuYXBwZW5kKFwiZmlsZVwiLCBmaWxlc1swXSk7XG4gICAgICAgICAgICAgICAgZmQuYXBwZW5kKFwidGlwb1wiLHRpcG8pO1xuICAgICAgICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvcGFnaW5hLycrJHJvdXRlUGFyYW1zLnBhZ2luYV9pZCArJy91cGxvYWQvJyt0aXBvLCBmZCwge1xuICAgICAgICAgICAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHlcbiAgICAgICAgICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdMaXN0bycpO1xuICAgICAgICAgICAgICAgICAgZ2V0RXN0aWxvKCk7XG4gICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJywnQWxnbyBzYWxpw7MgbWFsJyk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICRzY29wZS52aXN0YVByZXZpYSA9IGZ1bmN0aW9uKGRvbWluaW8sc2l6ZSkge1xuICAgICAgICAgICAgICBkb21pbmlvID0gJ2h0dHA6Ly8nK2RvbWluaW87XG4gICAgICAgICAgICAgIHZhciBteVdpbmRvdztcbiAgICAgICAgICAgICAgICBpZiAoc2l6ZT09J3Bob25lJykge1xuICAgICAgICAgICAgICAgICAgbXlXaW5kb3cgPSB3aW5kb3cub3Blbihkb21pbmlvLCBcIk1zZ1dpbmRvd1wiLCBcIndpZHRoPTQ4MCwgaGVpZ2h0PTcwMFwiKTtcbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgIG15V2luZG93ID0gd2luZG93Lm9wZW4oZG9taW5pbywgXCJNc2dXaW5kb3dcIiwgXCJ3aWR0aD0xMjAwLCBoZWlnaHQ9ODAwXCIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfTtcblxuICAgIH1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAucGFnaW5hLmdhbGVyaWEnLFtdKVxuICAgIC5jb250cm9sbGVyKCdHYWxlcmlhc0N0cmwnLFsnJHNjb3BlJywnJHdpbmRvdycsJ1BhZ2luYScsJyRyb3V0ZVBhcmFtcycsJyRyb3V0ZScsJyRodHRwJyxmdW5jdGlvbigkc2NvcGUsJHdpbmRvdyxQYWdpbmEsJHJvdXRlUGFyYW1zLCRyb3V0ZSwkaHR0cCl7XG5cbiAgICAgIHZhciBwYWdpbmFfaWQgPSAkcm91dGVQYXJhbXMucGFnaW5hX2lkO1xuICAgICAgdmFyIGdhbGVyaWFfaWQgPSAkcm91dGVQYXJhbXMuZ2FsZXJpYV9pZDtcbiAgICAgICRzY29wZS5wYWdpbmFfaWQgPSBwYWdpbmFfaWQ7XG4gICAgICAkc2NvcGUuRm9ybUFkZEdhbGVyaWEgPSB7fTtcbiAgICAgICRzY29wZS5Gb3JtRWRpdEdhbGVyaWEgPSB7fTtcblxuICAgICAgZnVuY3Rpb24gZ2V0R2FsZXJpYXMoKSB7XG4gICAgICAgIFBhZ2luYS5nZXRHYWxlcmlhcyhwYWdpbmFfaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtjb25zb2xlLmxvZyhlcnIpO31cbiAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgJHNjb3BlLmdhbGVyaWFzID0gZGF0YTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG5cblxuICAgICAgZnVuY3Rpb24gZ2V0R2FsZXJpYSgpIHtcbiAgICAgICAgUGFnaW5hLmdldEdhbGVyaWEocGFnaW5hX2lkLGdhbGVyaWFfaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtjb25zb2xlLmxvZyhlcnIpO31cbiAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgJHNjb3BlLkZvcm1FZGl0R2FsZXJpYSA9IGRhdGE7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGdldEltYWdlbmVzKCkge1xuICAgICAgICBQYWdpbmEuZ2V0SW1hZ2VuZXMocGFnaW5hX2lkLGdhbGVyaWFfaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtjb25zb2xlLmxvZyhlcnIpO31cbiAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgJHNjb3BlLmltYWdlbmVzID0gZGF0YTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAkc2NvcGUuYWRkR2FsZXJpYSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBhZ2luYV9pZCA9ICRyb3V0ZVBhcmFtcy5wYWdpbmFfaWQ7XG4gICAgICAgIFBhZ2luYS5hZGRHYWxlcmlhKCRzY29wZS5Gb3JtQWRkR2FsZXJpYSxwYWdpbmFfaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ0FsZ28gc2FsacOzIG1hbCcpO1xuICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgIGdldEdhbGVyaWFzKCk7XG4gICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdzdWNjZXNzJywnR2FsZXLDrWEgYWdyZWdhZGEgZXhpdG9zYW1lbnRlJyk7XG4gICAgICAgICAgICAkc2NvcGUuRm9ybUFkZEdhbGVyaWEgPSB7fTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgJHNjb3BlLmVkaXRHYWxlcmlhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcGFnaW5hX2lkID0gJHJvdXRlUGFyYW1zLnBhZ2luYV9pZDtcbiAgICAgICAgUGFnaW5hLnVwZGF0ZUdhbGVyaWEocGFnaW5hX2lkLGdhbGVyaWFfaWQsJHNjb3BlLkZvcm1FZGl0R2FsZXJpYSxmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJywnQWxnbyBzYWxpw7MgbWFsJyk7XG4gICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgZ2V0R2FsZXJpYXMoKTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdHYWxlcsOtYSBlZGl0YWRhIGV4aXRvc2FtZW50ZScpO1xuICAgICAgICAgICAgJHNjb3BlLkZvcm1BZGRHYWxlcmlhID0ge307XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cblxuICAgICAgJHNjb3BlLkZvcm1HYWxlcmlhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCcjdmlzdGExJykuaGlkZSgnZXhwbG9kZScpO1xuICAgICAgICAkKCcjdmlzdGEyJykuc2hvdygpO1xuICAgICAgfTtcbiAgICAgICRzY29wZS5DYW5jZWxhckFkZEdhbGVyaWEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoJyN2aXN0YTEnKS5zaG93KCdleHBsb2RlJyk7XG4gICAgICAgICQoJyN2aXN0YTInKS5oaWRlKCk7XG4gICAgICB9O1xuXG5cbiAgICAgICRzY29wZS5yZWRpcmVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgYWxlcnQoJ21zZycpO1xuICAgICAgICAkd2luZG93LmxvY2F0aW9uLmhyZWY9IFwiIy9kYXNoYm9hcmRcIjtcbiAgICAgICAgdmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwuJGNsb3NlKCk7XG5cbiAgICAgIH07XG5cbiAgICAgIGlmIChnYWxlcmlhX2lkKSB7XG4gICAgICAgIGdldEdhbGVyaWEoKTtcbiAgICAgICAgZ2V0SW1hZ2VuZXMoKTtcbiAgICAgIH0gZWxzZXtcbiAgICAgICAgZ2V0R2FsZXJpYXMoKTtcbiAgICAgIH1cblxuICAgICAgJHNjb3BlLnVwbG9hZEltYWdlID0gZnVuY3Rpb24oZmlsZXMpIHtcbiAgICAgICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgICBmZC5hcHBlbmQoXCJmaWxlXCIsIGZpbGVzWzBdKTtcbiAgICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvcGFnaW5hLycrIHBhZ2luYV9pZCArJy9nYWxlcmlhLycrZ2FsZXJpYV9pZCsnL3VwbG9hZCcsIGZkLCB7XG4gICAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eVxuICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdTZSBzdWJpw7MgY29ycmVjdGFtZW50ZSEnKTtcbiAgICAgICAgICAgICAgZ2V0SW1hZ2VuZXMoKTtcblxuICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAkcm91dGUucmVsb2FkKCk7XG4gICAgICAgICAgICAgIGdldEltYWdlbmVzKCk7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3dhcm5pbmcnLCdFcnJvciBhbCBzdWJpciBsYSBpbWFnZW4nKTtcblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuZWRpdGFySW1nID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgICAgdmFyIHRpdHVsbyA9IHByb21wdCgnSW5ncmVzYSBlbCB0w610dWxvIGRlIGxhIGltw6FnZW4nKTtcbiAgICAgICAgICB2YXIgZGVzY3JpcGNpb24gPSBwcm9tcHQoJ0luZ3Jlc2EgbGEgZGVzY3JpcGNpw7NuJyk7XG5cbiAgICAgICAgICB2YXIgZGF0b3MgPSB7XG4gICAgICAgICAgICBpbWFnZW5fdGl0dWxvOnRpdHVsbyxcbiAgICAgICAgICAgIGltYWdlbl9kZXNjcmlwY2lvbjpkZXNjcmlwY2lvblxuICAgICAgICAgIH07XG5cbiAgICAgICAgICBQYWdpbmEudXBkYXRlSW1hZ2VuKGRhdG9zLGlkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJyxcIk9jdXJyacOzIHVuIGVycm9yXCIpO1xuICAgICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdzdWNjZXNzJyxcIkltw6FnZW4gZWRpdGFkYVwiKTtcbiAgICAgICAgICAgICAgJHJvdXRlLnJlbG9hZCgpO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLmRlbGV0ZUltZyA9IGZ1bmN0aW9uIChpZCkge1xuXG4gICAgICAgICAgdmFyIHNpID0gY29uZmlybShcIsK/UmVhbG1lbnRlIGRlc2VhcyBlbGltaW5hciBsYSBpbcOhZ2VuP1wiKTtcbiAgICAgICAgICBpZiAoc2kpIHtcbiAgICAgICAgICAgIFBhZ2luYS5kZWxldGVJbWcoaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJyxcIk9jdXJyacOzIHVuIGVycm9yXCIpO1xuICAgICAgICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsXCJJbcOhZ2VuIGVsaW1pbmFkYVwiKTtcbiAgICAgICAgICAgICAgICAkcm91dGUucmVsb2FkKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIH1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAucGFnaW5hLm1lbnNhamVzJyxbXSlcbiAgICAuY29udHJvbGxlcignUGFnaW5hTWVuc2FqZXNDdHJsJyxbJyRzY29wZScsJ1BhZ2luYScsJyRyb3V0ZVBhcmFtcycsZnVuY3Rpb24oJHNjb3BlLFBhZ2luYSwkcm91dGVQYXJhbXMpe1xuXG4gICAgICB2YXIgcGFnaW5hX2lkID0gJHJvdXRlUGFyYW1zLnBhZ2luYV9pZDtcbiAgICAgICRzY29wZS5wYWdpbmFfaWQgPSBwYWdpbmFfaWQ7XG5cbiAgICAgIGZ1bmN0aW9uIGdldE1lbnNhamVzKCkge1xuICAgICAgICBQYWdpbmEuZ2V0TWVuc2FqZXMocGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7Y29uc29sZS5sb2coZXJyKTt9XG4gICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5tZW5zYWplcyA9IGRhdGE7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgZnVuY3Rpb24gZ2V0Tm90aWZpY2FjaW9uZXNNZW5zYWplc1BhZ2luYSgpe1xuICAgICAgICBQYWdpbmEuZ2V0TWVuc2FqZXNBbGwoZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJywnTm8gc2UgcHVkaWVyb24gY2FyZ2FyIHR1cyBub3RpZmljYWNpb25lcycpO1xuICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZmljYWNpb25lc01lbnNhamVzID0gZGF0YTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZmljYWNpb25lc01lbnNhamVzVG90YWwgPSAkc2NvcGUubm90aWZpY2FjaW9uZXNNZW5zYWplcy5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGdldE1lbnNhamVzU3RhdHMoKSB7XG4gICAgICAgIFBhZ2luYS5nZXRNZW5zYWplc1N0YXRzKHBhZ2luYV9pZCxmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKGVycik7fVxuICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAkc2NvcGUuc3RhdHMgPSBkYXRhO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBnZXRNZW5zYWplICgpIHtcbiAgICAgICAgUGFnaW5hLmdldE1lbnNhamUoJHJvdXRlUGFyYW1zLnBhZ2luYV9pZCwkcm91dGVQYXJhbXMubWVuc2FqZV9pZCxmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKGVycik7fVxuICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAkc2NvcGUuc2luZ2xlID0gMTtcbiAgICAgICAgICAgICRzY29wZS5tZW5zYWplID0gZGF0YTtcbiAgICAgICAgICAgIGdldE5vdGlmaWNhY2lvbmVzTWVuc2FqZXNQYWdpbmEoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG5cblxuICAgICAgaWYgKCRyb3V0ZVBhcmFtcy5tZW5zYWplX2lkKSB7XG4gICAgICAgIGdldE1lbnNhamUoKTtcbiAgICAgIH1lbHNle1xuICAgICAgICBnZXRNZW5zYWplcygpO1xuICAgICAgICBnZXRNZW5zYWplc1N0YXRzKCk7XG4gICAgICB9XG5cblxuICAgIH1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAucGFnaW5hJywgW1xuICAgICdhcHAucGFnaW5hLnNlcnZpY2UnLFxuICAgICdhcHAucGFnaW5hLmJhbm5lcnMnLFxuICAgICdhcHAucGFnaW5hLmdhbGVyaWEnLFxuICAgICdhcHAucGFnaW5hLmVzdGlsbycsXG4gICAgJ2FwcC5wYWdpbmEucHVibGljYWNpb24nLFxuICAgICdhcHAucGFnaW5hLm1lbnNhamVzJ1xuICBdKVxuICAgIC5jb250cm9sbGVyKCdQYWdpbmFzQ3RybCcsZnVuY3Rpb24oJHNjb3BlLCRtb2RhbCwkbG9nLFBhZ2luYSl7XG5cbiAgICAgIFBhZ2luYS5hbGwoZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJywnT2N1cnJpw7MgdW4gZXJyb3IgYWwgY2FyZ2FyIGxhcyBww6FnaW5hcycpO1xuICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgJHNjb3BlLnBhZ2luYXMgPSBkYXRhO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICB9KS5jb250cm9sbGVyKCdQYWdpbmFDdHJsJyxbJyRzY29wZScsJyRtb2RhbCcsJyR3aW5kb3cnLCdQYWdpbmEnLCckcm91dGVQYXJhbXMnLCckaHR0cCcsZnVuY3Rpb24oJHNjb3BlLCRtb2RhbCwkd2luZG93LFBhZ2luYSwkcm91dGVQYXJhbXMsJGh0dHApe1xuXG4gICAgdmFyIHBhZ2luYV9pZCA9ICRyb3V0ZVBhcmFtcy5wYWdpbmFfaWQ7XG4gICAgJHNjb3BlLmhveSA9IERhdGUoKTtcbiAgICAkc2NvcGUucGFnaW5hID0ge307XG4gICAgJHNjb3BlLmZhY2Vib29rID0ge307XG4gICAgJHNjb3BlLkZvcm1BZGRQYWdpbmEgPSB7fTtcblxuICAgIC8vIFRPRE8gdXNhciBsYSBmdW5jacOzbiBkZSBsb2Rhc2hcbiAgICB2YXIgbm9ybWFsaXplID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZnJvbSA9IFwiw4PDgMOBw4TDgsOIw4nDi8OKw4zDjcOPw47DksOTw5bDlMOZw5rDnMObw6PDoMOhw6TDosOow6nDq8Oqw6zDrcOvw67DssOzw7bDtMO5w7rDvMO7w5HDscOHw6dcIixcbiAgICAgICAgICAgIHRvICAgPSBcIkFBQUFBRUVFRUlJSUlPT09PVVVVVWFhYWFhZWVlZWlpaWlvb29vdXV1dW5uY2NcIixcbiAgICAgICAgICAgIG1hcHBpbmcgPSB7fTtcblxuICAgICAgICBmb3IodmFyIGkgPSAwLCBqID0gZnJvbS5sZW5ndGg7IGkgPCBqOyBpKysgKVxuICAgICAgICAgICAgbWFwcGluZ1sgZnJvbS5jaGFyQXQoIGkgKSBdID0gdG8uY2hhckF0KCBpICk7XG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCBzdHIgKSB7XG4gICAgICAgICAgICB2YXIgcmV0ID0gW107XG4gICAgICAgICAgICBmb3IoIHZhciBpID0gMCwgaiA9IHN0ci5sZW5ndGg7IGkgPCBqOyBpKysgKSB7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSBzdHIuY2hhckF0KCBpICk7XG4gICAgICAgICAgICAgICAgaWYoIG1hcHBpbmcuaGFzT3duUHJvcGVydHkoIHN0ci5jaGFyQXQoIGkgKSApIClcbiAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goIG1hcHBpbmdbIGMgXSApO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goIGMgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXQuam9pbiggJycgKS5yZXBsYWNlKCAvW14tQS1aYS16MC05XSsvZywgJy0nICkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfTtcblxuICAgICAgfSkoKTtcblxuICAgICRzY29wZS5zdWJkb21pbmlvID0gZnVuY3Rpb24gIChub21icmUpIHtcbiAgICAgICRzY29wZS5Gb3JtQWRkUGFnaW5hLnBhZ2luYV9zdWJkb21pbmlvID0gbm9ybWFsaXplKG5vbWJyZSkrXCIuXCIrJHNjb3BlLm1haW4uZG9taW5pbztcbiAgICB9O1xuXG5cbiAgICBQYWdpbmEuZ2V0UGFxdWV0ZXMoZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKGVycik7fVxuICAgICAgZWxzZXtcbiAgICAgICAgJHNjb3BlLnRpcG9zID0gZGF0YTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgICRzY29wZS5idXNjYXJGQiA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgdmFyIGZhY2Vib29rSUQgPSAkKCcjZmFjZWJvb2tJRCcpLnZhbCgpO1xuICAgICAgdmFyIHBhcnRpciA9IGZhY2Vib29rSUQuc3BsaXQoICdmYWNlYm9vay5jb20vJyApO1xuICAgICAgaWYgKHBhcnRpclsxXSkge1xuICAgICAgICBwYXJ0aXIgPSBwYXJ0aXJbMV07XG4gICAgICAgIHBhcnRpciA9IHBhcnRpci5zcGxpdCgnPycpO1xuICAgICAgICBwYXJ0aXIgPSBwYXJ0aXJbMF07XG4gICAgICAgIHBhcnRpciA9IHBhcnRpci5zcGxpdCgnLycpO1xuICAgICAgICBwYXJ0aXIgPSBwYXJ0aXJbMF07XG4gICAgICAgICRodHRwLmdldChcImh0dHA6Ly9ncmFwaC5mYWNlYm9vay5jb20vXCIrcGFydGlyKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgJHNjb3BlLmZhY2Vib29rID0gZGF0YTtcbiAgICAgICAgICAkc2NvcGUuRm9ybUFkZFBhZ2luYS5wYWdpbmFfbG9nbyA9IFwiaHR0cDovL2dyYXBoLmZhY2Vib29rLmNvbS9cIitmYWNlYm9va0lEK1wiL3BpY3R1cmVcIjtcbiAgICAgICAgICAkc2NvcGUuRm9ybUFkZFBhZ2luYS5wYWdpbmFfcG9ydGFkYSA9IGRhdGEuY292ZXIuc291cmNlO1xuICAgICAgICAgICRzY29wZS5Gb3JtQWRkUGFnaW5hLnBhZ2luYV9ub21icmUgPSBkYXRhLm5hbWU7XG4gICAgICAgICAgJHNjb3BlLkZvcm1BZGRQYWdpbmEucGFnaW5hX2Rlc2NyaXBjaW9uID0gZGF0YS5hYm91dDtcbiAgICAgICAgICAkc2NvcGUuRm9ybUFkZFBhZ2luYS5wYWdpbmFfdGVsZWZvbm8gPSBkYXRhLnBob25lO1xuICAgICAgICAgICRzY29wZS5Gb3JtQWRkUGFnaW5hLnBhZ2luYV9mYWNlYm9vayA9ICQoJyNmYWNlYm9va0lEJykudmFsKCk7XG4gICAgICAgICAgLy8gJHNjb3BlLkZvcm1BZGRQYWdpbmEucGFnaW5hX3N1YmRvbWluaW8gPSBkYXRhLm5hbWUrXCIuXCIrJHNjb3BlLm1haW4uZG9taW5pbztcbiAgICAgICAgICAkc2NvcGUuc3ViZG9taW5pbyhkYXRhLm5hbWUpO1xuICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJlcnJvclwiKTtcbiAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdMYSBVUkwgaW5ncmVzYWRhIG5vIGVzIHbDoWxpZGEnKTtcbiAgICAgICAgfSk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJywnTGEgVVJMIGluZ3Jlc2FkYSBubyBlcyB2w6FsaWRhJyk7XG4gICAgICB9XG5cblxuXG5cbiAgICB9O1xuXG4gICAgICBpZiAocGFnaW5hX2lkKSB7XG4gICAgICAgIFBhZ2luYS5nZXRPbmUocGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7Y29uc29sZS5sb2coXCJFcnJvciBhbCBjYXJnYXIgbGEgcMOhZ2luYVwiKTt9XG4gICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5Gb3JtRWRpdFBhZ2luYSA9IGRhdGE7XG4gICAgICAgICAgICBpZiAoZGF0YS5wYWdpbmFfcG9ydGFkYSkge1xuICAgICAgICAgICAgICBpZiAoZGF0YS5wYWdpbmFfcG9ydGFkYS5sZW5ndGg8NTApIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuRm9ybUVkaXRQYWdpbmEucGFnaW5hX3BvcnRhZGEgPSAkc2NvcGUubWFpbi5iYXNlK2RhdGEucGFnaW5hX3BvcnRhZGE7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkYXRhLnBhZ2luYV9mYWNlYm9vaykge1xuICAgICAgICAgICAgICBQYWdpbmEuZ2V0RmFjZWJvb2soZGF0YS5wYWdpbmFfZmFjZWJvb2ssZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKGVycik7fVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAkc2NvcGUuZmFjZWJvb2sgPSBkYXRhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICB9XG5cblxuICAgICAgICAkc2NvcGUuZWRpdFBhZ2luYSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBkYXRvcztcbiAgICAgICAgICBkYXRvcyA9ICRzY29wZS5Gb3JtRWRpdFBhZ2luYTtcbiAgICAgICAgICBQYWdpbmEudXBkYXRlKHBhZ2luYV9pZCxkYXRvcyxmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7YWxlcnQoZXJyKTt9IGVsc2V7XG4gICAgICAgICAgICAgICQoJyNyZXN1bHQnKS5odG1sKCc8ZGl2IGNsYXNzPVwiYWxlcnQgYWxlcnQtc3VjY2Vzc1wiPkVkaXRhZG8gY29ycmVjdGFtZW50ZTwvZGl2PicpLmRlbGF5KDMwMDApLmhpZGUoJ2V4cGxvZGUnKTtcbiAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ0VkaXRhZG8gY29ycmVjdGFtZW50ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgICRzY29wZS5jcmVhclBhZ2luYSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBkYXRvcyA9ICRzY29wZS5Gb3JtQWRkUGFnaW5hO1xuICAgICAgICAgIGlmIChkYXRvcy5wYWdpbmFfZG9taW5pbyYmZGF0b3MucGFnaW5hX25vbWJyZSkge1xuICAgICAgICAgIFBhZ2luYS5jcmVhdGUoZGF0b3MsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKGFsZXJ0KTt9IGVsc2V7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdQw6FnaW5hIGNyZWFkYSBjb3JyZWN0YW1lbnRlJyk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuXG4gICAgICAgICAgICAgICAgJHdpbmRvdy5sb2NhdGlvbi5ocmVmPSBcIiMvcGFnaW5hL1wiK2RhdGE7XG5cblxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICB9O1xuXG5cbiAgICAgICAgJHNjb3BlLnVwbG9hZEZpbGUgPSBmdW5jdGlvbihmaWxlcykge1xuICAgICAgICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgICAgIGZkLmFwcGVuZChcImZpbGVcIiwgZmlsZXNbMF0pO1xuXG4gICAgICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvdXBsb2FkLycrJHJvdXRlUGFyYW1zLnBhZ2luYV9pZCwgZmQsIHtcbiAgICAgICAgICAgICAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5XG4gICAgICAgICAgICAgIH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdUb2RvIHNhbGnDsyBiaWVuJyk7XG4gICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdUb2RvIHNhbGnDsyBtYWwnKTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICB9O1xuXG5cbiAgICAgICAgJHNjb3BlLnVwbG9hZExvZ28gPSBmdW5jdGlvbihmaWxlcykge1xuICAgICAgICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgICAgIGZkLmFwcGVuZChcImZpbGVcIiwgZmlsZXNbMF0pO1xuXG5cbiAgICAgICAgICAgICAgJGh0dHAucG9zdCgnL2FwaS91cGxvYWQnLCBmZCwge1xuICAgICAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHlcbiAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ1RvZG8gc2FsacOzIGJpZW4nKTtcbiAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ1RvZG8gc2FsacOzIG1hbCcpO1xuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgIH07XG5cblxuICB9XSkuY29udHJvbGxlcignU2VndWlkb3Jlc0N0cmwnLFsnJHNjb3BlJywnUGFnaW5hJywnJHJvdXRlUGFyYW1zJyxmdW5jdGlvbigkc2NvcGUsUGFnaW5hLCRyb3V0ZVBhcmFtcyl7XG5cbiAgICB2YXIgcGFnaW5hX2lkID0gJHJvdXRlUGFyYW1zLnBhZ2luYV9pZDtcbiAgICBQYWdpbmEuc2VndWlkb3JlcyhwYWdpbmFfaWQsZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ0Vycm9yIGFsIHJlY3VwZXJhciBsb3MgcmVnaXN0cm9zJyk7XG4gICAgICB9IGVsc2V7XG4gICAgICAgICRzY29wZS5zZWd1aWRvcmVzID0gZGF0YTtcbiAgICAgIH1cbiAgICB9KTtcblxuICB9XSk7XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG5cblxuICBhbmd1bGFyXG4gICAgICAubW9kdWxlKCdhcHAucHVibGljYWNpb24uc2VydmljZScsICBbJ25nUm91dGUnXSlcblxuICAgICAgICAgIC5mYWN0b3J5ICgnUHVibGljYWNpb24nLCBbJyRodHRwJyxmdW5jdGlvbiAoJGh0dHApIHtcblxuICAgICAgICAgICAgICByZXR1cm4ge1xuXG5cbiAgICAgICAgICAgICAgICAgIGdldFB1YmxpY2FjaW9uZXM6ZnVuY3Rpb24gKGlkLGNhbGxiYWNrKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK2lkKycvcHVibGljYWNpb25lcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0Vycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZ2V0UHVibGljYWNpb246ZnVuY3Rpb24gKHBhZ2luYV9pZCxpZCxjYWxsYmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wYWdpbmEvJytwYWdpbmFfaWQrJy9wdWJsaWNhY2lvbi8nK2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBhZGRQdWJsaWNhY2lvbjpmdW5jdGlvbiAoZGF0b3MsIHBhZ2luYV9pZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS9wYWdpbmEvJytwYWdpbmFfaWQgKycvcHVibGljYWNpb25lcydcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsJ09rJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0h1Ym8gdW4gZXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBkZWxldGVQdWJsaWNhY2lvbjpmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9wdWJsaWNhY2lvbmVzLycgKyBpZCk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgdXBkYXRlUHVibGljYWNpb246ZnVuY3Rpb24gKHBhZ2luYV9pZCwgcHVibGljYWNpb25faWQsIGRhdG9zLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICAgIDogIGRhdG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnUFVUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hLycrIHBhZ2luYV9pZCArICcvcHVibGljYWNpb24vJyArIHB1YmxpY2FjaW9uX2lkXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0h1Ym8gdW4gZXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB0b2dnbGVQdWJsaWNhY2lvbjpmdW5jdGlvbiAocHVibGljYWNpb25faWQsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS9wdWJsaWNhY2lvbi8nK3B1YmxpY2FjaW9uX2lkKycvdG9nZ2xlJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0Vycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgfTtcbiAgfV0pO1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uICgpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLnBhZ2luYS5wdWJsaWNhY2lvbicsWydhcHAucHVibGljYWNpb24uc2VydmljZSddKVxuICAgIC5jb250cm9sbGVyKCdQdWJsaWNhY2lvbmVzQ3RybCcsWyckc2NvcGUnLCdQdWJsaWNhY2lvbicsJyRyb3V0ZVBhcmFtcycsJyRodHRwJywnJHJvdXRlJywnJHdpbmRvdycsZnVuY3Rpb24oJHNjb3BlLFB1YmxpY2FjaW9uLCRyb3V0ZVBhcmFtcywkaHR0cCwkcm91dGUsJHdpbmRvdyl7XG5cbiAgICAgIHZhciBwYWdpbmFfaWQgPSAkcm91dGVQYXJhbXMucGFnaW5hX2lkO1xuICAgICAgJHNjb3BlLkZvcm1BZGRQdWJsaWNhY2lvbiA9IHt9O1xuICAgICAgJHNjb3BlLkZvcm1FZGl0UHVibGljYWNpb24gPSB7fTtcblxuICAgICAgZnVuY3Rpb24gZ2V0UHVibGljYWNpb25lcyAoKSB7XG4gICAgICAgIFB1YmxpY2FjaW9uLmdldFB1YmxpY2FjaW9uZXMocGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7Y29uc29sZS5sb2coZXJyKTt9XG4gICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5wdWJsaWNhY2lvbmVzID0gZGF0YTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gZ2V0UHVibGljYWNpb24gKCkge1xuICAgICAgICBQdWJsaWNhY2lvbi5nZXRQdWJsaWNhY2lvbigkcm91dGVQYXJhbXMucGFnaW5hX2lkLCRyb3V0ZVBhcmFtcy5wdWJsaWNhY2lvbl9pZCxmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge2NvbnNvbGUubG9nKGVycik7fVxuICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAkc2NvcGUuRm9ybUVkaXRQdWJsaWNhY2lvbiA9IGRhdGE7XG4gICAgICAgICAgICAkKCcjbXlDb2RlJykuaHRtbCgnPGlmcmFtZSB3aWR0aD1cIjU2MFwiIGhlaWdodD1cIjMxNVwiIHNyYz1cIi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLycgKyAkc2NvcGUuRm9ybUVkaXRQdWJsaWNhY2lvbi5wdWJsaWNhY2lvbl92aWRlbyArICdcIiBmcmFtZWJvcmRlcj1cIjBcIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+Jyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgJHNjb3BlLmRlbGV0ZVB1YmxpY2FjaW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29uZmlybWFyID0gY29uZmlybSgnwr9SZWFsbWVudGUgZGVzZWFzIGVsaW1pbmFyIGVzdGEgcHVibGljYWNpw7NuPycpO1xuICAgICAgICBpZiAoY29uZmlybWFyKSB7XG4gICAgICAgICAgUHVibGljYWNpb24uZGVsZXRlUHVibGljYWNpb24oJHJvdXRlUGFyYW1zLnB1YmxpY2FjaW9uX2lkKVxuICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgJHdpbmRvdy5sb2NhdGlvbiA9ICcjL3BhZ2luYS8nICsgRm9ybUVkaXRQdWJsaWNhY2lvbi5wdWJsaWNhY2lvbl9wYWdpbmFfaWQgKyAnL3B1YmxpY2FjaW9uZXMnO1xuICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdzdWNjZXNzJyxkYXRhKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgJHNjb3BlLmFkZFB1YmxpY2FjaW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcGFnaW5hX2lkID0gJHJvdXRlUGFyYW1zLnBhZ2luYV9pZDtcbiAgICAgICAgUHVibGljYWNpb24uYWRkUHVibGljYWNpb24oJHNjb3BlLkZvcm1BZGRQdWJsaWNhY2lvbixwYWdpbmFfaWQsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ0FsZ28gc2FsacOzIG1hbCcpO1xuICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgIGdldFB1YmxpY2FjaW9uZXMoKTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdQdWJsaWNhY2nDs24gYWdyZWdhZGEgZXhpdG9zYW1lbnRlJyk7XG4gICAgICAgICAgICAkc2NvcGUuRm9ybUFkZFB1YmxpY2FjaW9uID0ge307XG4gICAgICAgICAgICAkKCcjbXlDb2RlJykuaHRtbCgnLicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUudXBJbWcgPSBmdW5jdGlvbihmaWxlcykge1xuICAgICAgICAgICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgICAgICAgZmQuYXBwZW5kKFwiZmlsZVwiLCBmaWxlc1swXSk7XG4gICAgICAgICAgICAgICAgJGh0dHAucG9zdCgnL2FwaS9wYWdpbmEvcHVibGljYWNpb24vJyskcm91dGVQYXJhbXMucHVibGljYWNpb25faWQgKycvdXBsb2FkJywgZmQsIHtcbiAgICAgICAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZCB9LFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5XG4gICAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdzdWNjZXNzJywnTGlzdG8nKTtcbiAgICAgICAgICAgICAgICAgICRyb3V0ZS5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdBbGdvIHNhbGnDsyBtYWwnKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfTtcblxuICAgICAgJHNjb3BlLnRvZ2dsZVB1YmxpY2FjaW9uID0gZnVuY3Rpb24gKHB1YmxpY2FjaW9uX2lkKSB7XG4gICAgICAgIFB1YmxpY2FjaW9uLnRvZ2dsZVB1YmxpY2FjaW9uKHB1YmxpY2FjaW9uX2lkLGZ1bmN0aW9uIChlcnIsZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ09jdXJyacOzIHVuIGVycm9yJyk7XG4gICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ8KhTGlzdG8hJyk7XG4gICAgICAgICAgICBnZXRQdWJsaWNhY2lvbmVzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgICRzY29wZS5lZGl0UHVibGljYWNpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwYWdpbmFfaWQgPSAkcm91dGVQYXJhbXMucGFnaW5hX2lkO1xuICAgICAgICBQdWJsaWNhY2lvbi51cGRhdGVQdWJsaWNhY2lvbihwYWdpbmFfaWQsJHJvdXRlUGFyYW1zLnB1YmxpY2FjaW9uX2lkLCRzY29wZS5Gb3JtRWRpdFB1YmxpY2FjaW9uLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLGVycik7XG4gICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgZ2V0UHVibGljYWNpb25lcygpO1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ1B1YmxpY2FjacOzbiBlZGl0YWRhIGV4aXRvc2FtZW50ZScpO1xuICAgICAgICAgICAgJHNjb3BlLkZvcm1BZGRQdWJsaWNhY2lvbiA9IHt9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgIH07XG4gICAgICBpZiAoJHJvdXRlUGFyYW1zLnB1YmxpY2FjaW9uX2lkKSB7XG4gICAgICAgIGdldFB1YmxpY2FjaW9uKCk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgZ2V0UHVibGljYWNpb25lcygpO1xuICAgICAgfVxuXG5cbiAgICAgIGZ1bmN0aW9uIGdldElkKHVybCkge1xuICAgICAgICAgICAgdmFyIHJlZ0V4cCA9IC9eLiooeW91dHUuYmVcXC98dlxcL3x1XFwvXFx3XFwvfGVtYmVkXFwvfHdhdGNoXFw/dj18XFwmdj0pKFteI1xcJlxcP10qKS4qLztcbiAgICAgICAgICAgIHZhciBtYXRjaCA9IHVybC5tYXRjaChyZWdFeHApO1xuXG4gICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMl0ubGVuZ3RoID09IDExKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoWzJdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2Vycm9yJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBteUlkO1xuXG4gICAgICAgICRzY29wZS5idXNjYXJWaWRlbyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgbXlVcmwgPSAkKCcjbXlVcmwnKS52YWwoKTtcbiAgICAgICAgICBteUlkID0gZ2V0SWQobXlVcmwpO1xuICAgICAgICAgICQoJyNteUNvZGUnKS5odG1sKCc8aWZyYW1lIHdpZHRoPVwiNTYwXCIgaGVpZ2h0PVwiMzE1XCIgc3JjPVwiLy93d3cueW91dHViZS5jb20vZW1iZWQvJyArIG15SWQgKyAnXCIgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPicpO1xuICAgICAgICAgICRzY29wZS5Gb3JtQWRkUHVibGljYWNpb24ucHVibGljYWNpb25fdmlkZW8gPSBteUlkO1xuICAgICAgICAgICRzY29wZS5Gb3JtRWRpdFB1YmxpY2FjaW9uLnB1YmxpY2FjaW9uX3ZpZGVvID0gbXlJZDtcbiAgICAgICAgfTtcblxuXG5cbiAgICB9XSk7XG59KSgpO1xuIiwiXG5cbmFuZ3VsYXIubW9kdWxlKCdhcHAucGFnaW5hLnNlcnZpY2UnLCAgWyduZ1JvdXRlJ10pXG5cbiAgICAgICAgLmZhY3RvcnkgKCdQYWdpbmEnLCBbJyRodHRwJyxmdW5jdGlvbiAoJGh0dHApIHtcblxuICAgICAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICAgICAgICAgIGFsbDpmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wYWdpbmEvbWlzUGFnaW5hcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuXG4gICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldFBhcXVldGVzOmZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS9wYXF1ZXRlcy8nKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcblxuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjcmVhdGU6ZnVuY3Rpb24gKGRhdG9zLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgICAgOiAgZGF0b3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS9wYWdpbmEnXG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnSHVibyB1biBlcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVwZGF0ZTpmdW5jdGlvbiAocGFnaW5hX2lkLCBkYXRvcywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICAgIDogIGRhdG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ1BVVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS9wYWdpbmEvJysgcGFnaW5hX2lkXG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnSHVibyB1biBlcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgZ2V0T25lOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICBnZXRGYWNlYm9vazpmdW5jdGlvbiAoaWQsY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnaHR0cDovL2dyYXBoLmZhY2Vib29rLmNvbS8nK2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICBleHBpcmVkOmZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS92ZW5jaWRhcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcblxuXG4gICAgICAgICAgICAgICAgZ2V0U2VjY2lvbmVzOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFnaW5hLycraWQrJy9zZWNjaW9uZXMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ0FsZ28gc2FsacOzIG1hbCwgaW50ZW50YSBkZSBudWV2byBtw6FzIHRhcmRlJyk7XG4gICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgZ2V0U2VjY2lvbjpmdW5jdGlvbiAoaWQsY2FsbGJhY2spIHtcblxuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3NlY2Npb24vJytpZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdBbGdvIHNhbGnDsyBtYWwsIGludGVudGEgZGUgbnVldm8gbcOhcyB0YXJkZScpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIGdldEN1ZW50YXM6ZnVuY3Rpb24gKGlkLGNhbGxiYWNrKSB7XG5cbiAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wYWdpbmEvJytpZCsnL2N1ZW50YXMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ0FsZ28gc2FsacOzIG1hbCwgaW50ZW50YSBkZSBudWV2byBtw6FzIHRhcmRlJyk7XG4gICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFkZEN1ZW50YTpmdW5jdGlvbiAoZGF0b3MsIHBhZ2luYV9pZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICAgIDogIGRhdG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hLycrcGFnaW5hX2lkICsnL2N1ZW50YXMnXG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCdIdWJvIHVuIGVycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0UHVibGljYWNpb25lczpmdW5jdGlvbiAoaWQsY2FsbGJhY2spIHtcblxuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK2lkKycvcHVibGljYWNpb25lcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnRXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXRQdWJsaWNhY2lvbjpmdW5jdGlvbiAocGFnaW5hX2lkLGlkLGNhbGxiYWNrKSB7XG5cbiAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wYWdpbmEvJytwYWdpbmFfaWQrJy9wdWJsaWNhY2lvbi8nK2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYWRkUHVibGljYWNpb246ZnVuY3Rpb24gKGRhdG9zLCBwYWdpbmFfaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3BhZ2luYS8nK3BhZ2luYV9pZCArJy9wdWJsaWNhY2lvbmVzJ1xuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnT2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnSHVibyB1biBlcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRlbGV0ZVB1YmxpY2FjaW9uOmZ1bmN0aW9uIChpZCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9wdWJsaWNhY2lvbmVzLycgKyBpZCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB1cGRhdGVQdWJsaWNhY2lvbjpmdW5jdGlvbiAocGFnaW5hX2lkLCBwdWJsaWNhY2lvbl9pZCwgZGF0b3MsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdQVVQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hLycrIHBhZ2luYV9pZCArICcvcHVibGljYWNpb24vJyArIHB1YmxpY2FjaW9uX2lkXG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnSHVibyB1biBlcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRvZ2dsZVB1YmxpY2FjaW9uOmZ1bmN0aW9uIChwdWJsaWNhY2lvbl9pZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS9wdWJsaWNhY2lvbi8nK3B1YmxpY2FjaW9uX2lkKycvdG9nZ2xlJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnRXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXRNZW5zYWplczpmdW5jdGlvbiAoaWQsY2FsbGJhY2spIHtcblxuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK2lkKycvbWVuc2FqZXMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0TWVuc2FqZXNBbGw6ZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cbiAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wYWdpbmEvbWVuc2FqZXMvdW5yZWFkJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKFwiRXJyb3JcIixudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldE1lbnNhamVzTGF0ZXN0OmZ1bmN0aW9uIChjYWxsYmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFnaW5hL21lbnNhamVzL2xhdGVzdCcpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXRNZW5zYWplOmZ1bmN0aW9uIChpZCwgbWVuc2FqZV9pZCwgY2FsbGJhY2spIHtcblxuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK2lkKycvbWVuc2FqZS8nK21lbnNhamVfaWQpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXRNZW5zYWplc1N0YXRzOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFnaW5hLycraWQrJy9tZW5zYWplcy9zdGF0cy8nKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYWRkR2FsZXJpYTpmdW5jdGlvbiAoZGF0b3MsIHBhZ2luYV9pZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICAgIDogIGRhdG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hLycrcGFnaW5hX2lkICsnL2dhbGVyaWFzJ1xuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnT2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnSHVibyB1biBlcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldEdhbGVyaWE6ZnVuY3Rpb24gKGlkLGdhbGVyaWFfaWQsY2FsbGJhY2spIHtcblxuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK2lkKycvZ2FsZXJpYS8nK2dhbGVyaWFfaWQpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB1cGRhdGVHYWxlcmlhOmZ1bmN0aW9uIChwYWdpbmFfaWQsIGdhbGVyaWFfaWQsIGRhdG9zLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgICAgOiAgZGF0b3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnUFVUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3BhZ2luYS8nKyBwYWdpbmFfaWQgKyAnL2dhbGVyaWEvJyArIGdhbGVyaWFfaWRcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsJ09rJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCdIdWJvIHVuIGVycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0R2FsZXJpYXM6ZnVuY3Rpb24gKGlkLGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFnaW5hLycraWQrJy9nYWxlcmlhcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB1cGRhdGVJbWFnZW46ZnVuY3Rpb24gKGRhdG9zLCBpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICAgIDogIGRhdG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ1BVVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS9wYWdpbmEvaW1hZ2VuLycgKyBpZFxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnT2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0h1Ym8gdW4gZXJyb3I6ICcrZXJyLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkZWxldGVJbWc6ZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnREVMRVRFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3BhZ2luYS9pbWFnZW4vJytpZFxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnT2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkZWxldGVTZWNjaW9uOmZ1bmN0aW9uIChtb25nbywgaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdERUxFVEUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hLycrbW9uZ28rJy9zZWNjaW9uLycraWRcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsJ09rJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCdIdWJvIHVuIGVycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0SW1hZ2VuZXM6ZnVuY3Rpb24gKHBhZ2luYSxpZCxjYWxsYmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFnaW5hLycrcGFnaW5hKycvZ2FsZXJpYS8nK2lkKycvaW1hZ2VuZXMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2VndWlkb3JlczpmdW5jdGlvbiAocGFnaW5hX2lkLGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFnaW5hLycrcGFnaW5hX2lkKycvc2VndWlkb3JlcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXRCYW5uZXJzOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS9iYW5uZXJzLycraWQpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGVsZXRlQmFubmVyOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgJGh0dHAuZGVsZXRlKCcvYXBpL3BhZ2luYS9iYW5uZXJzLycraWQpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdXBkYXRlQmFubmVyOmZ1bmN0aW9uIChkYXRvcywgaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdQVVQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hL2Jhbm5lcnMvJyArIGlkXG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xufV0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuYW5ndWxhci5tb2R1bGUoJ2FwcC5wYWdvcycsIFtdKS5cbmNvbnRyb2xsZXIoJ1BhZ29DdHJsJyxbJyRzY29wZScsJ1BhZ28nLCckcm91dGVQYXJhbXMnLCckcm91dGUnLGZ1bmN0aW9uICgkc2NvcGUsUGFjaWVudGUsJHJvdXRlUGFyYW1zLCRyb3V0ZSkge1xuICAgIFxuXG4gICAgJHNjb3BlLnBhZ29zID0ge307XG4gICAgXG4gICAgUGFjaWVudGUuYWxsKGZ1bmN0aW9uIChlcnIsZGF0YSkge1xuICAgICAgICBpZiAoZXJyKSB7YWxlcnQoJ0h1Ym8gdW4gZXJyb3InKTt9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICAkc2NvcGUucGFnb3MgPSBkYXRhO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIH0pOyAgICBcblxuICAgIFxuXG59XSk7XG4iLCJcbi8qIE1vZGVsbyBwYWdvcyAqL1xuXG5hbmd1bGFyLm1vZHVsZSgnTW9kZWxvUGFnb3MnLCAgWyduZ1JvdXRlJ10pXG4gICAgICAgIC8vZXN0byBzZSBxdWVkYSwgcGVybyBzb2xvIGNvbW8gYWRvcm5vIHBhcmEgZnV0dXJhcyByZWZlcmVuY2lhc1xuICAgICAgICAuZmFjdG9yeSAoJ1BhZ28nLCBbJyRodHRwJywnJHJvdXRlUGFyYW1zJyxmdW5jdGlvbiAoJGh0dHAsJHJvdXRlUGFyYW1zKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0ZXN0OmZ1bmN0aW9uIChuYWRhKSB7XG4gICAgICAgICAgICAgICAgICBhbGVydCgnaG9sYWFhJyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhbGw6ZnVuY3Rpb24gKGNhbGxiYWNrKSB7ICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcGFjaWVudGVzJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGdldE9uZTpmdW5jdGlvbiAoaWQsY2FsbGJhY2spIHsgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wYWNpZW50ZS8nK2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTsgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTsgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGVsZXRlU2VjY2lvbjpmdW5jdGlvbiAobW9uZ28sIGlkLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnREVMRVRFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3BhZ2luYS8nK21vbmdvKycvc2VjY2lvbi8nK2lkICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnSHVibyB1biBlcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG59XSk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAucHJvZHVjdG8nLCBbXG4gICAgJ2FwcC5wcm9kdWN0by5zZXJ2aWNlJ1xuICBdKVxuICAgIC5jb250cm9sbGVyKCdQcm9kdWN0b0N0cmwnLFsnJHNjb3BlJywnJG1vZGFsJywnUHJvZHVjdG8nLCckcm91dGVQYXJhbXMnLGZ1bmN0aW9uKCRzY29wZSwkbW9kYWwsUHJvZHVjdG8sJHJvdXRlUGFyYW1zKXtcblxuICAgICAgJHNjb3BlLkZvcm1BZGRQcm9kdWN0byA9IHt9O1xuICAgICAgJHNjb3BlLm1pc1Byb2R1Y3RvcyA9IHt9O1xuICAgICAgUHJvZHVjdG8uZ2V0Q2F0ZWdvcmlhcyhmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgIGlmIChlcnIpIHthbGVydCgnRXJyb3IgYWwgY2FyZ2FyIGxhcyBjYXRlZ29yw61hcycpO31cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAkc2NvcGUuY2F0ZWdvcmlhcyA9IGRhdGE7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkc2NvcGUuYWRkUHJvZHVjdG8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkYXRvcyA9ICRzY29wZS5Gb3JtQWRkUHJvZHVjdG87XG4gICAgICAgIFByb2R1Y3RvLmNyZWF0ZShkYXRvcywkcm91dGVQYXJhbXMucGFnaW5hX2lkLGZ1bmN0aW9uIChlcnIsZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHthbGVydChlcnIpO30gZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLFwiUHJvZHVjdG8gYWdyZWdhZG8gYSB0dSB0aWVuZGFcIik7XG4gICAgICAgICAgICAkc2NvcGUuRm9ybUFkZFByb2R1Y3RvID0ge307XG4gICAgICAgICAgICBnZXRQcm9kdWN0b3MoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgdmFyIGdldFByb2R1Y3RvcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBhZ2luYV9pZCA9ICRyb3V0ZVBhcmFtcy5wYWdpbmFfaWQ7XG4gICAgICAgIFByb2R1Y3RvLm1pc1Byb2R1Y3RvcyhwYWdpbmFfaWQsZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ0FsZ28gc2FsacOzIG1hbCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgaWYgKGRhdGEhPT1udWxsKSB7XG4gICAgICAgICAgICAgICRzY29wZS5taXNQcm9kdWN0b3MgPSBkYXRhO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ0HDum4gbm8gaGF5IHByb2R1Y3RvcycpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIGlmICgkcm91dGVQYXJhbXMucGFnaW5hX2lkKSB7XG4gICAgICAgIGdldFByb2R1Y3RvcygpO1xuICAgICAgfVxuXG5cbiAgfV0pLmNvbnRyb2xsZXIoJ1Byb2R1Y3RvRGV0YWxsZUN0cmwnLFsnJHNjb3BlJywnJG1vZGFsJywnUHJvZHVjdG8nLCckcm91dGVQYXJhbXMnLCckaHR0cCcsJyR3aW5kb3cnLGZ1bmN0aW9uKCRzY29wZSwkbW9kYWwsUHJvZHVjdG8sJHJvdXRlUGFyYW1zLCRodHRwLCR3aW5kb3cpe1xuXG5cbiAgICAgICRzY29wZS5Gb3JtRWRpdGFyUHJvZHVjdG8gPSB7fTtcblxuICAgICAgUHJvZHVjdG8uZGV0YWlsKCRyb3V0ZVBhcmFtcy5wcm9kdWN0b19pZCxmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGFsZXJ0KCdFcnJvciBhbCBjYXJjYXIgZWwgcHJvZHVjdG8nKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgJHNjb3BlLkZvcm1FZGl0YXJQcm9kdWN0byA9IGRhdGE7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG5cbiAgICAgICRzY29wZS5kZWxldGVQcm9kdWN0byA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNvbmZpcm1hciA9IGNvbmZpcm0oJ8K/UmVhbG1lbnRlIHF1aWVyZXMgZWxpbWluYXIgZXN0ZSBwcm9kdWN0bz8nKTtcbiAgICAgICAgaWYgKGNvbmZpcm1hcikge1xuICAgICAgICAgIFByb2R1Y3RvLmRlbGV0ZSgkcm91dGVQYXJhbXMucHJvZHVjdG9faWQpXG4gICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdzdWNjZXNzJyxkYXRhKTtcbiAgICAgICAgICAgICAgJHdpbmRvdy5sb2NhdGlvbiA9ICcjL3BhZ2luYS8nICsgJHNjb3BlLkZvcm1FZGl0YXJQcm9kdWN0by5wcm9kdWN0b19wYWdpbmFfaWQgKyAnL3Byb2R1Y3Rvcyc7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJyxlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgICRzY29wZS5kZWxldGVJbWFnZW4gPSBmdW5jdGlvbiAgKGlkKSB7XG4gICAgICAgIHZhciBzaSA9IGNvbmZpcm0oJ8K/RXN0YXMgc2VndXJvIHF1ZSBkZXNlYXMgZWxpbWluYXIgZXN0YSBpbWFnZW4/Jyk7XG5cbiAgICAgICAgaWYgKHNpKSB7XG4gICAgICAgICAgUHJvZHVjdG8uZGVsZXRlSW1hZ2VuKGlkLGZ1bmN0aW9uICAoZXJyLGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgYWxlcnQoZXJyKTtcbiAgICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ0xpc3RvJyk7XG4gICAgICAgICAgICAgIGdldEltYWdlbmVzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgICRzY29wZS51cGxvYWRJbWFnZSA9IGZ1bmN0aW9uKGZpbGVzKSB7XG4gICAgICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgZmQuYXBwZW5kKFwiZmlsZVwiLCBmaWxlc1swXSk7XG4gICAgICAgICAgJGh0dHAucG9zdCgnL2FwaS9wcm9kdWN0by8nKyAkcm91dGVQYXJhbXMucHJvZHVjdG9faWQgKycvdXBsb2FkJywgZmQsIHtcbiAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZCB9LFxuICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5XG4gICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdzdWNjZXNzJywnU2Ugc3ViacOzIGNvcnJlY3RhbWVudGUhJyk7XG4gICAgICAgICAgICBnZXRJbWFnZW5lcygpO1xuXG4gICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJHJvdXRlLnJlbG9hZCgpO1xuICAgICAgICAgICAgZ2V0SW1hZ2VuZXMoKTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ1NlIHN1YmnDsyBsYSBpbcOhZ2VuIGNvcnJlY3RhbWVudGUnKTtcblxuICAgICAgICAgIH0pO1xuXG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUuZWRpdGFyUHJvZHVjdG8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRWRpdGFuZG8gcHJvZHVjdG9cIik7XG4gICAgICAgIFByb2R1Y3RvLnVwZGF0ZSgkc2NvcGUuRm9ybUVkaXRhclByb2R1Y3RvLCRyb3V0ZVBhcmFtcy5wcm9kdWN0b19pZCxmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBhbGVydCgnRXJyb3IgYWwgaW50ZW50YXIgZWRpdGFyIGVsIHByb2R1Y3RvJyk7XG4gICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ1Byb2R1Y3RvIGVkaXRhZG8gY29ycmVjdGFtZW50ZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG5cbiAgICAgIGZ1bmN0aW9uIGdldEltYWdlbmVzICgpIHtcbiAgICAgICAgUHJvZHVjdG8uZm90b3MoJHJvdXRlUGFyYW1zLnByb2R1Y3RvX2lkLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7Y29uc29sZS5sb2coZXJyKTt9XG4gICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5mb3RvcyA9IGRhdGE7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgZ2V0SW1hZ2VuZXMoKTtcbiAgfV0pO1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uICgpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8qIE1vZGVsbyBQcm9kdWN0byAqL1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAucHJvZHVjdG8uc2VydmljZScsICBbJ25nUm91dGUnXSlcbiAgICAgICAgICAvL2VzdG8gc2UgcXVlZGEsIHBlcm8gc29sbyBjb21vIGFkb3JubyBwYXJhIGZ1dHVyYXMgcmVmZXJlbmNpYXNcbiAgICAgICAgICAuZmFjdG9yeSAoJ1Byb2R1Y3RvJywgWyckaHR0cCcsZnVuY3Rpb24gKCRodHRwKSB7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIHRlc3Q6ZnVuY3Rpb24gKG5hZGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ2hvbGFhYScpO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGFsbDpmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS9taXNQYWdpbmFzJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGRlbGV0ZTpmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9wcm9kdWN0by8nICsgaWQpO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGdldENhdGVnb3JpYXM6ZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9wcm9kdWN0by9jYXRlZ29yaWFzJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soXCJFUk9SXCIsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGdldEltYWdlbmVzOmZ1bmN0aW9uIChpZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcHJvZHVjdG8vJytpZCsnL2ltYWdlbmVzJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKFwiRVJPUlwiLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBmb3RvczpmdW5jdGlvbiAoaWQsY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3Byb2R1Y3RvLycraWQrJy9pbWFnZW5lcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKFwiRVJPUlwiLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBtaXNQcm9kdWN0b3M6ZnVuY3Rpb24gKHBhZ2luYV9pZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcHJvZHVjdG8vcGFnaW5hLycrcGFnaW5hX2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBkZWxldGVJbWFnZW46ZnVuY3Rpb24gKGlkLGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmRlbGV0ZSgnL2FwaS9wcm9kdWN0by9pbWFnZW4vJytpZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZGV0YWlsOmZ1bmN0aW9uIChwcm9kdWN0b19pZCxjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcHJvZHVjdG8vJytwcm9kdWN0b19pZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgY3JlYXRlOmZ1bmN0aW9uIChkYXRvcyxwYWdpbmFfaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgJGh0dHAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgICAgOiAgZGF0b3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcHJvZHVjdG8vcGFnaW5hLycrcGFnaW5hX2lkK1wiL2FkZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0h1Ym8gdW4gZXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgIHVwZGF0ZTpmdW5jdGlvbiAoIGRhdG9zLCBpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgIDogJ1BVVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3Byb2R1Y3RvLycrIGlkXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0h1Ym8gdW4gZXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcbiAgfV0pO1xuXG59KSgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuYW5ndWxhci5tb2R1bGUoJ2FwcC5zZXJ2aWNpb3MnLCBbXSkuY29udHJvbGxlcignc2VydmljaW9zQ3RybCcsIFtcbiAgJyRzY29wZScsICckZmlsdGVyJywnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsICRmaWx0ZXIsJGh0dHApIHtcblxuICAgIC8vICBUcmFlciB0b2RvcyBsb3MgcGFnb3M6IHBlbmRpZW50ZXMgeSByZWFsaXphZG9zXG4gICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ29zJykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSxzdGF0dXMsaGVhZGVycyxjb25maWcpIHtcbiAgICAgICAkc2NvcGUuc2VydmljaW9zID0gZGF0YTtcbiAgICAgfSk7XG5cbiAgICBcbiAgfVxuXSk7XG4iLCIndXNlIHN0cmljdCc7XG5hbmd1bGFyLm1vZHVsZSgnYXBwLnBhZ2luYXMuY3RybCcsIFtdKS5jb250cm9sbGVyKCdhbGdvJywgW1xuICAnJHNjb3BlJywnJHJvdXRlUGFyYW1zJywnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsJHJvdXRlUGFyYW1zLCRodHRwKSB7XG4gIFxuICAgIHZhciBwYWdpbmFfaWQgPSAkcm91dGVQYXJhbXMucGFnaW5hX2lkO1xuXG5cbiAgICAkc2NvcGUuZ2F0byA9ICdob2xhJztcbiAgICAkc2NvcGUuRm9ybURhdGEgPSB7fTtcbiAgICAkc2NvcGUuRm9ybVBhZ2luYSA9IHt9O1xuXG4gICAgaWYgKHBhZ2luYV9pZCkge1xuICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK3BhZ2luYV9pZCsnL3NlY2Npb25lcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsc3RhdHVzLGhlYWRlcnMsY29uZmlnKSB7XG4gICAgICAgICAkc2NvcGUuc2VjY2lvbmVzID0gZGF0YTtcbiAgICAgICB9KTtcblxuICAgICAgJGh0dHAuZ2V0KCcvYXBpL3BhZ2luYS8nK3BhZ2luYV9pZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSxzdGF0dXMsaGVhZGVycyxjb25maWcpIHtcbiAgICAgICAgICRzY29wZS5Gb3JtUGFnaW5hID0gZGF0YTsgICAgICBcbiAgICAgICB9KTsgIFxuICAgIH07XG4gICAgXG5cbiAgICBcblxuICAgICRzY29wZS5wcm9jZXNzRm9ybSA9IGZ1bmN0aW9uKCkgeyAgICAgIFxuICAgICAgdmFyIGRhdG9zID0gJHNjb3BlLkZvcm1EYXRhXG4gICAgICBjb25zb2xlLmxvZyhkYXRvcyk7ICAgICAgXG4gICAgICAkaHR0cCh7XG4gICAgICAgICAgbWV0aG9kICA6ICdQT1NUJyxcbiAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hJyxcbiAgICAgICAgICBkYXRhICAgIDogIGRhdG9zLCAgLy8gcGFzcyBpbiBkYXRhIGFzIHN0cmluZyAgICAgICAgXG4gICAgICB9KVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7ICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyAkc2NvcGUubWVzc2FnZSA9IGRhdGEubWVzc2FnZTtcbiAgICAgICAgICAgICAgICAvLyAkd2luZG93LmxvY2F0aW9uLmhyZWY9XCIvcGFnaW5hL1wiO1xuICAgICAgICAgICAgXG4gICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgYWxlcnQoJ0FsZ28gc2FsacOzIG1hbCcrZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUuZWRpdFBhZ2luYSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGRhdG9zO1xuICAgICAgZGF0b3MgPSAkc2NvcGUuRm9ybVBhZ2luYVxuICAgICAgY29uc29sZS5sb2coZGF0b3MpOyAgICAgIFxuICAgICAgJGh0dHAoe1xuICAgICAgICAgIG1ldGhvZCAgOiAnUFVUJyxcbiAgICAgICAgICB1cmwgICAgIDogJy9hcGkvcGFnaW5hLycrcGFnaW5hX2lkLFxuICAgICAgICAgIGRhdGEgICAgOiAgZGF0b3MsICAvLyBwYXNzIGluIGRhdGEgYXMgc3RyaW5nICAgICAgICBcbiAgICAgIH0pXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgJCgnI3Jlc3VsdCcpLmh0bWwoJzxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1zdWNjZXNzXCI+RWRpdGFkbyBjb3JyZWN0YW1lbnRlPC9kaXY+JykuZGVsYXkoMzAwMCkuaGlkZSgnZXhwbG9kZScpO1xuICAgICAgICAgICAgICAgIC8vICRzY29wZS5tZXNzYWdlID0gZGF0YS5tZXNzYWdlO1xuICAgICAgICAgICAgICAgIC8vICR3aW5kb3cubG9jYXRpb24uaHJlZj1cIi9wYWdpbmEvXCI7XG4gICAgICAgICAgICBcbiAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICBhbGVydCgnQWxnbyBzYWxpw7MgbWFsJytlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cblxuXG5cbn1cbl0pLmNvbnRyb2xsZXIoJ21lbnUnLFsnJHNjb3BlJywnJHJvdXRlUGFyYW1zJywnJGh0dHAnLGZ1bmN0aW9uKCAkc2NvcGUsICRyb3V0ZVBhcmFtcywgJGh0dHApe1xuICAkc2NvcGUucHJ1ZWJhPSdob2xhJztcbiAgJHNjb3BlLnBhZ2VzPScnO1xuXG5cblxufV0pLmNvbnRyb2xsZXIoJ2ZhcXMnLFsnJHNjb3BlJywnJHJvdXRlUGFyYW1zJywnJGh0dHAnLGZ1bmN0aW9uKCAkc2NvcGUsICRyb3V0ZVBhcmFtcywgJGh0dHApe1xuICBcbiAgJGh0dHAuZ2V0KCcvYXBpL2ZhcXMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLHN0YXR1cyxoZWFkZXJzLGNvbmZpZykge1xuICAgICAgICRzY29wZS5jYXRlZ29yaWFzID0gZGF0YTtcbiAgICAgfSk7XG4gICRzY29wZS5jYXRlZ29yaWFfc2VsZWNjaW9uYWRhPScnO1xuICAkc2NvcGUuZmFxX3NlbGVjY2lvbmFkYT0nJztcbiAgXG4gICRzY29wZS5jYXRlZ29yaWFfdGl0dWxvID0gJ03DoXMgbGXDrWRhcyc7XG4gICRzY29wZS5nZXRQcmVndW50YXMgPSBmdW5jdGlvbihjYXRlZ29yaWFfaWQsY2F0ZWdvcmlhKXtcbiAgICBpZiAoY2F0ZWdvcmlhX2lkKSB7XG4gICAgICAkaHR0cC5nZXQoJy9hcGkvZmFxcy8nK2NhdGVnb3JpYV9pZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSxzdGF0dXMsaGVhZGVycyxjb25maWcpIHtcbiAgICAgICAgICRzY29wZS5mYXFzID0gZGF0YTsgICAgICAgICAgICAgIFxuICAgICAgICAgJHNjb3BlLmNhdGVnb3JpYV90aXR1bG8gPSBjYXRlZ29yaWE7XG4gICAgICAgICAkc2NvcGUuY2F0ZWdvcmlhX3NlbGVjY2lvbmFkYT1jYXRlZ29yaWFfaWQ7XG4gICAgICAgfSk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgICAkc2NvcGUuY2F0ZWdvcmlhX3RpdHVsbyA9ICdNw6FzIGxlw61kYXMnO1xuICAgICAgfVxuICAgIH1cbiAgJHNjb3BlLmdldEZhcSA9IGZ1bmN0aW9uKGZhcV9pZCl7ICAgICAgXG4gIFxuICAgICAgJGh0dHAuZ2V0KCcvYXBpL2ZhcS8nK2ZhcV9pZCkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSxzdGF0dXMsaGVhZGVycyxjb25maWcpIHsgICAgICAgIFxuICAgICAgICAgICRzY29wZS5mYXFfc2VsZWNjaW9uYWRhID0gZmFxX2lkO1xuICAgICAgICAgICRzY29wZS5mYXEgPSBkYXRhO1xuICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBhbGVydCgnT2N1cnJpw7MgdW4gZXJyb3IgYWwgY2FyZ2FyIGxhIHByZWd1bnRhJyk7XG4gICAgICAgfSk7ICAgICAgXG4gICAgfVxuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwLmRpcmVjdGl2ZXMnLCBbXSkuZGlyZWN0aXZlKCdpbWdIb2xkZXInLCBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZSwgYXR0cnMpIHtcbiAgICAgICAgcmV0dXJuIEhvbGRlci5ydW4oe1xuICAgICAgICAgIGltYWdlczogZWxlWzBdXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH1cbl0pLmRpcmVjdGl2ZSgnY3VzdG9tQmFja2dyb3VuZCcsIGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiBcIkFcIixcbiAgICBjb250cm9sbGVyOiBbXG4gICAgICAnJHNjb3BlJywgJyRlbGVtZW50JywgJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRzY29wZSwgJGVsZW1lbnQsICRsb2NhdGlvbikge1xuICAgICAgICB2YXIgYWRkQmcsIHBhdGg7XG4gICAgICAgIHBhdGggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJGxvY2F0aW9uLnBhdGgoKTtcbiAgICAgICAgfTtcbiAgICAgICAgYWRkQmcgPSBmdW5jdGlvbihwYXRoKSB7XG4gICAgICAgICAgJGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2JvZHktaG9tZSBib2R5LXNwZWNpYWwgYm9keS10YXNrcyBib2R5LWxvY2snKTtcbiAgICAgICAgICBzd2l0Y2ggKHBhdGgpIHtcbiAgICAgICAgICAgIGNhc2UgJy8nOlxuICAgICAgICAgICAgICByZXR1cm4gJGVsZW1lbnQuYWRkQ2xhc3MoJ2JvZHktaG9tZScpO1xuICAgICAgICAgICAgY2FzZSAnLzQwNCc6XG4gICAgICAgICAgICBjYXNlICcvcGFnZXMvNTAwJzpcbiAgICAgICAgICAgIGNhc2UgJy9wYWdlcy9zaWduaW4nOlxuICAgICAgICAgICAgY2FzZSAnL3BhZ2VzL3NpZ251cCc6XG4gICAgICAgICAgICAgIHJldHVybiAkZWxlbWVudC5hZGRDbGFzcygnYm9keS1zcGVjaWFsJyk7XG4gICAgICAgICAgICBjYXNlICcvcGFnZXMvbG9jay1zY3JlZW4nOlxuICAgICAgICAgICAgICByZXR1cm4gJGVsZW1lbnQuYWRkQ2xhc3MoJ2JvZHktc3BlY2lhbCBib2R5LWxvY2snKTtcbiAgICAgICAgICAgIGNhc2UgJy90YXNrcyc6XG4gICAgICAgICAgICAgIHJldHVybiAkZWxlbWVudC5hZGRDbGFzcygnYm9keS10YXNrcycpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgYWRkQmcoJGxvY2F0aW9uLnBhdGgoKSk7XG4gICAgICAgIHJldHVybiAkc2NvcGUuJHdhdGNoKHBhdGgsIGZ1bmN0aW9uKG5ld1ZhbCwgb2xkVmFsKSB7XG4gICAgICAgICAgaWYgKG5ld1ZhbCA9PT0gb2xkVmFsKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBhZGRCZygkbG9jYXRpb24ucGF0aCgpKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgXVxuICB9O1xufSkuZGlyZWN0aXZlKCd1aUNvbG9yU3dpdGNoJywgW1xuICBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGUsIGF0dHJzKSB7XG4gICAgICAgIHJldHVybiBlbGUuZmluZCgnLmNvbG9yLW9wdGlvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgdmFyICR0aGlzLCBocmVmVXJsLCBzdHlsZTtcbiAgICAgICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAgICAgaHJlZlVybCA9IHZvaWQgMDtcbiAgICAgICAgICBzdHlsZSA9ICR0aGlzLmRhdGEoJ3N0eWxlJyk7XG4gICAgICAgICAgaWYgKHN0eWxlID09PSAnbG91bG91Jykge1xuICAgICAgICAgICAgaHJlZlVybCA9ICdzdHlsZXMvbWFpbi5jc3MnO1xuICAgICAgICAgICAgJCgnbGlua1tocmVmXj1cInN0eWxlcy9tYWluXCJdJykuYXR0cignaHJlZicsIGhyZWZVcmwpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoc3R5bGUpIHtcbiAgICAgICAgICAgIHN0eWxlID0gJy0nICsgc3R5bGU7XG4gICAgICAgICAgICBocmVmVXJsID0gJ3N0eWxlcy9tYWluJyArIHN0eWxlICsgJy5jc3MnO1xuICAgICAgICAgICAgJCgnbGlua1tocmVmXj1cInN0eWxlcy9tYWluXCJdJykuYXR0cignaHJlZicsIGhyZWZVcmwpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5dKS5kaXJlY3RpdmUoJ3RvZ2dsZU1pbk5hdicsIFtcbiAgJyRyb290U2NvcGUnLCBmdW5jdGlvbigkcm9vdFNjb3BlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlLCBhdHRycykge1xuICAgICAgICB2YXIgJHdpbmRvdywgVGltZXIsIGFwcCwgdXBkYXRlQ2xhc3M7XG4gICAgICAgIGFwcCA9ICQoJyNhcHAnKTtcbiAgICAgICAgJHdpbmRvdyA9ICQod2luZG93KTtcbiAgICAgICAgZWxlLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBpZiAoYXBwLmhhc0NsYXNzKCduYXYtbWluJykpIHtcbiAgICAgICAgICAgIGFwcC5yZW1vdmVDbGFzcygnbmF2LW1pbicpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhcHAuYWRkQ2xhc3MoJ25hdi1taW4nKTtcbiAgICAgICAgICAgICRyb290U2NvcGUuJGJyb2FkY2FzdCgnbWluTmF2OmVuYWJsZWQnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFRpbWVyID0gdm9pZCAwO1xuICAgICAgICB1cGRhdGVDbGFzcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciB3aWR0aDtcbiAgICAgICAgICB3aWR0aCA9ICR3aW5kb3cud2lkdGgoKTtcbiAgICAgICAgICBpZiAod2lkdGggPCA3NjgpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHAucmVtb3ZlQ2xhc3MoJ25hdi1taW4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAkd2luZG93LnJlc2l6ZShmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICBjbGVhclRpbWVvdXQodCk7XG4gICAgICAgICAgcmV0dXJuIHQgPSBzZXRUaW1lb3V0KHVwZGF0ZUNsYXNzLCAzMDApO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5dKS5kaXJlY3RpdmUoJ2NvbGxhcHNlTmF2JywgW1xuICBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGUsIGF0dHJzKSB7XG4gICAgICAgIHZhciAkYSwgJGFSZXN0LCAkbGlzdHMsICRsaXN0c1Jlc3QsIGFwcDtcbiAgICAgICAgJGxpc3RzID0gZWxlLmZpbmQoJ3VsJykucGFyZW50KCdsaScpO1xuICAgICAgICAkbGlzdHMuYXBwZW5kKCc8aSBjbGFzcz1cImZhIGZhLWNhcmV0LXJpZ2h0IGljb24taGFzLXVsXCI+PC9pPicpO1xuICAgICAgICAkYSA9ICRsaXN0cy5jaGlsZHJlbignYScpO1xuICAgICAgICAkbGlzdHNSZXN0ID0gZWxlLmNoaWxkcmVuKCdsaScpLm5vdCgkbGlzdHMpO1xuICAgICAgICAkYVJlc3QgPSAkbGlzdHNSZXN0LmNoaWxkcmVuKCdhJyk7XG4gICAgICAgIGFwcCA9ICQoJyNhcHAnKTtcbiAgICAgICAgJGEub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICB2YXIgJHBhcmVudCwgJHRoaXM7XG4gICAgICAgICAgaWYgKGFwcC5oYXNDbGFzcygnbmF2LW1pbicpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAkcGFyZW50ID0gJHRoaXMucGFyZW50KCdsaScpO1xuICAgICAgICAgICRsaXN0cy5ub3QoJHBhcmVudCkucmVtb3ZlQ2xhc3MoJ29wZW4nKS5maW5kKCd1bCcpLnNsaWRlVXAoKTtcbiAgICAgICAgICAkcGFyZW50LnRvZ2dsZUNsYXNzKCdvcGVuJykuZmluZCgndWwnKS5zbGlkZVRvZ2dsZSgpO1xuICAgICAgICAgIHJldHVybiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgJGFSZXN0Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgcmV0dXJuICRsaXN0cy5yZW1vdmVDbGFzcygnb3BlbicpLmZpbmQoJ3VsJykuc2xpZGVVcCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHNjb3BlLiRvbignbWluTmF2OmVuYWJsZWQnLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgIHJldHVybiAkbGlzdHMucmVtb3ZlQ2xhc3MoJ29wZW4nKS5maW5kKCd1bCcpLnNsaWRlVXAoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXSkuZGlyZWN0aXZlKCdoaWdobGlnaHRBY3RpdmUnLCBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogXCJBXCIsXG4gICAgICBjb250cm9sbGVyOiBbXG4gICAgICAgICckc2NvcGUnLCAnJGVsZW1lbnQnLCAnJGF0dHJzJywgJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycywgJGxvY2F0aW9uKSB7XG4gICAgICAgICAgdmFyIGhpZ2hsaWdodEFjdGl2ZSwgbGlua3MsIHBhdGg7XG4gICAgICAgICAgbGlua3MgPSAkZWxlbWVudC5maW5kKCdhJyk7XG4gICAgICAgICAgcGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICRsb2NhdGlvbi5wYXRoKCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgICBoaWdobGlnaHRBY3RpdmUgPSBmdW5jdGlvbihsaW5rcywgcGF0aCkge1xuICAgICAgICAgICAgcGF0aCA9ICcjJyArIHBhdGg7XG4gICAgICAgICAgICByZXR1cm4gYW5ndWxhci5mb3JFYWNoKGxpbmtzLCBmdW5jdGlvbihsaW5rKSB7XG4gICAgICAgICAgICAgIHZhciAkbGksICRsaW5rLCBocmVmO1xuICAgICAgICAgICAgICAkbGluayA9IGFuZ3VsYXIuZWxlbWVudChsaW5rKTtcbiAgICAgICAgICAgICAgJGxpID0gJGxpbmsucGFyZW50KCdsaScpO1xuICAgICAgICAgICAgICBocmVmID0gJGxpbmsuYXR0cignaHJlZicpO1xuICAgICAgICAgICAgICBpZiAoJGxpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xuICAgICAgICAgICAgICAgICRsaS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKHBhdGguaW5kZXhPZihocmVmKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAkbGkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIGhpZ2hsaWdodEFjdGl2ZShsaW5rcywgJGxvY2F0aW9uLnBhdGgoKSk7XG4gICAgICAgICAgcmV0dXJuICRzY29wZS4kd2F0Y2gocGF0aCwgZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpIHtcbiAgICAgICAgICAgIGlmIChuZXdWYWwgPT09IG9sZFZhbCkge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaGlnaGxpZ2h0QWN0aXZlKGxpbmtzLCAkbG9jYXRpb24ucGF0aCgpKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbl0pLmRpcmVjdGl2ZSgndG9nZ2xlT2ZmQ2FudmFzJywgW1xuICBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGUsIGF0dHJzKSB7XG4gICAgICAgIHJldHVybiBlbGUub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuICQoJyNhcHAnKS50b2dnbGVDbGFzcygnb24tY2FudmFzJyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH1cbl0pLmRpcmVjdGl2ZSgnc2xpbVNjcm9sbCcsIFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlLCBhdHRycykge1xuICAgICAgICByZXR1cm4gZWxlLnNsaW1TY3JvbGwoe1xuICAgICAgICAgIGhlaWdodDogJzEwMCUnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH1cbl0pLmRpcmVjdGl2ZSgnZ29CYWNrJywgW1xuICBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgICAgY29udHJvbGxlcjogW1xuICAgICAgICAnJHNjb3BlJywgJyRlbGVtZW50JywgJyR3aW5kb3cnLCBmdW5jdGlvbigkc2NvcGUsICRlbGVtZW50LCAkd2luZG93KSB7XG4gICAgICAgICAgcmV0dXJuICRlbGVtZW50Lm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG5dKTtcbiIsIid1c2Ugc3RyaWN0JztcbmFuZ3VsYXIubW9kdWxlKCdhcHAubG9jYWxpemF0aW9uJywgW10pLmZhY3RvcnkoJ2xvY2FsaXplJywgW1xuICAnJGh0dHAnLCAnJHJvb3RTY29wZScsICckd2luZG93JywgZnVuY3Rpb24oJGh0dHAsICRyb290U2NvcGUsICR3aW5kb3cpIHtcbiAgICB2YXIgbG9jYWxpemU7XG4gICAgbG9jYWxpemUgPSB7XG4gICAgICBsYW5ndWFnZTogJycsXG4gICAgICB1cmw6IHZvaWQgMCxcbiAgICAgIHJlc291cmNlRmlsZUxvYWRlZDogZmFsc2UsXG4gICAgICBzdWNjZXNzQ2FsbGJhY2s6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgbG9jYWxpemUuZGljdGlvbmFyeSA9IGRhdGE7XG4gICAgICAgIGxvY2FsaXplLnJlc291cmNlRmlsZUxvYWRlZCA9IHRydWU7XG4gICAgICAgIHJldHVybiAkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2xvY2FsaXplUmVzb3VyY2VzVXBkYXRlZCcpO1xuICAgICAgfSxcbiAgICAgIHNldExhbmd1YWdlOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICBsb2NhbGl6ZS5sYW5ndWFnZSA9IHZhbHVlLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCItXCIpWzBdO1xuICAgICAgICByZXR1cm4gbG9jYWxpemUuaW5pdExvY2FsaXplZFJlc291cmNlcygpO1xuICAgICAgfSxcbiAgICAgIHNldFVybDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgbG9jYWxpemUudXJsID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5pbml0TG9jYWxpemVkUmVzb3VyY2VzKCk7XG4gICAgICB9LFxuICAgICAgYnVpbGRVcmw6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoIWxvY2FsaXplLmxhbmd1YWdlKSB7XG4gICAgICAgICAgbG9jYWxpemUubGFuZ3VhZ2UgPSAoJHdpbmRvdy5uYXZpZ2F0b3IudXNlckxhbmd1YWdlIHx8ICR3aW5kb3cubmF2aWdhdG9yLmxhbmd1YWdlKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIGxvY2FsaXplLmxhbmd1YWdlID0gbG9jYWxpemUubGFuZ3VhZ2Uuc3BsaXQoXCItXCIpWzBdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnaTE4bi9yZXNvdXJjZXMtbG9jYWxlXycgKyBsb2NhbGl6ZS5sYW5ndWFnZSArICcuanMnO1xuICAgICAgfSxcbiAgICAgIGluaXRMb2NhbGl6ZWRSZXNvdXJjZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdXJsO1xuICAgICAgICB1cmwgPSBsb2NhbGl6ZS51cmwgfHwgbG9jYWxpemUuYnVpbGRVcmwoKTtcbiAgICAgICAgcmV0dXJuICRodHRwKHtcbiAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgY2FjaGU6IGZhbHNlXG4gICAgICAgIH0pLnN1Y2Nlc3MobG9jYWxpemUuc3VjY2Vzc0NhbGxiYWNrKS5lcnJvcihmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJHJvb3RTY29wZS4kYnJvYWRjYXN0KCdsb2NhbGl6ZVJlc291cmNlc1VwZGF0ZWQnKTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgZ2V0TG9jYWxpemVkU3RyaW5nOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0LCB2YWx1ZUxvd2VyQ2FzZTtcbiAgICAgICAgcmVzdWx0ID0gdm9pZCAwO1xuICAgICAgICBpZiAobG9jYWxpemUuZGljdGlvbmFyeSAmJiB2YWx1ZSkge1xuICAgICAgICAgIHZhbHVlTG93ZXJDYXNlID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICBpZiAobG9jYWxpemUuZGljdGlvbmFyeVt2YWx1ZUxvd2VyQ2FzZV0gPT09ICcnKSB7XG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ID0gbG9jYWxpemUuZGljdGlvbmFyeVt2YWx1ZUxvd2VyQ2FzZV07XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc3VsdCA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gbG9jYWxpemU7XG4gIH1cbl0pLmRpcmVjdGl2ZSgnaTE4bicsIFtcbiAgJ2xvY2FsaXplJywgZnVuY3Rpb24obG9jYWxpemUpIHtcbiAgICB2YXIgaTE4bkRpcmVjdGl2ZTtcbiAgICBpMThuRGlyZWN0aXZlID0ge1xuICAgICAgcmVzdHJpY3Q6IFwiRUFcIixcbiAgICAgIHVwZGF0ZVRleHQ6IGZ1bmN0aW9uKGVsZSwgaW5wdXQsIHBsYWNlaG9sZGVyKSB7XG4gICAgICAgIHZhciByZXN1bHQ7XG4gICAgICAgIHJlc3VsdCA9IHZvaWQgMDtcbiAgICAgICAgaWYgKGlucHV0ID09PSAnaTE4bi1wbGFjZWhvbGRlcicpIHtcbiAgICAgICAgICByZXN1bHQgPSBsb2NhbGl6ZS5nZXRMb2NhbGl6ZWRTdHJpbmcocGxhY2Vob2xkZXIpO1xuICAgICAgICAgIHJldHVybiBlbGUuYXR0cigncGxhY2Vob2xkZXInLCByZXN1bHQpO1xuICAgICAgICB9IGVsc2UgaWYgKGlucHV0Lmxlbmd0aCA+PSAxKSB7XG4gICAgICAgICAgcmVzdWx0ID0gbG9jYWxpemUuZ2V0TG9jYWxpemVkU3RyaW5nKGlucHV0KTtcbiAgICAgICAgICByZXR1cm4gZWxlLnRleHQocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGUsIGF0dHJzKSB7XG4gICAgICAgIHNjb3BlLiRvbignbG9jYWxpemVSZXNvdXJjZXNVcGRhdGVkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGkxOG5EaXJlY3RpdmUudXBkYXRlVGV4dChlbGUsIGF0dHJzLmkxOG4sIGF0dHJzLnBsYWNlaG9sZGVyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhdHRycy4kb2JzZXJ2ZSgnaTE4bicsIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGkxOG5EaXJlY3RpdmUudXBkYXRlVGV4dChlbGUsIHZhbHVlLCBhdHRycy5wbGFjZWhvbGRlcik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGkxOG5EaXJlY3RpdmU7XG4gIH1cbl0pLmNvbnRyb2xsZXIoJ0xhbmdDdHJsJywgW1xuICAnJHNjb3BlJywgJ2xvY2FsaXplJywgZnVuY3Rpb24oJHNjb3BlLCBsb2NhbGl6ZSkge1xuICAgIGxvY2FsaXplLnNldExhbmd1YWdlKCdFUy1FUycpO1xuICAgICRzY29wZS5sYW5nID0gJ0VzcGHDsW9sJztcbiAgICByZXR1cm4gJHNjb3BlLnNldExhbmcgPSBmdW5jdGlvbihsYW5nKSB7XG4gICAgICBzd2l0Y2ggKGxhbmcpIHtcbiAgICAgICAgY2FzZSAnRW5nbGlzaCc6XG4gICAgICAgICAgbG9jYWxpemUuc2V0TGFuZ3VhZ2UoJ0VOLVVTJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0VzcGHDsW9sJzpcbiAgICAgICAgICBsb2NhbGl6ZS5zZXRMYW5ndWFnZSgnRVMtRVMnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAn5pel5pys6KqeJzpcbiAgICAgICAgICBsb2NhbGl6ZS5zZXRMYW5ndWFnZSgnSkEtSlAnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAn5Lit5paHJzpcbiAgICAgICAgICBsb2NhbGl6ZS5zZXRMYW5ndWFnZSgnWkgtVFcnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnRGV1dHNjaCc6XG4gICAgICAgICAgbG9jYWxpemUuc2V0TGFuZ3VhZ2UoJ0RFLURFJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2ZyYW7Dp2Fpcyc6XG4gICAgICAgICAgbG9jYWxpemUuc2V0TGFuZ3VhZ2UoJ0ZSLUZSJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0l0YWxpYW5vJzpcbiAgICAgICAgICBsb2NhbGl6ZS5zZXRMYW5ndWFnZSgnSVQtSVQnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnUG9ydHVnYWwnOlxuICAgICAgICAgIGxvY2FsaXplLnNldExhbmd1YWdlKCdQVC1CUicpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICfQoNGD0YHRgdC60LjQuSDRj9C30YvQuic6XG4gICAgICAgICAgbG9jYWxpemUuc2V0TGFuZ3VhZ2UoJ1JVLVJVJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ+2VnOq1reyWtCc6XG4gICAgICAgICAgbG9jYWxpemUuc2V0TGFuZ3VhZ2UoJ0tPLUtSJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gJHNjb3BlLmxhbmcgPSBsYW5nO1xuICAgIH07XG4gIH1cbl0pOyIsIihmdW5jdGlvbiAoKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgYW5ndWxhci5tb2R1bGUoJ2FwcC5jb250cm9sbGVycycsIFtdKS5jb250cm9sbGVyKCdBcHBDdHJsJywgW1xuICAgICckc2NvcGUnLCAnJGxvY2F0aW9uJywnJGh0dHAnLCdsb2dnZXInLCckcm9vdFNjb3BlJywnJHJvdXRlJywgZnVuY3Rpb24oJHNjb3BlLCAkbG9jYXRpb24sJGh0dHAsbG9nZ2VyLCRyb290U2NvcGUsJHJvdXRlKSB7XG4gICAgICB2YXIgYmFzZTtcbiAgICAgIC8vICBDb25maWd1cmFjacOzbiBnbG9iYWwgZGUgbm9kZXhcbiAgICAgICRzY29wZS5tYWluID0ge307XG4gICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWxlcnRlZCcpO1xuICAgICAgICAkaHR0cC5nZXQoJy9jb25maWcnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLHN0YXR1cyxoZWFkZXJzLGNvbmZpZykge1xuICAgICAgICAgICRzY29wZS5jb25maWcgPSBkYXRhO1xuICAgICAgICAgIHZhciBiYXNlID0gJHNjb3BlLmNvbmZpZ1sxXS5jb25maWdfdmFsb3I7XG5cblxuICAgICAgICAgICRzY29wZS5tYWluLmJyYW5kID0gJ05vZGV4JztcbiAgICAgICAgICAkc2NvcGUubWFpbi5iYXNlID0gYmFzZTtcbiAgICAgICAgICAkc2NvcGUubWFpbi5kb21pbmlvID0gJ25vZGV4Lm14JztcblxuICAgICAgICB9KS5lcnJvcihmdW5jdGlvbigpe1xuICAgICAgICAgIGFsZXJ0KCdPcHMhIGFsZ28gc2FsacOzIG1hbCwgbG8gbWVqb3Igc2Vyw6EgaW50ZW50YXIgZW4gdW5vcyBtaW51dG9zJyk7XG4gICAgICAgIH0pO1xuXG5cbiAgICAgICRzY29wZS5pc1NwZWNpZmljUGFnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgcGF0aDtcbiAgICAgICAgcGF0aCA9ICRsb2NhdGlvbi5wYXRoKCk7XG4gICAgICAgIHJldHVybiBfLmNvbnRhaW5zKFsnLzQwNCcsICcvcGFnZXMvNTAwJywgJy9wYWdlcy9sb2dpbicsICcvcGFnZXMvc2lnbmluJywgJy9wYWdlcy9zaWduaW4xJywgJy9wYWdlcy9zaWduaW4yJywgJy9wYWdlcy9zaWdudXAnLCAnL3BhZ2VzL3NpZ251cDEnLCAnL3BhZ2VzL3NpZ251cDInLCAnL3BhZ2VzL2xvY2stc2NyZWVuJ10sIHBhdGgpO1xuICAgICAgfTtcblxuICAgICAgJHNjb3BlLm5vdGlmeSA9IGZ1bmN0aW9uKHR5cGUsbXNnKSB7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgIGNhc2UgJ2luZm8nOlxuICAgICAgICAgICAgcmV0dXJuIGxvZ2dlci5sb2cobXNnKTtcbiAgICAgICAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgICAgICAgIHJldHVybiBsb2dnZXIubG9nU3VjY2Vzcyhtc2cpO1xuICAgICAgICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgICAgICAgcmV0dXJuIGxvZ2dlci5sb2dXYXJuaW5nKG1zZyk7XG4gICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgcmV0dXJuIGxvZ2dlci5sb2dFcnJvcihtc2cpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG5cbiAgICAgIHZhciBhcHAgPSAkKCcjYXBwJyk7XG4gICAgICAkJCgnLnBhZ2UnKS5zd2lwZVJpZ2h0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8vIGFmZmVjdHMgXCJzcGFuXCIgY2hpbGRyZW4vZ3JhbmRjaGlsZHJlblxuXG5cbiAgICAgICAgICAgICAgYXBwLnJlbW92ZUNsYXNzKCduYXYtbWluJyk7XG4gICAgICAgICAgICAgICQoJyNhcHAnKS50b2dnbGVDbGFzcygnb24tY2FudmFzJyk7XG4gICAgICAgICAgfSApO1xuXG4gICAgICAkJCgnLnBhZ2UnKS5zd2lwZUxlZnQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgLy8gYWZmZWN0cyBcInNwYW5cIiBjaGlsZHJlbi9ncmFuZGNoaWxkcmVuXG5cbiAgICAgICAgICAgICAgYXBwLmFkZENsYXNzKCduYXYtbWluJyk7XG4gICAgICAgICAgICAgICQoJyNhcHAnKS50b2dnbGVDbGFzcygnb24tY2FudmFzJyk7XG5cbiAgICAgIH0pO1xuXG5cblxuXG4gICAgICAvLyBJbmZvcm1hY2nDs24gZGVsIHVzdWFyaW8gYWN0dWFsXG4gICAgICAkaHR0cC5nZXQoJy9hcGkvdXN1YXJpby9wZXJmaWwnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLHN0YXR1cyxoZWFkZXJzLGNvbmZpZykge1xuICAgICAgICAkc2NvcGUudXN1YXJpbyA9IGRhdGE7XG4gICAgICAgICRyb290U2NvcGUudXN1YXJpbyA9IGRhdGE7XG4gICAgICAgICBpZiAoZGF0YS51c3VhcmlvX2ZhY2Vib29rKSB7XG4gICAgICAgICAgICAkc2NvcGUubWFpbi5mb3RvID0gJ2h0dHA6Ly9ncmFwaC5mYWNlYm9vay5jb20vJyArIGRhdGEudXN1YXJpb19mYWNlYm9vayArICcvcGljdHVyZSc7XG4gICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5tYWluLmZvdG8gPSAnaHR0cHM6Ly9hbnN3ZXJzLmF0bGFzc2lhbi5jb20vdXBmaWxlcy91c2VyX2ljb25zL2NhY2hlZC9UaW1vdGh5X0NoaW5fYXZhdGFyX2ljb24xMjgucG5nJztcbiAgICAgICAgIH1cblxuICAgICAgIH0pO1xuXG5cblxuICAgIH1cbiAgXSkuY29udHJvbGxlcignTmF2Q3RybCcsIFtcbiAgICAnJHNjb3BlJywgICdmaWx0ZXJGaWx0ZXInLCAnUGFnaW5hJywgZnVuY3Rpb24oJHNjb3BlLCBmaWx0ZXJGaWx0ZXIsIFBhZ2luYSkge1xuXG4gICAgICBQYWdpbmEuYWxsKGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge2FsZXJ0KGVycik7fVxuICAgICAgICBlbHNle1xuICAgICAgICAgICRzY29wZS5taXNQYWdpbmFzID0gZGF0YTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIFBhZ2luYS5leHBpcmVkKGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge25vdGlmeSgnZGFuZ2VyJywnT2N1cnJpw7MgdW4gZXJyb3InKTt9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgJHNjb3BlLlBhZ2luYXNWZW5jaWRhcyA9IGRhdGE7XG4gICAgICAgICAgJHNjb3BlLlRvdGFsUGFnaW5hc1ZlbmNpZGFzID0gZGF0YS5sZW5ndGg7XG5cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGZ1bmN0aW9uIGdldE5vdGlmaWNhY2lvbmVzTWVuc2FqZXNQYWdpbmEoKXtcbiAgICAgICAgUGFnaW5hLmdldE1lbnNhamVzQWxsKGZ1bmN0aW9uIChlcnIsZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ05vIHNlIHB1ZGllcm9uIGNhcmdhciB0dXMgbm90aWZpY2FjaW9uZXMnKTtcbiAgICAgICAgICAgIC8vIGFsZXJ0KCdPY3VycmnDsyB1biBlcnJvciBkZW50cm8gZGVsIHNpc3RlbWEsIGxvIGVzdGFtb3MgcmVwYXJhbmRvIGVuIGVzdGUgbW9tZW50by4gUG9yIGZhdm9yIHZ1ZWx2ZSBhIGluaWNpYXIgc2VzacOzbiwgbGFtZW50YW1vcyBsb3MgaW5jb252ZW5pZW50ZXMnKTtcblxuICAgICAgICAgICAgICB2YXIgYWxlcnRlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhbGVydGVkJykgfHwgJyc7XG4gICAgICAgICAgICAgIGlmIChhbGVydGVkICE9ICd5ZXMnKSB7XG4gICAgICAgICAgICAgICBhbGVydChcIk9jdXJyacOzIHVuIGVycm9yIGRlbnRybyBkZWwgc2lzdGVtYSwgbG8gZXN0YW1vcyByZXBhcmFuZG8gZW4gZXN0ZSBtb21lbnRvLiBQb3IgZmF2b3IgdnVlbHZlIGEgaW5pY2lhciBzZXNpw7NuLCBsYW1lbnRhbW9zIGxvcyBpbmNvbnZlbmllbnRlc1wiKTtcbiAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhbGVydGVkJywneWVzJyk7XG4gICAgICAgICAgICAgIC8vICB3aW5kb3cubG9jYXRpb24gPSAnL2xvZ2luJztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZmljYWNpb25lc01lbnNhamVzID0gZGF0YTtcbiAgICAgICAgICAgICRzY29wZS5ub3RpZmljYWNpb25lc01lbnNhamVzVG90YWwgPSAkc2NvcGUubm90aWZpY2FjaW9uZXNNZW5zYWplcy5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgLy8gIFNvY2tldCA6KVxuICAgICAgdmFyIHNvY2tldCA9IGlvKCk7XG4gICAgICBzb2NrZXQub24oJ25vdGlmaWNhY2lvbicsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGxvZyhkYXRhLnVzZXJuYW1lICsgJyBsZWZ0Jyk7XG4gICAgICAgIGFkZFBhcnRpY2lwYW50c01lc3NhZ2UoZGF0YSk7XG4gICAgICAgIHJlbW92ZUNoYXRUeXBpbmcoZGF0YSk7XG4gICAgICB9KTtcblxuICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgIGdldE5vdGlmaWNhY2lvbmVzTWVuc2FqZXNQYWdpbmEoKTtcbiAgICAgIH0sIDIwMDAwKTtcbiAgICAgIGdldE5vdGlmaWNhY2lvbmVzTWVuc2FqZXNQYWdpbmEoKTtcblxuXG4gICAgfVxuICBdKS5jb250cm9sbGVyKCdEYXNoYm9hcmRDdHJsJywgW1xuICAgICckc2NvcGUnLCdQYWdpbmEnLCBmdW5jdGlvbigkc2NvcGUsUGFnaW5hKSB7XG4gICAgICBQYWdpbmEuYWxsKGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge2FsZXJ0KGVycik7fVxuICAgICAgICBlbHNle1xuICAgICAgICAgICRzY29wZS5taXNQYWdpbmFzID0gZGF0YTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIFBhZ2luYS5nZXRNZW5zYWplc0xhdGVzdChmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdPY3VycmnDsyB1biBlcnJvciBhbCBjYXJnYXIgbG9zIMO6bHRpbW9zIG1lbnNhamVzLCBwb3JmYXZvciBpbnRlbnRhIG3DoXMgdGFyZGUnKTtcbiAgICAgICAgfSBlbHNle1xuICAgICAgICAgICRzY29wZS5QYWdpbmFNZW5zYWplc0xhdGVzdCAgPSBkYXRhO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgIH1cbiAgXSk7XG5cblxuICB2YXIgTW9kYWxDdHJsID0gZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UpIHtcblxuICAgICRzY29wZS5vayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG4gICAgfTtcblxuICAgICRzY29wZS5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbiAgICB9O1xuICB9O1xuXG59KSgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuYW5ndWxhci5tb2R1bGUoJ2FwcC5jaGF0JywgW10pLmNvbnRyb2xsZXIoJ0NoYXRDdHJsJyxbJyRzY29wZScsJyRyb3V0ZVBhcmFtcycsJyRodHRwJywnJHJvb3RTY29wZScsJ1VzdWFyaW8nLGZ1bmN0aW9uKCAkc2NvcGUsICRyb3V0ZVBhcmFtcywgJGh0dHAsICRyb290U2NvcGUsVXN1YXJpbyl7XG4gICAgXG4gICAgVXN1YXJpby5wZXJmaWwoZnVuY3Rpb24gKGVycixkYXRhKSB7XG4gICAgICBpZiAoZXJyKSB7YWxlcnQoZXJyKTt9XG4gICAgICBlbHNle1xuICAgICAgICAkc2NvcGUubmljayA9IGRhdGEudXN1YXJpb19ub21icmU7XG4gICAgICAgICRzY29wZS5mYWNlYm9vayA9IGRhdGEudXN1YXJpb19mYWNlYm9vaztcbiAgICAgICAgaWYgKGRhdGEudXN1YXJpb19mYWNlYm9vaykgeyAgICAgICAgICBcbiAgICAgICAgICAkc2NvcGUudXN1YXJpby51c3VhcmlvX2ZvdG8gPSAnaHR0cDovL2dyYXBoLmZhY2Vib29rLmNvbS8nICsgZGF0YS51c3VhcmlvX2ZhY2Vib29rICsgJy9waWN0dXJlJzsgICAgICAgICAgICAgICAgIFxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAkc2NvcGUudXN1YXJpby51c3VhcmlvX2ZvdG8gPSAnaHR0cHM6Ly9hbnN3ZXJzLmF0bGFzc2lhbi5jb20vdXBmaWxlcy91c2VyX2ljb25zL2NhY2hlZC9UaW1vdGh5X0NoaW5fYXZhdGFyX2ljb24xMjgucG5nJzsgICAgICAgXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gICAgXG4gICAgXG4gICAgICAgIHZhciBGQURFX1RJTUUgPSAxNTA7IC8vIG1zXG4gICAgICAgIHZhciBUWVBJTkdfVElNRVJfTEVOR1RIID0gNDAwOyAvLyBtc1xuICAgICAgICB2YXIgQ09MT1JTID0gW1xuICAgICAgICAnI2UyMTQwMCcsICcjOTE1ODBmJywgJyNmOGE3MDAnLCAnI2Y3OGIwMCcsXG4gICAgICAgICcjNThkYzAwJywgJyMyODdiMDAnLCAnI2E4ZjA3YScsICcjNGFlOGM0JyxcbiAgICAgICAgJyMzYjg4ZWInLCAnIzM4MjRhYScsICcjYTcwMGZmJywgJyNkMzAwZTcnXG4gICAgICAgIF07XG5cbiAgLy8gSW5pdGlhbGl6ZSB2YXJpYmxlc1xuICAgICAgICB2YXIgJHdpbmRvdyA9ICQod2luZG93KTtcbiAgICAgICAgdmFyICR1c2VybmFtZUlucHV0ID0gJCgnLnVzZXJuYW1lSW5wdXQnKTsgLy8gSW5wdXQgZm9yIHVzZXJuYW1lXG4gICAgICAgIHZhciAkZmFjZWJvb2tJbnB1dCA9ICQoJy5mYWNlYm9va0lucHV0Jyk7XG4gICAgICAgIHZhciAkbWVzc2FnZXMgPSAkKCcubWVzc2FnZXMnKTsgLy8gTWVzc2FnZXMgYXJlYVxuICAgICAgICB2YXIgJGlucHV0TWVzc2FnZSA9ICQoJy5pbnB1dE1lc3NhZ2UnKTsgLy8gSW5wdXQgbWVzc2FnZSBpbnB1dCBib3hcblxuICAgICAgICB2YXIgJGxvZ2luUGFnZSA9ICQoJy5sb2dpbi5wYWdlJyk7IC8vIFRoZSBsb2dpbiBwYWdlXG4gICAgICAgIHZhciAkY2hhdFBhZ2UgPSAkKCcuY2hhdC5wYWdlJyk7IC8vIFRoZSBjaGF0cm9vbSBwYWdlXG5cbiAgLy8gUHJvbXB0IGZvciBzZXR0aW5nIGEgdXNlcm5hbWVcbiAgICAgICAgdmFyIHVzZXJuYW1lO1xuICAgICAgICB2YXIgZm90bztcbiAgICAgICAgdmFyIGNvbm5lY3RlZCA9IGZhbHNlO1xuICAgICAgICB2YXIgdHlwaW5nID0gZmFsc2U7XG4gICAgICAgIHZhciBsYXN0VHlwaW5nVGltZTtcbiAgICAgICAgdmFyICRjdXJyZW50SW5wdXQgPSAkaW5wdXRNZXNzYWdlLmZvY3VzKCk7XG5cbiAgICAgICAgdmFyIHNvY2tldCA9IGlvKCk7XG4gICAgICAgIHNldFVzZXJuYW1lKCk7XG5cbiAgICAgICAgZnVuY3Rpb24gYWRkUGFydGljaXBhbnRzTWVzc2FnZSAoZGF0YSkge1xuICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSAnJztcbiAgICAgICAgICAgIGlmIChkYXRhLm51bVVzZXJzID09PSAxKSB7XG4gICAgICAgICAgICAgIG1lc3NhZ2UgKz0gXCJIYXkgMSBwYXJ0aWNpcGFudGVcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG1lc3NhZ2UgKz0gXCJIYXkgXCIgKyBkYXRhLm51bVVzZXJzICsgXCIgcGFydGljaXBhbnRlc1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gYWxlcnQobWVzc2FnZSk7XG4gICAgICAgIH1cblxuICBmdW5jdGlvbiBkaXYydG9wKCl7XG4gICAgXG4gICAgdmFyIG9iakRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVuc2FqZXNcIik7XG4gICAgb2JqRGl2LnNjcm9sbFRvcCA9IG9iakRpdi5zY3JvbGxIZWlnaHQ7XG4gIH1cbiAgXG4gIC8vIFNldHMgdGhlIGNsaWVudCdzIHVzZXJuYW1lXG4gIGZ1bmN0aW9uIHNldFVzZXJuYW1lICgpIHtcbiAgICB1c2VybmFtZSA9IGNsZWFuSW5wdXQoJHVzZXJuYW1lSW5wdXQudmFsKCkudHJpbSgpKTsgIFxuICAgIGZvdG8gPSBjbGVhbklucHV0KCRmYWNlYm9va0lucHV0LnZhbCgpLnRyaW0oKSk7ICBcbiAgICAvLyBJZiB0aGUgdXNlcm5hbWUgaXMgdmFsaWRcbiAgICBpZiAodXNlcm5hbWUpIHtcbiAgICAgICRsb2dpblBhZ2UuZmFkZU91dCgpO1xuICAgICAgJGNoYXRQYWdlLnNob3coKTtcbiAgICAgICRsb2dpblBhZ2Uub2ZmKCdjbGljaycpO1xuICAgICAgJGN1cnJlbnRJbnB1dCA9ICRpbnB1dE1lc3NhZ2UuZm9jdXMoKTtcblxuICAgICAgLy8gVGVsbCB0aGUgc2VydmVyIHlvdXIgdXNlcm5hbWVcbiAgICAgIHNvY2tldC5lbWl0KCdhZGQgdXNlcicsIHVzZXJuYW1lLGZvdG8pO1xuICAgICAgc29ja2V0LmVtaXQoJ29ubGluZSB1c2VycycpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFNlbmRzIGEgY2hhdCBtZXNzYWdlXG4gIGZ1bmN0aW9uIHNlbmRNZXNzYWdlICgpIHtcbiAgICB2YXIgbWVzc2FnZSA9ICRpbnB1dE1lc3NhZ2UudmFsKCk7XG4gICAgLy8gUHJldmVudCBtYXJrdXAgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBtZXNzYWdlXG4gICAgbWVzc2FnZSA9IGNsZWFuSW5wdXQobWVzc2FnZSk7XG4gICAgLy8gaWYgdGhlcmUgaXMgYSBub24tZW1wdHkgbWVzc2FnZSBhbmQgYSBzb2NrZXQgY29ubmVjdGlvblxuICAgIGlmIChtZXNzYWdlICYmIGNvbm5lY3RlZCkge1xuICAgICAgJGlucHV0TWVzc2FnZS52YWwoJycpO1xuICAgICAgYWRkQ2hhdE1lc3NhZ2Uoe1xuICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICAgIGZvdG86ICdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9kcmF3ZWIyLjAvcGljdHVyZSdcbiAgICAgIH0pO1xuICAgICAgLy8gdGVsbCBzZXJ2ZXIgdG8gZXhlY3V0ZSAnbmV3IG1lc3NhZ2UnIGFuZCBzZW5kIGFsb25nIG9uZSBwYXJhbWV0ZXJcbiAgICAgIHNvY2tldC5lbWl0KCduZXcgbWVzc2FnZScsIG1lc3NhZ2UsJHNjb3BlLnVzdWFyaW8udXN1YXJpb19mb3RvKTtcbiAgICB9XG4gIH1cblxuICAvLyBMb2cgYSBtZXNzYWdlXG4gIGZ1bmN0aW9uIGxvZyAobWVzc2FnZSwgb3B0aW9ucykge1xuICAgIHZhciAkZWwgPSAkKCc8ZGl2PicpLmFkZENsYXNzKCdsb2cnKS50ZXh0KG1lc3NhZ2UpO1xuICAgIGFkZE1lc3NhZ2VFbGVtZW50KCRlbCwgb3B0aW9ucyk7XG4gIH1cblxuICAvLyBBZGRzIHRoZSB2aXN1YWwgY2hhdCBtZXNzYWdlIHRvIHRoZSBtZXNzYWdlIGxpc3RcbiAgZnVuY3Rpb24gYWRkQ2hhdE1lc3NhZ2UgKGRhdGEsIG9wdGlvbnMpIHtcbiAgICAvLyBEb24ndCBmYWRlIHRoZSBtZXNzYWdlIGluIGlmIHRoZXJlIGlzIGFuICdYIHdhcyB0eXBpbmcnXG4gICAgdmFyICR0eXBpbmdNZXNzYWdlcyA9IGdldFR5cGluZ01lc3NhZ2VzKGRhdGEpO1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIGlmICgkdHlwaW5nTWVzc2FnZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICBvcHRpb25zLmZhZGUgPSBmYWxzZTtcbiAgICAgICR0eXBpbmdNZXNzYWdlcy5yZW1vdmUoKTtcbiAgICB9ICAgIFxuICAgIHZhciAkdXNlcm5hbWVEaXYgPSAkKCc8c3BhbiBjbGFzcz1cInVzZXJuYW1lXCIvPicpXG4gICAgICAudGV4dChkYXRhLnVzZXJuYW1lKVxuICAgICAgLmNzcygnY29sb3InLCBnZXRVc2VybmFtZUNvbG9yKGRhdGEudXNlcm5hbWUpKTtcblxuICAgIGlmIChkYXRhLnVzZXJuYW1lPT0kc2NvcGUubmljaykge1xuICAgICAgdmFyICRtZXNzYWdlQm9keURpdiA9ICQoJzxzcGFuIGNsYXNzPVwiY2hhdC1yaWdodFwiPicpXG4gICAgICAudGV4dChkYXRhLm1lc3NhZ2UpOyAgXG4gICAgfSBlbHNle1xuICAgICAgdmFyICRtZXNzYWdlQm9keURpdiA9ICQoJzxzcGFuIGNsYXNzPVwiY2hhdC1sZWZ0XCI+JylcbiAgICAgIC50ZXh0KGRhdGEubWVzc2FnZSlcbiAgICAgIC5hdHRyKCdzdHlsZScsXCJiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwOi8vZ3JhcGguZmFjZWJvb2suY29tL1wiK2RhdGEuZm90bytcIi9waWN0dXJlKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XCIpOyAgICAgIFxuICAgIH07XG5cbiAgICBcblxuICAgIHZhciB0eXBpbmdDbGFzcyA9IGRhdGEudHlwaW5nID8gJ3R5cGluZyBjaGF0bG9nJyA6ICcnO1xuICAgIHZhciAkbWVzc2FnZURpdiA9ICQoJzxkaXYgY2xhc3M9XCJcIi8+JykgICAgICBcbiAgICAgIC5hcHBlbmQoICRtZXNzYWdlQm9keURpdik7XG5cbiAgICBhZGRNZXNzYWdlRWxlbWVudCgkbWVzc2FnZURpdiwgb3B0aW9ucyk7XG4gICAgZGl2MnRvcCgpO1xuICB9XG5cbiAgLy8gQWRkcyB0aGUgdmlzdWFsIGNoYXQgdHlwaW5nIG1lc3NhZ2VcbiAgZnVuY3Rpb24gYWRkQ2hhdFR5cGluZyAoZGF0YSkge1xuICAgIGRhdGEudHlwaW5nID0gdHJ1ZTtcbiAgICBkYXRhLm1lc3NhZ2UgPSAnaXMgdHlwaW5nJztcbiAgICAvLyAgUG9yIGFob3JhIG5vXG4gICAgLy8gYWRkQ2hhdE1lc3NhZ2UoZGF0YSk7XG4gIH1cblxuICAvLyBSZW1vdmVzIHRoZSB2aXN1YWwgY2hhdCB0eXBpbmcgbWVzc2FnZVxuICBmdW5jdGlvbiByZW1vdmVDaGF0VHlwaW5nIChkYXRhKSB7XG4gICAgZ2V0VHlwaW5nTWVzc2FnZXMoZGF0YSkuZmFkZU91dChmdW5jdGlvbiAoKSB7XG4gICAgICAkKHRoaXMpLnJlbW92ZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gQWRkcyBhIG1lc3NhZ2UgZWxlbWVudCB0byB0aGUgbWVzc2FnZXMgYW5kIHNjcm9sbHMgdG8gdGhlIGJvdHRvbVxuICAvLyBlbCAtIFRoZSBlbGVtZW50IHRvIGFkZCBhcyBhIG1lc3NhZ2VcbiAgLy8gb3B0aW9ucy5mYWRlIC0gSWYgdGhlIGVsZW1lbnQgc2hvdWxkIGZhZGUtaW4gKGRlZmF1bHQgPSB0cnVlKVxuICAvLyBvcHRpb25zLnByZXBlbmQgLSBJZiB0aGUgZWxlbWVudCBzaG91bGQgcHJlcGVuZFxuICAvLyAgIGFsbCBvdGhlciBtZXNzYWdlcyAoZGVmYXVsdCA9IGZhbHNlKVxuICBmdW5jdGlvbiBhZGRNZXNzYWdlRWxlbWVudCAoZWwsIG9wdGlvbnMpIHtcbiAgICB2YXIgJGVsID0gJChlbCk7XG5cbiAgICAvLyBTZXR1cCBkZWZhdWx0IG9wdGlvbnNcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZhZGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBvcHRpb25zLmZhZGUgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMucHJlcGVuZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIG9wdGlvbnMucHJlcGVuZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIC8vIEFwcGx5IG9wdGlvbnNcbiAgICBpZiAob3B0aW9ucy5mYWRlKSB7XG4gICAgICAkZWwuaGlkZSgpLmZhZGVJbihGQURFX1RJTUUpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5wcmVwZW5kKSB7XG4gICAgICAkbWVzc2FnZXMucHJlcGVuZCgkZWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkbWVzc2FnZXMuYXBwZW5kKCRlbCk7XG4gICAgfVxuICAgICRtZXNzYWdlc1swXS5zY3JvbGxUb3AgPSAkbWVzc2FnZXNbMF0uc2Nyb2xsSGVpZ2h0O1xuICB9XG5cbiAgLy8gUHJldmVudHMgaW5wdXQgZnJvbSBoYXZpbmcgaW5qZWN0ZWQgbWFya3VwXG4gIGZ1bmN0aW9uIGNsZWFuSW5wdXQgKGlucHV0KSB7XG4gICAgcmV0dXJuICQoJzxkaXYvPicpLnRleHQoaW5wdXQpLnRleHQoKTtcbiAgfVxuXG4gIC8vIFVwZGF0ZXMgdGhlIHR5cGluZyBldmVudFxuICBmdW5jdGlvbiB1cGRhdGVUeXBpbmcgKCkge1xuICAgIGlmIChjb25uZWN0ZWQpIHtcbiAgICAgIGlmICghdHlwaW5nKSB7XG4gICAgICAgIHR5cGluZyA9IHRydWU7XG4gICAgICAgIHNvY2tldC5lbWl0KCd0eXBpbmcnKTtcbiAgICAgIH1cbiAgICAgIGxhc3RUeXBpbmdUaW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0eXBpbmdUaW1lciA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XG4gICAgICAgIHZhciB0aW1lRGlmZiA9IHR5cGluZ1RpbWVyIC0gbGFzdFR5cGluZ1RpbWU7XG4gICAgICAgIGlmICh0aW1lRGlmZiA+PSBUWVBJTkdfVElNRVJfTEVOR1RIICYmIHR5cGluZykge1xuICAgICAgICAgIHNvY2tldC5lbWl0KCdzdG9wIHR5cGluZycpO1xuICAgICAgICAgIHR5cGluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9LCBUWVBJTkdfVElNRVJfTEVOR1RIKTtcbiAgICB9XG4gIH1cblxuICAvLyBHZXRzIHRoZSAnWCBpcyB0eXBpbmcnIG1lc3NhZ2VzIG9mIGEgdXNlclxuICBmdW5jdGlvbiBnZXRUeXBpbmdNZXNzYWdlcyAoZGF0YSkge1xuICAgIHJldHVybiAkKCcudHlwaW5nLm1lc3NhZ2UnKS5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgIHJldHVybiAkKHRoaXMpLmRhdGEoJ3VzZXJuYW1lJykgPT09IGRhdGEudXNlcm5hbWU7XG4gICAgfSk7XG4gIH1cblxuICAvLyBHZXRzIHRoZSBjb2xvciBvZiBhIHVzZXJuYW1lIHRocm91Z2ggb3VyIGhhc2ggZnVuY3Rpb25cbiAgZnVuY3Rpb24gZ2V0VXNlcm5hbWVDb2xvciAodXNlcm5hbWUpIHtcbiAgICAvLyBDb21wdXRlIGhhc2ggY29kZVxuICAgIHZhciBoYXNoID0gNztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVzZXJuYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgaGFzaCA9IHVzZXJuYW1lLmNoYXJDb2RlQXQoaSkgKyAoaGFzaCA8PCA1KSAtIGhhc2g7XG4gICAgfVxuICAgIC8vIENhbGN1bGF0ZSBjb2xvclxuICAgIHZhciBpbmRleCA9IE1hdGguYWJzKGhhc2ggJSBDT0xPUlMubGVuZ3RoKTtcbiAgICByZXR1cm4gQ09MT1JTW2luZGV4XTtcbiAgfVxuXG4gIC8vIEtleWJvYXJkIGV2ZW50c1xuXG4gICR3aW5kb3cua2V5ZG93bihmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAvLyBBdXRvLWZvY3VzIHRoZSBjdXJyZW50IGlucHV0IHdoZW4gYSBrZXkgaXMgdHlwZWRcbiAgICBpZiAoIShldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5KSkge1xuICAgICAgJGN1cnJlbnRJbnB1dC5mb2N1cygpO1xuICAgIH1cbiAgICAvLyBXaGVuIHRoZSBjbGllbnQgaGl0cyBFTlRFUiBvbiB0aGVpciBrZXlib2FyZFxuICAgIHNldFVzZXJuYW1lKCk7XG4gICAgaWYgKGV2ZW50LndoaWNoID09PSAxMykge1xuICAgICAgaWYgKHVzZXJuYW1lKSB7ICAgICAgICBcbiAgICAgICAgc2VuZE1lc3NhZ2UoKTtcbiAgICAgICAgc29ja2V0LmVtaXQoJ3N0b3AgdHlwaW5nJyk7XG4gICAgICAgIHR5cGluZyA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0VXNlcm5hbWUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gICRpbnB1dE1lc3NhZ2Uub24oJ2lucHV0JywgZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlVHlwaW5nKCk7XG4gIH0pO1xuXG4gIC8vIENsaWNrIGV2ZW50c1xuXG4gIC8vIEZvY3VzIGlucHV0IHdoZW4gY2xpY2tpbmcgYW55d2hlcmUgb24gbG9naW4gcGFnZVxuICAkbG9naW5QYWdlLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAkY3VycmVudElucHV0LmZvY3VzKCk7XG4gIH0pO1xuXG4gIC8vIEZvY3VzIGlucHV0IHdoZW4gY2xpY2tpbmcgb24gdGhlIG1lc3NhZ2UgaW5wdXQncyBib3JkZXJcbiAgJGlucHV0TWVzc2FnZS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgJGlucHV0TWVzc2FnZS5mb2N1cygpO1xuICB9KTtcblxuICAvLyBTb2NrZXQgZXZlbnRzXG5cbiAgLy8gV2hlbmV2ZXIgdGhlIHNlcnZlciBlbWl0cyAnbG9naW4nLCBsb2cgdGhlIGxvZ2luIG1lc3NhZ2VcbiAgc29ja2V0Lm9uKCdsb2dpbicsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgY29ubmVjdGVkID0gdHJ1ZTtcbiAgICAvLyBEaXNwbGF5IHRoZSB3ZWxjb21lIG1lc3NhZ2VcbiAgICB2YXIgbWVzc2FnZSA9IFwiQmllbnZlbmlkbyBhbCBzb3BvcnRlIGVuIHRpZW1wbyByZWFsIGRlIE5PREVYXCI7XG4gICAgLy8gbG9nKG1lc3NhZ2UsIHtcbiAgICAvLyAgIHByZXBlbmQ6IHRydWVcbiAgICAvLyB9KTtcbiAgICBhZGRQYXJ0aWNpcGFudHNNZXNzYWdlKGRhdGEpO1xuICAgIHNvY2tldC5lbWl0KCdvbmxpbmUgdXNlcnMnLGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICB9KTtcbiAgfSk7XG5cblxuICAvLyBXaGVuZXZlciB0aGUgc2VydmVyIGVtaXRzICduZXcgbWVzc2FnZScsIHVwZGF0ZSB0aGUgY2hhdCBib2R5XG4gIHNvY2tldC5vbignbmV3IG1lc3NhZ2UnLCBmdW5jdGlvbiAoZGF0YSkgeyAgICBcbiAgICBhZGRDaGF0TWVzc2FnZShkYXRhKTtcbiAgICBzb2NrZXQub24oJ3BydWViYScsZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgIH0pO1xuICB9KTtcblxuICAvLyBDb250YXIgdXN1YXJpb3MgZW4gbGluZWFcbiAgc29ja2V0Lm9uKCdwcnVlYmEnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGNvbnNvbGUubG9nKGRhdGEubnVtVXNlcnMpO1xuICAgIGFsZXJ0KGRhdGEpO1xuICAgIFxuICB9KTtcblxuICAvLyBXaGVuZXZlciB0aGUgc2VydmVyIGVtaXRzICd1c2VyIGpvaW5lZCcsIGxvZyBpdCBpbiB0aGUgY2hhdCBib2R5XG4gIHNvY2tldC5vbigndXNlciBqb2luZWQnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGNvbnNvbGUubG9nKGRhdGEudXNlcm5hbWUgKyAnIHNlIHVuacOzIGEgbGEgY29udmVyc2FjacOzbiAnKTtcbiAgICAkc2NvcGUuY29uID0gXCJodHRwOi8vZ3JhcGguZmFjZWJvb2suY29tL1wiK2RhdGEuZm90bytcIi9waWN0dXJlXCI7ICAgIFxuXG4gICAgYWRkUGFydGljaXBhbnRzTWVzc2FnZShkYXRhKTtcbiAgfSk7XG5cbiAgLy8gV2hlbmV2ZXIgdGhlIHNlcnZlciBlbWl0cyAndXNlciBsZWZ0JywgbG9nIGl0IGluIHRoZSBjaGF0IGJvZHlcbiAgc29ja2V0Lm9uKCd1c2VyIGxlZnQnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGNvbnNvbGUubG9nKGRhdGEudXNlcm5hbWUgKyAnIHNlIGhhIGRlc2NvbmVjdGFkbycpO1xuICAgIGFkZFBhcnRpY2lwYW50c01lc3NhZ2UoZGF0YSk7XG4gICAgcmVtb3ZlQ2hhdFR5cGluZyhkYXRhKTtcbiAgfSk7XG5cbiAgLy8gV2hlbmV2ZXIgdGhlIHNlcnZlciBlbWl0cyAndHlwaW5nJywgc2hvdyB0aGUgdHlwaW5nIG1lc3NhZ2VcbiAgc29ja2V0Lm9uKCd0eXBpbmcnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGFkZENoYXRUeXBpbmcoZGF0YSk7XG4gIH0pO1xuXG4gIC8vIFdoZW5ldmVyIHRoZSBzZXJ2ZXIgZW1pdHMgJ3N0b3AgdHlwaW5nJywga2lsbCB0aGUgdHlwaW5nIG1lc3NhZ2VcbiAgc29ja2V0Lm9uKCdzdG9wIHR5cGluZycsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgcmVtb3ZlQ2hhdFR5cGluZyhkYXRhKTtcbiAgfSk7XG5cbiAgc2V0VXNlcm5hbWUoKTtcbn1dKTtcbiIsIid1c2Ugc3RyaWN0JztcbmFuZ3VsYXIubW9kdWxlKCdhcHAuc29wb3J0ZScsIFtdKS5jb250cm9sbGVyKCdmYXFzJyxbJyRzY29wZScsJyRyb3V0ZVBhcmFtcycsJyRodHRwJyxmdW5jdGlvbiggJHNjb3BlLCAkcm91dGVQYXJhbXMsICRodHRwKXtcbiAgXG4gICRodHRwLmdldCgnL2FwaS9zb3BvcnRlL2ZhcXMnKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLHN0YXR1cyxoZWFkZXJzLGNvbmZpZykge1xuICAgICAgICRzY29wZS5jYXRlZ29yaWFzID0gZGF0YTtcbiAgICAgfSk7XG4gICRzY29wZS5jYXRlZ29yaWFfc2VsZWNjaW9uYWRhPScnO1xuICAkc2NvcGUuZmFxX3NlbGVjY2lvbmFkYT0nJztcbiAgXG4gICRzY29wZS5jYXRlZ29yaWFfdGl0dWxvID0gJ03DoXMgbGXDrWRhcyc7XG4gICRzY29wZS5nZXRQcmVndW50YXMgPSBmdW5jdGlvbihjYXRlZ29yaWFfaWQsY2F0ZWdvcmlhKXtcbiAgICBpZiAoY2F0ZWdvcmlhX2lkKSB7XG4gICAgICAkaHR0cC5nZXQoJy9hcGkvc29wb3J0ZS9mYXFzLycrY2F0ZWdvcmlhX2lkKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLHN0YXR1cyxoZWFkZXJzLGNvbmZpZykge1xuICAgICAgICAgJHNjb3BlLmZhcXMgPSBkYXRhOyAgICAgICAgICAgICAgXG4gICAgICAgICAkc2NvcGUuY2F0ZWdvcmlhX3RpdHVsbyA9IGNhdGVnb3JpYTtcbiAgICAgICAgICRzY29wZS5jYXRlZ29yaWFfc2VsZWNjaW9uYWRhPWNhdGVnb3JpYV9pZDtcbiAgICAgICB9KTtcbiAgICAgIH1lbHNle1xuICAgICAgICAgICRzY29wZS5jYXRlZ29yaWFfdGl0dWxvID0gJ03DoXMgbGXDrWRhcyc7XG4gICAgICB9XG4gICAgfVxuICAkc2NvcGUuZ2V0RmFxID0gZnVuY3Rpb24oZmFxX2lkKXsgICAgICBcbiAgXG4gICAgICAkaHR0cC5nZXQoJy9hcGkvc29wb3J0ZS9mYXEvJytmYXFfaWQpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsc3RhdHVzLGhlYWRlcnMsY29uZmlnKSB7ICAgICAgICBcbiAgICAgICAgICAkc2NvcGUuZmFxX3NlbGVjY2lvbmFkYSA9IGZhcV9pZDtcbiAgICAgICAgICAkc2NvcGUuZmFxID0gZGF0YTtcbiAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgYWxlcnQoJ09jdXJyacOzIHVuIGVycm9yIGFsIGNhcmdhciBsYSBwcmVndW50YScpO1xuICAgICAgIH0pOyAgICAgIFxuICAgIH1cblxufV0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuYW5ndWxhci5tb2R1bGUoJ2FwcC50aWVuZGEnLCBbXSlcbiAgLmNvbnRyb2xsZXIoJ1RpZW5kYUN0cmwnLGZ1bmN0aW9uKCRzY29wZSwkbW9kYWwsJGxvZyxQcm9kdWN0bywkcm91dGVQYXJhbXMpeyAgICBcblxuICAgICRzY29wZS5Gb3JtQWRkUHJvZHVjdG8gPSB7fTtcbiAgICAkc2NvcGUubWlzUHJvZHVjdG9zID0ge307XG4gICAgUHJvZHVjdG8uZ2V0Q2F0ZWdvcmlhcyhmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICBpZiAoZXJyKSB7YWxlcnQoJ0Vycm9yIGFsIGNhcmdhciBsYXMgY2F0ZWdvcsOtYXMnKTt9XG4gICAgICBlbHNle1xuICAgICAgICAkc2NvcGUuY2F0ZWdvcmlhcyA9IGRhdGE7ICAgICAgICBcbiAgICAgIH07XG4gICAgfSk7XG4gICAgXG4gICAgXG4gICAgUHJvZHVjdG8uZGV0YWlsKCRyb3V0ZVBhcmFtcy5wcm9kdWN0b19pZCxmdW5jdGlvbiAoZXJyLGRhdGEpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgJHNjb3BlLm5vdGlmeSgnZGFuZ2VyJyxcIkVycm9yIGFsIGNhcmdhciBlbCBwcm9kdWN0b1wiKVxuICAgICAgfSBlbHNle1xuICAgICAgICAkc2NvcGUucHJvZHVjdG8gPSBkYXRhO1xuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgIH07XG4gICAgfSk7XG4gICAgXG5cbn0pO1xuIiwiXG4vKiBNb2RlbG8gcGFnb3MgKi9cblxuYW5ndWxhci5tb2R1bGUoJ01vZGVsb1VzdWFyaW8nLFsnbmdSb3V0ZSddKVxuICAgICAgICAvL2VzdG8gc2UgcXVlZGEsIHBlcm8gc29sbyBjb21vIGFkb3JubyBwYXJhIGZ1dHVyYXMgcmVmZXJlbmNpYXNcbiAgICAgICAgLmZhY3RvcnkgKCdVc3VhcmlvJywgWyckaHR0cCcsZnVuY3Rpb24gKCRodHRwKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBjcmVhdGU6ZnVuY3Rpb24gKGRhdG9zLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAkaHR0cCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgICAgOiAgZGF0b3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCAgOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHVybCAgICAgOiAnL2FwaS91c3VhcmlvL2FkZCdcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCdPaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygnRXJyb3InLG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwZXJmaWw6ZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS91c3VhcmlvL3BlcmZpbCcpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBkYXRhOyAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVwZGF0ZTpmdW5jdGlvbiAoZGF0b3MsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3VzdWFyaW8vZWRpdCdcbiAgICAgICAgICAgICAgICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwnT2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ0Vycm9yJyxudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdXBkYXRlUGFzczpmdW5jdGlvbiAoZGF0b3MsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICRodHRwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSAgICA6ICBkYXRvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kICA6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICAgICA6ICcvYXBpL3VzdWFyaW8vZWRpdFBhc3MnXG4gICAgICAgICAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsJ09rJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCdFcnJvcicsbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG5pY2s6ZnVuY3Rpb24gKG5pY2sgLGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvdXN1YXJpby9uaWNrLycrbmljaykuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuIGRhdGE7ICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEhPVwiXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCxkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07ICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG59XSk7XG4iLCIndXNlIHN0cmljdCc7XG5hbmd1bGFyLm1vZHVsZSgnYXBwLnVzdWFyaW8nLCBbXSlcbiAgLmNvbnRyb2xsZXIoJ1VzdWFyaW9DdHJsJyxmdW5jdGlvbigkc2NvcGUsJG1vZGFsLCRsb2csJHJvdXRlUGFyYW1zLCRodHRwLFVzdWFyaW8sJHJvdXRlKXsgIFxuICAgICRzY29wZS5Gb3JtRWRpdGFyUGVyZmlsID0ge307XG4gICAgJHNjb3BlLkZvcm1DaGFuZ2VQYXNzd29yZCA9IHt9O1xuXG4gICAgdmFyIGdldFBlcmZpbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIFVzdWFyaW8ucGVyZmlsKGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdPcHMhIFNvbWV0aGluZyB3ZW50IHdyb25nLCBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyJyk7XG4gICAgICAgICAgICB9IGVsc2V7ICAgICAgICAgICAgXG4gICAgICAgICAgICAgICRzY29wZS5Gb3JtRWRpdGFyUGVyZmlsID0gZGF0YTtcbiAgICAgICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9XG4gICAgICBcbiAgICBnZXRQZXJmaWwoKTtcblxuICAgICAgJHNjb3BlLmVkaXRhclBlcmZpbCA9IGZ1bmN0aW9uKCkgeyAgICAgICAgICAgICAgICBcbiAgICAgICAgYWxlcnQoJ2FzJyk7XG4gICAgICAgIHZhciBkYXRhID0gJHNjb3BlLkZvcm1FZGl0YXJQZXJmaWw7ICAgICAgXG4gICAgICAgIFVzdWFyaW8udXBkYXRlKGRhdGEsZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChlcnIpIHsgICAgICAgICAgICBcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ09wcyEgU29tZXRoaW5nIHdlbnQgd3JvbmcsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXInKTtcbiAgICAgICAgICAgIGFsZXJ0KCdubycpO1xuICAgICAgICAgIH0gZWxzZXsgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdEb25lIScpO1xuICAgICAgICAgICAgYWxlcnQoJ3NpJyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUuY2hlY2tOaWNrID0gZnVuY3Rpb24gKG5pY2spIHtcbiAgICAgICAgVXN1YXJpby5uaWNrKG5pY2ssZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICAkKFwiI25pY2tNc2pcIikudGV4dChkYXRhKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KVxuICAgICAgfVxuXG4gICAgICAkc2NvcGUuY29pbmNpZGVuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIHBhc3MxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXNzMVwiKS52YWx1ZTtcbiAgICAgICAgICB2YXIgcGFzczIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBhc3MyXCIpLnZhbHVlOyAgICAgICAgICBcbiAgICAgICAgICB2YXIgb2sgPSB0cnVlO1xuICAgICAgICAgIGlmIChwYXNzMSAhPSBwYXNzMikge1xuICAgICAgICAgICAgICAvL2FsZXJ0KFwiUGFzc3dvcmRzIERvIG5vdCBtYXRjaFwiKTtcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXNzMVwiKS5zdHlsZS5ib3JkZXJDb2xvciA9IFwiI0UzNDIzNFwiO1xuICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBhc3MyXCIpLnN0eWxlLmJvcmRlckNvbG9yID0gXCIjRTM0MjM0XCI7XG4gICAgICAgICAgICAgIG9rID0gZmFsc2U7XG4gICAgICAgICAgICAgICQoXCIjcGFzc1N1Ym1pdFwiKS5hdHRyKFwiZGlzYWJsZWRcIix0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGFzczFcIikuc3R5bGUuYm9yZGVyQ29sb3IgPSBcIiMwNEI0MDRcIjtcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXNzMlwiKS5zdHlsZS5ib3JkZXJDb2xvciA9IFwiIzA0QjQwNFwiO1xuICAgICAgICAgICAgICAkKFwiI3Bhc3NTdWJtaXRcIikuYXR0cihcImRpc2FibGVkXCIsZmFsc2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gb2s7XG4gICAgICB9XG5cbiAgICAgICRzY29wZS5jaGFuZ2VQYXNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0YSA9ICRzY29wZS5Gb3JtQ2hhbmdlUGFzc3dvcmQ7XG4gICAgICAgIFVzdWFyaW8udXBkYXRlUGFzcyhkYXRhLGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7ICAgICAgICAgICAgXG4gICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdPcHMhIFNvbWV0aGluZyB3ZW50IHdyb25nLCBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyJyk7XG4gICAgICAgICAgfSBlbHNleyAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgJHNjb3BlLm5vdGlmeSgnc3VjY2VzcycsJ0RvbmUhJyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cblxuXG4gICAgICAkc2NvcGUudXBsb2FkRmlsZSA9IGZ1bmN0aW9uKGZpbGVzKSB7XG4gICAgICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgIC8vVGFrZSB0aGUgZmlyc3Qgc2VsZWN0ZWQgZmlsZVxuICAgICAgICAgICAgZmQuYXBwZW5kKFwiZmlsZVwiLCBmaWxlc1swXSk7ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3VwbG9hZCcsIGZkLCB7XG4gICAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eVxuICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICRyb3V0ZS5yZWxvYWQ7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdUb2RvIHNhbGnDsyBiaWVuJyk7XG4gICAgICAgICAgICAgIGdldFBlcmZpbCgpO1xuICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAkc2NvcGUubm90aWZ5KCdkYW5nZXInLCdUb2RvIHNhbGnDsyBtYWwnKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH07XG5cbiAgICAgICRzY29wZS51cGxvYWRMb2dvID0gZnVuY3Rpb24oZmlsZXMpIHtcbiAgICAgICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICAgICAgLy9UYWtlIHRoZSBmaXJzdCBzZWxlY3RlZCBmaWxlXG4gICAgICAgICAgICBmZC5hcHBlbmQoXCJmaWxlXCIsIGZpbGVzWzBdKTtcblxuXG4gICAgICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3VwbG9hZCcsIGZkLCB7XG4gICAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eVxuICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ3N1Y2Nlc3MnLCdUb2RvIHNhbGnDsyBiaWVuJyk7XG4gICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICRzY29wZS5ub3RpZnkoJ2RhbmdlcicsJ1RvZG8gc2FsacOzIG1hbCcpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfTtcblxuXG59KTtcblxuXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=